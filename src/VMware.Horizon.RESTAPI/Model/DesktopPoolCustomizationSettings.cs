/* 
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = VMware.Horizon.RESTAPI.Client.SwaggerDateConverter;

namespace VMware.Horizon.RESTAPI.Model
{
    /// <summary>
    /// Customization settings.
    /// </summary>
    [DataContract]
    public partial class DesktopPoolCustomizationSettings :  IEquatable<DesktopPoolCustomizationSettings>, IValidatableObject
    {
        /// <summary>
        /// Type of customization to use. * NONE: Applicable To: Full clone automated desktop pools.&lt;br&gt;No customization. * QUICK_PREP: Applicable To: Linked clone automated desktop pools.&lt;br&gt;QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image. * SYS_PREP: Applicable To: All automated desktop pools.&lt;br&gt;Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep. * CLONE_PREP: Applicable To: Instant clone automated desktop pools.&lt;br&gt;ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image.
        /// </summary>
        /// <value>Type of customization to use. * NONE: Applicable To: Full clone automated desktop pools.&lt;br&gt;No customization. * QUICK_PREP: Applicable To: Linked clone automated desktop pools.&lt;br&gt;QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image. * SYS_PREP: Applicable To: All automated desktop pools.&lt;br&gt;Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep. * CLONE_PREP: Applicable To: Instant clone automated desktop pools.&lt;br&gt;ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CustomizationTypeEnum
        {
            
            /// <summary>
            /// Enum NONE for value: NONE
            /// </summary>
            [EnumMember(Value = "NONE")]
            NONE = 1,
            
            /// <summary>
            /// Enum QUICKPREP for value: QUICK_PREP
            /// </summary>
            [EnumMember(Value = "QUICK_PREP")]
            QUICKPREP = 2,
            
            /// <summary>
            /// Enum SYSPREP for value: SYS_PREP
            /// </summary>
            [EnumMember(Value = "SYS_PREP")]
            SYSPREP = 3,
            
            /// <summary>
            /// Enum CLONEPREP for value: CLONE_PREP
            /// </summary>
            [EnumMember(Value = "CLONE_PREP")]
            CLONEPREP = 4
        }

        /// <summary>
        /// Type of customization to use. * NONE: Applicable To: Full clone automated desktop pools.&lt;br&gt;No customization. * QUICK_PREP: Applicable To: Linked clone automated desktop pools.&lt;br&gt;QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image. * SYS_PREP: Applicable To: All automated desktop pools.&lt;br&gt;Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep. * CLONE_PREP: Applicable To: Instant clone automated desktop pools.&lt;br&gt;ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image.
        /// </summary>
        /// <value>Type of customization to use. * NONE: Applicable To: Full clone automated desktop pools.&lt;br&gt;No customization. * QUICK_PREP: Applicable To: Linked clone automated desktop pools.&lt;br&gt;QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image. * SYS_PREP: Applicable To: All automated desktop pools.&lt;br&gt;Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep. * CLONE_PREP: Applicable To: Instant clone automated desktop pools.&lt;br&gt;ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image.</value>
        [DataMember(Name="customization_type", EmitDefaultValue=false)]
        public CustomizationTypeEnum? CustomizationType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DesktopPoolCustomizationSettings" /> class.
        /// </summary>
        /// <param name="adContainerRdn">Applicable To: Linked/instant clone automated desktop pools.&lt;br&gt;View Composer and Instant Clone Engine Active Directory container for QuickPrep and ClonePrep..</param>
        /// <param name="cloneprepCustomizationSettings">Settings when ClonePrep customization is requested..</param>
        /// <param name="customizationType">Type of customization to use. * NONE: Applicable To: Full clone automated desktop pools.&lt;br&gt;No customization. * QUICK_PREP: Applicable To: Linked clone automated desktop pools.&lt;br&gt;QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image. * SYS_PREP: Applicable To: All automated desktop pools.&lt;br&gt;Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep. * CLONE_PREP: Applicable To: Instant clone automated desktop pools.&lt;br&gt;ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image..</param>
        /// <param name="doNotPowerOnVmsAfterCreation">Whether to power on VMs after creation. This is the settings when customization will be done manually..</param>
        /// <param name="instantCloneDomainAccountId">Applicable To: Instant clone automated desktop pools.&lt;br&gt;Instant clone domain account. This is the administrator which will add the machines to its domain upon creation..</param>
        /// <param name="quickprepCustomizationSettings">Settings when QuickPrep customization is requested..</param>
        /// <param name="reusePreExistingAccounts">Applicable To: Manual and automated desktop pools.&lt;br&gt;Whether to allow the use of existing AD computer accounts when the VM names of newly created clones match the existing computer account names. This is applicable only for automated desktop pools..</param>
        /// <param name="sysprepCustomizationSpecId">Customization specification to use when Sysprep customization is requested..</param>
        /// <param name="viewComposerDomainAccountId">Applicable To: Linked clone automated desktop pools.&lt;br&gt;View Composer domain account. This is the administrator which will add the machines to its domain upon creation. This must be set for linked-clone automated desktop pools..</param>
        public DesktopPoolCustomizationSettings(string adContainerRdn = default(string), DesktopPoolCloneprepCustomizationSettings cloneprepCustomizationSettings = default(DesktopPoolCloneprepCustomizationSettings), CustomizationTypeEnum? customizationType = default(CustomizationTypeEnum?), bool? doNotPowerOnVmsAfterCreation = default(bool?), string instantCloneDomainAccountId = default(string), DesktopPoolQuickprepCustomizationSettings quickprepCustomizationSettings = default(DesktopPoolQuickprepCustomizationSettings), bool? reusePreExistingAccounts = default(bool?), string sysprepCustomizationSpecId = default(string), string viewComposerDomainAccountId = default(string))
        {
            this.AdContainerRdn = adContainerRdn;
            this.CloneprepCustomizationSettings = cloneprepCustomizationSettings;
            this.CustomizationType = customizationType;
            this.DoNotPowerOnVmsAfterCreation = doNotPowerOnVmsAfterCreation;
            this.InstantCloneDomainAccountId = instantCloneDomainAccountId;
            this.QuickprepCustomizationSettings = quickprepCustomizationSettings;
            this.ReusePreExistingAccounts = reusePreExistingAccounts;
            this.SysprepCustomizationSpecId = sysprepCustomizationSpecId;
            this.ViewComposerDomainAccountId = viewComposerDomainAccountId;
        }
        
        /// <summary>
        /// Applicable To: Linked/instant clone automated desktop pools.&lt;br&gt;View Composer and Instant Clone Engine Active Directory container for QuickPrep and ClonePrep.
        /// </summary>
        /// <value>Applicable To: Linked/instant clone automated desktop pools.&lt;br&gt;View Composer and Instant Clone Engine Active Directory container for QuickPrep and ClonePrep.</value>
        [DataMember(Name="ad_container_rdn", EmitDefaultValue=false)]
        public string AdContainerRdn { get; set; }

        /// <summary>
        /// Settings when ClonePrep customization is requested.
        /// </summary>
        /// <value>Settings when ClonePrep customization is requested.</value>
        [DataMember(Name="cloneprep_customization_settings", EmitDefaultValue=false)]
        public DesktopPoolCloneprepCustomizationSettings CloneprepCustomizationSettings { get; set; }


        /// <summary>
        /// Whether to power on VMs after creation. This is the settings when customization will be done manually.
        /// </summary>
        /// <value>Whether to power on VMs after creation. This is the settings when customization will be done manually.</value>
        [DataMember(Name="do_not_power_on_vms_after_creation", EmitDefaultValue=false)]
        public bool? DoNotPowerOnVmsAfterCreation { get; set; }

        /// <summary>
        /// Applicable To: Instant clone automated desktop pools.&lt;br&gt;Instant clone domain account. This is the administrator which will add the machines to its domain upon creation.
        /// </summary>
        /// <value>Applicable To: Instant clone automated desktop pools.&lt;br&gt;Instant clone domain account. This is the administrator which will add the machines to its domain upon creation.</value>
        [DataMember(Name="instant_clone_domain_account_id", EmitDefaultValue=false)]
        public string InstantCloneDomainAccountId { get; set; }

        /// <summary>
        /// Settings when QuickPrep customization is requested.
        /// </summary>
        /// <value>Settings when QuickPrep customization is requested.</value>
        [DataMember(Name="quickprep_customization_settings", EmitDefaultValue=false)]
        public DesktopPoolQuickprepCustomizationSettings QuickprepCustomizationSettings { get; set; }

        /// <summary>
        /// Applicable To: Manual and automated desktop pools.&lt;br&gt;Whether to allow the use of existing AD computer accounts when the VM names of newly created clones match the existing computer account names. This is applicable only for automated desktop pools.
        /// </summary>
        /// <value>Applicable To: Manual and automated desktop pools.&lt;br&gt;Whether to allow the use of existing AD computer accounts when the VM names of newly created clones match the existing computer account names. This is applicable only for automated desktop pools.</value>
        [DataMember(Name="reuse_pre_existing_accounts", EmitDefaultValue=false)]
        public bool? ReusePreExistingAccounts { get; set; }

        /// <summary>
        /// Customization specification to use when Sysprep customization is requested.
        /// </summary>
        /// <value>Customization specification to use when Sysprep customization is requested.</value>
        [DataMember(Name="sysprep_customization_spec_id", EmitDefaultValue=false)]
        public string SysprepCustomizationSpecId { get; set; }

        /// <summary>
        /// Applicable To: Linked clone automated desktop pools.&lt;br&gt;View Composer domain account. This is the administrator which will add the machines to its domain upon creation. This must be set for linked-clone automated desktop pools.
        /// </summary>
        /// <value>Applicable To: Linked clone automated desktop pools.&lt;br&gt;View Composer domain account. This is the administrator which will add the machines to its domain upon creation. This must be set for linked-clone automated desktop pools.</value>
        [DataMember(Name="view_composer_domain_account_id", EmitDefaultValue=false)]
        public string ViewComposerDomainAccountId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DesktopPoolCustomizationSettings {\n");
            sb.Append("  AdContainerRdn: ").Append(AdContainerRdn).Append("\n");
            sb.Append("  CloneprepCustomizationSettings: ").Append(CloneprepCustomizationSettings).Append("\n");
            sb.Append("  CustomizationType: ").Append(CustomizationType).Append("\n");
            sb.Append("  DoNotPowerOnVmsAfterCreation: ").Append(DoNotPowerOnVmsAfterCreation).Append("\n");
            sb.Append("  InstantCloneDomainAccountId: ").Append(InstantCloneDomainAccountId).Append("\n");
            sb.Append("  QuickprepCustomizationSettings: ").Append(QuickprepCustomizationSettings).Append("\n");
            sb.Append("  ReusePreExistingAccounts: ").Append(ReusePreExistingAccounts).Append("\n");
            sb.Append("  SysprepCustomizationSpecId: ").Append(SysprepCustomizationSpecId).Append("\n");
            sb.Append("  ViewComposerDomainAccountId: ").Append(ViewComposerDomainAccountId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DesktopPoolCustomizationSettings);
        }

        /// <summary>
        /// Returns true if DesktopPoolCustomizationSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of DesktopPoolCustomizationSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DesktopPoolCustomizationSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdContainerRdn == input.AdContainerRdn ||
                    (this.AdContainerRdn != null &&
                    this.AdContainerRdn.Equals(input.AdContainerRdn))
                ) && 
                (
                    this.CloneprepCustomizationSettings == input.CloneprepCustomizationSettings ||
                    (this.CloneprepCustomizationSettings != null &&
                    this.CloneprepCustomizationSettings.Equals(input.CloneprepCustomizationSettings))
                ) && 
                (
                    this.CustomizationType == input.CustomizationType ||
                    (this.CustomizationType != null &&
                    this.CustomizationType.Equals(input.CustomizationType))
                ) && 
                (
                    this.DoNotPowerOnVmsAfterCreation == input.DoNotPowerOnVmsAfterCreation ||
                    (this.DoNotPowerOnVmsAfterCreation != null &&
                    this.DoNotPowerOnVmsAfterCreation.Equals(input.DoNotPowerOnVmsAfterCreation))
                ) && 
                (
                    this.InstantCloneDomainAccountId == input.InstantCloneDomainAccountId ||
                    (this.InstantCloneDomainAccountId != null &&
                    this.InstantCloneDomainAccountId.Equals(input.InstantCloneDomainAccountId))
                ) && 
                (
                    this.QuickprepCustomizationSettings == input.QuickprepCustomizationSettings ||
                    (this.QuickprepCustomizationSettings != null &&
                    this.QuickprepCustomizationSettings.Equals(input.QuickprepCustomizationSettings))
                ) && 
                (
                    this.ReusePreExistingAccounts == input.ReusePreExistingAccounts ||
                    (this.ReusePreExistingAccounts != null &&
                    this.ReusePreExistingAccounts.Equals(input.ReusePreExistingAccounts))
                ) && 
                (
                    this.SysprepCustomizationSpecId == input.SysprepCustomizationSpecId ||
                    (this.SysprepCustomizationSpecId != null &&
                    this.SysprepCustomizationSpecId.Equals(input.SysprepCustomizationSpecId))
                ) && 
                (
                    this.ViewComposerDomainAccountId == input.ViewComposerDomainAccountId ||
                    (this.ViewComposerDomainAccountId != null &&
                    this.ViewComposerDomainAccountId.Equals(input.ViewComposerDomainAccountId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdContainerRdn != null)
                    hashCode = hashCode * 59 + this.AdContainerRdn.GetHashCode();
                if (this.CloneprepCustomizationSettings != null)
                    hashCode = hashCode * 59 + this.CloneprepCustomizationSettings.GetHashCode();
                if (this.CustomizationType != null)
                    hashCode = hashCode * 59 + this.CustomizationType.GetHashCode();
                if (this.DoNotPowerOnVmsAfterCreation != null)
                    hashCode = hashCode * 59 + this.DoNotPowerOnVmsAfterCreation.GetHashCode();
                if (this.InstantCloneDomainAccountId != null)
                    hashCode = hashCode * 59 + this.InstantCloneDomainAccountId.GetHashCode();
                if (this.QuickprepCustomizationSettings != null)
                    hashCode = hashCode * 59 + this.QuickprepCustomizationSettings.GetHashCode();
                if (this.ReusePreExistingAccounts != null)
                    hashCode = hashCode * 59 + this.ReusePreExistingAccounts.GetHashCode();
                if (this.SysprepCustomizationSpecId != null)
                    hashCode = hashCode * 59 + this.SysprepCustomizationSpecId.GetHashCode();
                if (this.ViewComposerDomainAccountId != null)
                    hashCode = hashCode * 59 + this.ViewComposerDomainAccountId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
