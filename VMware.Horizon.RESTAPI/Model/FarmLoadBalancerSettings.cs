/* 
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = VMware.Horizon.RESTAPI.Client.SwaggerDateConverter;

namespace VMware.Horizon.RESTAPI.Model
{
    /// <summary>
    /// Settings for load balancing the session requests across the RDS servers in the farm.
    /// </summary>
    [DataContract]
    public partial class FarmLoadBalancerSettings :  IEquatable<FarmLoadBalancerSettings>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FarmLoadBalancerSettings" /> class.
        /// </summary>
        /// <param name="customScriptInUse">Indicates whether to use custom scripts for Load Balancing.Default is false..</param>
        /// <param name="lbMetricSettings">Metrics used for load balancing. Will be set only when custom_script_in_use is set to false..</param>
        public FarmLoadBalancerSettings(bool? customScriptInUse = default(bool?), LoadBalancerMetricSettings lbMetricSettings = default(LoadBalancerMetricSettings))
        {
            this.CustomScriptInUse = customScriptInUse;
            this.LbMetricSettings = lbMetricSettings;
        }
        
        /// <summary>
        /// Indicates whether to use custom scripts for Load Balancing.Default is false.
        /// </summary>
        /// <value>Indicates whether to use custom scripts for Load Balancing.Default is false.</value>
        [DataMember(Name="custom_script_in_use", EmitDefaultValue=false)]
        public bool? CustomScriptInUse { get; set; }

        /// <summary>
        /// Metrics used for load balancing. Will be set only when custom_script_in_use is set to false.
        /// </summary>
        /// <value>Metrics used for load balancing. Will be set only when custom_script_in_use is set to false.</value>
        [DataMember(Name="lb_metric_settings", EmitDefaultValue=false)]
        public LoadBalancerMetricSettings LbMetricSettings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FarmLoadBalancerSettings {\n");
            sb.Append("  CustomScriptInUse: ").Append(CustomScriptInUse).Append("\n");
            sb.Append("  LbMetricSettings: ").Append(LbMetricSettings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FarmLoadBalancerSettings);
        }

        /// <summary>
        /// Returns true if FarmLoadBalancerSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of FarmLoadBalancerSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FarmLoadBalancerSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CustomScriptInUse == input.CustomScriptInUse ||
                    (this.CustomScriptInUse != null &&
                    this.CustomScriptInUse.Equals(input.CustomScriptInUse))
                ) && 
                (
                    this.LbMetricSettings == input.LbMetricSettings ||
                    (this.LbMetricSettings != null &&
                    this.LbMetricSettings.Equals(input.LbMetricSettings))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomScriptInUse != null)
                    hashCode = hashCode * 59 + this.CustomScriptInUse.GetHashCode();
                if (this.LbMetricSettings != null)
                    hashCode = hashCode * 59 + this.LbMetricSettings.GetHashCode();
                return hashCode;
            }
        }
    }

}
