{
  "swagger" : "2.0",
  "info" : {
    "description" : "Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.",
    "title" : "Horizon Server API",
    "license" : {
      "name" : "Copyright Â© 1998 - 2020 VMware, Inc. All rights reserved."
    },
	"version": "v1"
  },
  "host" : "localhost",
  "basePath" : "/rest",
  "tags" : [ {
    "name" : "Auth",
    "description" : "APIs for Authentication and Authorization"
  }, {
    "name" : "Config",
    "description" : "APIs for configuration"
  }, {
    "name" : "Entitlements",
    "description" : "APIs for entitlement of resources"
  }, {
    "name" : "External",
    "description" : "APIs for resources that are external to Horizon environment. These APIs make live calls to the external systems"
  }, {
    "name" : "Inventory",
    "description" : "APIs for inventory resources"
  }, {
    "name" : "Monitor",
    "description" : "APIs for monitoring services"
  } ],
  "paths" : {
    "/config/v1/environment-properties" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Retrieves the environment settings.",
        "operationId" : "getEnvironmentUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EnvironmentInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/ic-domain-accounts" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists instant clone domain accounts of the environment.",
        "operationId" : "listICDomainAccounts",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InstantCloneDomainAccountInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates instant clone domain account.",
        "operationId" : "createICDomainAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Instant clone domain account object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstantCloneDomainAccountCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/ic-domain-accounts/{id}" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Gets instant clone domain account.",
        "operationId" : "getICDomainAccount",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InstantCloneDomainAccountInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates instant clone domain account.",
        "operationId" : "updateICDomainAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Instant clone domain account object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstantCloneDomainAccountUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Deletes instant clone domain account.",
        "operationId" : "deleteICDomainAccount",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-assets" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists image management assets.",
        "operationId" : "listIMAssets",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "im_version_id",
          "in" : "query",
          "description" : "Image management version ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ImageManagementAssetInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates image management asset.",
        "operationId" : "createIMAsset",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management asset object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementAssetCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-assets/action/bulk-create" : {
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates one or more image management assets. Each of the index of result in the response, correspond to the index of the original asset.",
        "operationId" : "createIMAssets",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Image management asset object to be created in bulk.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ImageManagementAssetCreateSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-assets/{id}" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Gets image management asset.",
        "operationId" : "getIMAsset",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ImageManagementAssetInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates image management asset.",
        "operationId" : "updateIMAsset",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management asset object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementAssetUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Deletes image management asset.",
        "operationId" : "deleteIMAsset",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-streams" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists image management streams.",
        "operationId" : "listIMStreams",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ImageManagementStreamInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates image management stream.",
        "operationId" : "createIMStream",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management stream object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementStreamCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-streams/action/bulk-create" : {
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates one or more image management streams. Each of the index of result in the response, correspond to the index of the original stream.",
        "operationId" : "createIMStreams",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Image management stream object to be created in bulk.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ImageManagementStreamCreateSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-streams/{id}" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Gets image management stream.",
        "operationId" : "getIMStream",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ImageManagementStreamInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates image management stream.",
        "operationId" : "updateIMStream",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management stream object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementStreamUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Deletes image management stream.",
        "operationId" : "deleteIMStream",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-tags" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists image management tags.",
        "operationId" : "listIMTags",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "im_stream_id",
          "in" : "query",
          "description" : "Image management stream ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ImageManagementTagInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates image management tag.",
        "operationId" : "createIMTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management tag object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementTagCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-tags/action/bulk-create" : {
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates one or more image management tags. Each of the index of result in the response, correspond to the index of the original tag.",
        "operationId" : "createIMTags",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Image management tag object to be created in bulk.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ImageManagementTagCreateSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-tags/{id}" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Gets image management tag.",
        "operationId" : "getIMTag",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ImageManagementTagInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates image management tag.",
        "operationId" : "updateIMTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management tag object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementTagUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Deletes image management tag.",
        "operationId" : "deleteIMTag",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-versions" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists image management versions.",
        "operationId" : "listIMVersions",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "im_stream_id",
          "in" : "query",
          "description" : "Image management stream ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ImageManagementVersionInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates image management version.",
        "operationId" : "createIMVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management version object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementVersionCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-versions/action/bulk-create" : {
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Creates one or more image management versions. Each of the index of result in the response, correspond to the index of the original version.",
        "operationId" : "createIMVersions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Image management version object to be created in bulk.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ImageManagementVersionCreateSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/im-versions/{id}" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Gets image management version.",
        "operationId" : "getIMVersion",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ImageManagementVersionInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates image management version.",
        "operationId" : "updateIMVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Image management version object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ImageManagementVersionUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Deletes image management version.",
        "operationId" : "deleteIMVersion",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/rcx/clients" : {
      "post" : {
        "tags" : [ "Config" ],
        "summary" : "Registers the RCX client",
        "operationId" : "registerRCXClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "RCX client object to be registered.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RCXClientRegisterSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/rcx/clients/{id}" : {
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates the given RCX client.",
        "operationId" : "updateRCXClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "RCX client object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RCXClientUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Config" ],
        "summary" : "Unregisters the given RCX Client",
        "operationId" : "unregisterRCXClient",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/rcx/servers" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists RCX servers of the cluster.",
        "operationId" : "listRCXServers",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RCXServerInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/settings" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Retrieves the configuration settings.",
        "operationId" : "getSettingsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SettingsInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates the configuration settings.",
        "operationId" : "updateSettingsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Configuration settings object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SettingsUpdateSpec"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/settings/feature" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Retrieves the feature settings.",
        "operationId" : "getFeatureSettingsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FeatureSettings"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates the feature settings.",
        "operationId" : "updateFeatureSettingsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Feature settings object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FeatureSettingsUpdateSpec"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/settings/general" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Retrieves the general settings.",
        "operationId" : "getGeneralSettingsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GeneralSettings"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates the general settings.",
        "operationId" : "updateGeneralSettingsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "General settings object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GeneralSettingsUpdateSpec"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/settings/security" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Retrieves the security settings.",
        "operationId" : "getSecuritySettingsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecuritySettings"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Config" ],
        "summary" : "Updates the security settings.",
        "operationId" : "updateSecuritySettingsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Security settings object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SecuritySettingsUpdateSpec"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/config/v1/virtual-centers" : {
      "get" : {
        "tags" : [ "Config" ],
        "summary" : "Lists Virtual Centers configured in the environment.",
        "operationId" : "listVCInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualCenterInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/entitlements/v1/application-pools" : {
      "get" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Lists the entitlements for Application Pools in the environment.",
        "description" : "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For Pagination, optional query params of 'page' and 'size' need to be sent.<br/>For Filters, refer to 'EntitlementInfo' model description to find supported filters on specific field.<br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in documentation.",
        "operationId" : "listApplicationPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EntitlementInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Create the bulk entitlements for a set of application pools",
        "description" : "The input spec must not contain duplicate Ids.",
        "operationId" : "bulkCreateApplicationPoolEntitlements",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Specifications for bulk application entitlements to be created.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntitlementSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkEntitlementResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Delete the bulk entitlements for a set of application pools",
        "description" : "The input spec must not contain duplicate Ids.",
        "operationId" : "bulkDeleteApplicationPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Specifications for bulk application entitlements to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntitlementSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkEntitlementResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/entitlements/v1/application-pools/{id}" : {
      "get" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Returns the IDs of users or groups entitled to a given application pool.",
        "operationId" : "getApplicationPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EntitlementInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/entitlements/v1/desktop-pools" : {
      "get" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Lists the entitlements for Desktop Pools in the environment.",
        "description" : "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For Pagination, optional query params of 'page' and 'size' need to be sent.<br/>For Filters, refer to 'EntitlementInfo' model description to find supported filters on specific field.<br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in documentation.",
        "operationId" : "listDesktopPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EntitlementInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Create the bulk entitlements for a set of desktop pools",
        "description" : "The input spec must not contain duplicate Ids.",
        "operationId" : "bulkCreateDesktopPoolEntitlements",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Specifications for bulk desktop entitlements to be created.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntitlementSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkEntitlementResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Delete the bulk entitlements for a set of desktop pools",
        "description" : "The input spec must not contain duplicate Ids.",
        "operationId" : "bulkDeleteDesktopPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Specifications for bulk desktop entitlements to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntitlementSpec"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkEntitlementResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/entitlements/v1/desktop-pools/{id}" : {
      "get" : {
        "tags" : [ "Entitlements" ],
        "summary" : "Returns the IDs of users or groups entitled to a given desktop pool.",
        "operationId" : "getDesktopPoolEntitlements",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EntitlementInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/ad-domains" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists information related to AD Domains of the environment.",
        "operationId" : "listADDomains",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ADDomainInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/ad-users-or-groups" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists AD users or groups information.",
        "description" : "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For Pagination, optional query params of 'page' and 'size' needs to be send.<br/>For Filters, refer to 'ADUserOrGroupSummary' model description to find supported filters on specific field.<br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com",
        "operationId" : "listADUserOrGroupSummary",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "group_only",
          "in" : "query",
          "description" : "Presence of this query param indicates to filter only groups or only users. \n If passed as \"true\", then only groups are returned.\n If passed as \"false\", then only users are returned.\n If not passed passed at all, then both types are returned.",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ADUserOrGroupSummary"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/ad-users-or-groups/action/change-user-password" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Changes the password of AD User",
        "operationId" : "changeUserPassword",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "AD user password object to be changed.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ADUserChangePasswordSpec"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ADUserInfo"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "403" : {
            "description" : "Access to the resource is forbidden"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Validates the encrypted credentials of AD User",
        "operationId" : "validateADUserEncryptedCredentials",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "AD user encrypted credentials object to be validated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ADUserEncryptedCredentialSpec"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ADUserInfo"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "403" : {
            "description" : "Access to the resource is forbidden"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/ad-users-or-groups/{id}" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Get information related to AD User or Group",
        "operationId" : "getADUserOrGroupInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ADUserOrGroupInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/base-snapshots" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the VM snapshots from the vCenter for a given VM.",
        "operationId" : "listBaseSnapshots",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "base_vm_id",
          "in" : "query",
          "description" : "VM ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "vm-1"
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BaseSnapshotInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/base-vms" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the VMs from a vCenter or a datacenter in that vCenter which may be suitable as snapshots for instant/linked clone desktop or farm creation.",
        "operationId" : "listBaseVMs",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "datacenter_id",
          "in" : "query",
          "description" : "Datacenter ID",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BaseVMInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/customization-specifications" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the customization specifications from the vCenter.",
        "operationId" : "listCustomizationSpecs",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomizationSpecInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/datacenters" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the datacenters of a vCenter.",
        "operationId" : "listDatacenters",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatacenterInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/datastore-paths" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the folder paths within a Datastore from vCenter.",
        "operationId" : "listDatastorePaths",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "datastore_id",
          "in" : "query",
          "description" : "Datastore ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "datastore-29"
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatastorePathInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/datastores" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the datastoress from the vCenter for the given host or cluster.",
        "operationId" : "listdatastores",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "host_or_cluster_id",
          "in" : "query",
          "description" : "Host or Cluster ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "domain-c85"
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatastoreInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/hosts-or-clusters" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the hosts or clusters of the datacenter.",
        "operationId" : "listHostsOrClusters",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "datacenter_id",
          "in" : "query",
          "description" : "Datacenter ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostOrClusterInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/network-interface-cards" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Returns a list of network interface cards (NICs) suitable for configuration on a desktop pool/farm.",
        "description" : "If the base VM and snapshot are specified, then the NICs  present on the given snapshot are listed.<br/> If the template is specified then the NICs present on the given template are listed.",
        "operationId" : "listNetworkInterfaceCards",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "base_snapshot_id",
          "in" : "query",
          "description" : "Base Snapshot ID",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "base_vm_id",
          "in" : "query",
          "description" : "Base VM ID",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "vm_template_id",
          "in" : "query",
          "description" : "VM Template ID",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NetworkInterfaceCardInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/network-labels" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Retrieves all network labels on the given host or cluster",
        "description" : "API retrieves by filtering on the network type (if specified) that may be suitable for configuration with a desktop pool/farm's network interface card.",
        "operationId" : "listNetworkLabels",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "host_or_cluster_id",
          "in" : "query",
          "description" : "Host or Cluster ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "network_type",
          "in" : "query",
          "description" : "Network Type\n* NETWORK: Standard network.\n* OPAQUE_NETWORK: Opaque network.\n* DISTRUBUTED_VIRTUAL_PORT_GROUP: DVS Port group.",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false,
          "enum" : [ "NETWORK", "OPAQUE_NETWORK", "DISTRUBUTED_VIRTUAL_PORT_GROUP" ]
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NetworkLabelInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/resource-pools" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the resource pools from the vCenter for the given host or cluster.",
        "operationId" : "listResourcePools",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "host_or_cluster_id",
          "in" : "query",
          "description" : "Host or Cluster ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "domain-c85"
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourcePoolInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/vm-folders" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the VM folders from the vCenter for the given datacenter.",
        "operationId" : "listVMFolders",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "datacenter_id",
          "in" : "query",
          "description" : "Datacenter ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "datacenter-1"
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false,
          "x-example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VMFolderInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/external/v1/vm-templates" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Lists all the VM templates from a vCenter or a datacenter for the given vCenter which may be suitable for full clone desktop pool creation.",
        "operationId" : "listVMTemplates",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "datacenter_id",
          "in" : "query",
          "description" : "Datacenter ID",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "name" : "vcenter_id",
          "in" : "query",
          "description" : "Virtual Center ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VMTemplateInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/application-icons" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the application icons for the given application pool.",
        "operationId" : "listApplicationIcons",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "application_pool_id",
          "in" : "query",
          "description" : "Application Pool ID",
          "required" : true,
          "type" : "string",
          "allowEmptyValue" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationIconInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/application-icons/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets application icon.",
        "operationId" : "getApplicationIcon",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationIconInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/application-pools" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the application pools in the environment.",
        "description" : "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For Pagination, optional query params of 'page' and 'size' needs to be send.<br/>For filters, refer to 'ApplicationPoolInfo' model description to find supported filters on specific field.<br/>For full information on using filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com",
        "operationId" : "listApplicationPools",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationPoolInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Creates an application pool.",
        "operationId" : "createApplicationPool",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Application pool object to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationPoolCreateSpec"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "409" : {
            "description" : "Conflict"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/application-pools/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets application pool.",
        "operationId" : "getApplicationPool",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationPoolInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Inventory" ],
        "summary" : "Updates application pool.",
        "operationId" : "updateApplicationPool",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Application pool object to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationPoolUpdateSpec"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Inventory" ],
        "summary" : "Deletes application pool.",
        "operationId" : "deleteApplicationPool",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the Desktop Pools in the environment.",
        "operationId" : "listDesktopPools",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DesktopPoolInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets the Desktop Pool information.",
        "operationId" : "getDesktopPool",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DesktopPoolInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools/{id}/action/add-machines" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Adds machines to the given manual desktop pool.",
        "operationId" : "addMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be added to the desktop pool.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools/{id}/action/add-machines-by-name" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Adds the named machines to the given desktop pool.",
        "operationId" : "addMachinesByName",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of MachineSpecifiedName representing the machines to be added to the desktop pool.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MachineSpecifiedName"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools/{id}/action/remove-machines" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Removes machines from the given manual desktop pool.",
        "operationId" : "removeMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be removed from the desktop pool.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/desktop-pools/{id}/installed-applications" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the installed applications on the given desktop pool.",
        "operationId" : "listInstalledApplications",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InstalledApplicationInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/farms" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the Farms in the environment.",
        "operationId" : "listFarms",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FarmInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/farms/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets the Farm information.",
        "operationId" : "getFarm",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FarmInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/farms/{id}/installed-applications" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the installed applications on the given farm.",
        "operationId" : "listInstalledApplications_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InstalledApplicationInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the Machines in the environment.",
        "description" : "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For Pagination, optional query params of 'page' and 'size' need to be sent.<br/>For Filters, refer to 'MachineInfo' model description to find supported filters on specific field.<br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com",
        "operationId" : "listMachinesUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MachineInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Inventory" ],
        "summary" : "Deletes the specified machines.",
        "operationId" : "deleteMachines",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The machines and specification for deletion.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MachineDeleteSpec"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/enter-maintenance" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Puts the machines into maintenance mode.",
        "description" : "When in maintenance mode, users cannot access the machines. Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "enterMaintenance",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be put into maintenance mode.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/exit-maintenance" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Puts the machines out of maintenance mode.",
        "description" : "Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "exitMaintenance",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be put out of maintenance mode.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/rebuild" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Rebuilds the specified machines.",
        "description" : "Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "rebuildMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be rebuilt.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/recover" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Recovers the specified machines.",
        "description" : "Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "recoverMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be recovered.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/reset" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Resets the specified machines.",
        "description" : "Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "resetMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be reset.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/action/restart" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Restarts the specified machines.",
        "description" : "Each response entity in the result corresponds to a machine id in the input.",
        "operationId" : "restartMachines",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of Machine Ids representing the machines to be restarted.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets the Machine information.",
        "operationId" : "getMachineUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MachineInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Inventory" ],
        "summary" : "Deletes the machine.",
        "operationId" : "deleteMachine",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The specification applicable to deleting the machine.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MachineDeleteData"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/{id}/action/assign-users" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Assigns the specified users to the machine.",
        "description" : "Each response entity in the result corresponds to a user SID in the input.",
        "operationId" : "assignUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of User SIDs representing the users to be assigned to the machine.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/machines/{id}/action/unassign-users" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Un-assigns the specified users from the machine.",
        "description" : "Each response entity in the result corresponds to a user SID in the input.",
        "operationId" : "unassignUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of User SIDs representing the users to be un-assigned from the machine.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the Session information in the environment.",
        "description" : "This API supports <b>Pagination</b>.<br/>For Pagination, optional query params of 'page' and 'size' needs to be send.<br/>",
        "operationId" : "listSessionInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SessionInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/action/disconnect" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Disconnects user sessions",
        "operationId" : "disconnectSessions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of session ids to be disconnected.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/action/logoff" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Logs off user sessions, if they are not locked.",
        "operationId" : "logOffSessions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of session ids to be logged off.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "forced",
          "in" : "query",
          "description" : "Indicates to Log off session forcibly.\n If passed as \"true\", then sessions are logoff forcibly, even if they are locked.\n If passed as \"false\" or not passed at all, then sessions will be normally logged off, if they are not locked.",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "allowEmptyValue" : false,
          "x-example" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/action/reset" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Resets machine of user sessions. The machine must be managed by Virtual Center and the session cannot be an application or an RDS desktop session.",
        "operationId" : "resetSessions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of session ids to be reset.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/action/restart" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Restarts machine of user sessions. The machine must be managed by Virtual Center and the session cannot be an application or an RDS desktop session.",
        "operationId" : "restartSessions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of session ids to be restarted.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/action/send-message" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "Sends the message to user sessions",
        "operationId" : "sendMessageToSessions",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Message information object to be sent to sessions.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SessionSendMessageSpec"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkItemResponseInfo"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v1/sessions/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets the Session information.",
        "operationId" : "getSessionInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SessionInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v2/desktop-pools" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Lists the desktop pools in the environment.",
        "description" : "This API supports <b>Pagination</b>.<br/>For Pagination, optional query params of 'page' and 'size' needs to be send.<br/>",
        "operationId" : "listDesktopPoolsV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DesktopPoolInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/inventory/v2/desktop-pools/{id}" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "Gets the desktop pool information.",
        "operationId" : "getDesktopPoolV2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DesktopPoolInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Logs in a user. Returns access token and refresh token.",
        "description" : "Note: UPN(e.g. testadmin@example.com) based login is not supported.<br/> Only Administrators on Root access group are allowed to login.",
        "operationId" : "loginUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Login credentials needed for Authentication",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AuthLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuthTokens"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "deprecated" : false
      }
    },
    "/logout" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Logs out a user.",
        "operationId" : "logoutUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Refresh token needed for Logout",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RefreshToken"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      }
    },
    "/monitor/ad-domains" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to AD Domains of the environment.",
        "operationId" : "listADDomainMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ADDomainMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/connection-servers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Connection Servers of the environment.",
        "operationId" : "listConnectionServerMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConnectionServerMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/event-database" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Returns monitoring information related to Event database of the environment.",
        "operationId" : "getEventDatabaseMonitor",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EventDatabaseMonitorInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/farms" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Farms of the environment.",
        "operationId" : "listFarmMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FarmMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/gateways" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Gateways registered in the environment.",
        "operationId" : "listGatewayMonitorInfoV1",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GatewayMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/rds-servers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to RDS Servers of the environment.",
        "operationId" : "listRDSServerMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RDSServerMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/saml-authenticators" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to SAML Authenticators of the environment.",
        "operationId" : "listSAMLAuthenticatorMonitorsV1",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SAMLAuthenticatorMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/connection-servers/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to Connection Server.",
        "operationId" : "getConnectionServerMonitorInfoV2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ConnectionServerMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/farms/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to farm.",
        "operationId" : "getFarmMonitorInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FarmMonitorInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/gateways/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to a Gateway.",
        "operationId" : "getGatewayMonitorInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GatewayMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/pods" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to the remote pods.",
        "operationId" : "listPodMonitorInfosV1",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PodMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/pods/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to the remote pod.",
        "operationId" : "getPodMonitorInfoV2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PodMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/rds-servers/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to RDS Server.",
        "operationId" : "getRDSServerMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RDSServerMonitorInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/saml-authenticators/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets Monitoring Information related to a SAML Authenticator",
        "operationId" : "getSAMLAuthenticatorMonitorInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SAMLAuthenticatorMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/true-sso" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to True SSO connectors.",
        "operationId" : "listTrueSSOMonitorInfos",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TrueSSOMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/true-sso/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to a True SSO connector.",
        "operationId" : "getTrueSSOMonitorInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TrueSSOMonitorInfo"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/view-composers/{vcId}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information of view composer for a given virtual center",
        "operationId" : "getViewComposerByVCId",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "vcId",
          "in" : "path",
          "description" : "vcId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ViewComposerMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v1/virtual-centers/{id}" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Gets monitoring information related to Virtual Center.",
        "operationId" : "getVirtualCenterMonitorInfo",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualCenterMonitorInfoV2"
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/ad-domains" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to AD Domains of the environment.",
        "operationId" : "listADDomainMonitorInfosV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ADDomainMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/connection-servers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Connection Servers of the environment.",
        "operationId" : "listConnectionServerMonitorsV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConnectionServerMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/gateways" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Gateways registered in the environment.",
        "operationId" : "listGatewayMonitorInfoV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GatewayMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/pods" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to the remote pods.",
        "operationId" : "listPodMonitorInfosV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PodMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/saml-authenticators" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to SAML Authenticators of the environment.",
        "operationId" : "listSAMLAuthenticatorMonitorsV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SAMLAuthenticatorMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/view-composers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to View Composers of the environment.",
        "operationId" : "listViewComposerMonitorsV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewComposerMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/v2/virtual-centers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Virtual Centers of the environment.",
        "operationId" : "listVirtualCenterMonitorsV2",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualCenterMonitorInfoV2"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/view-composers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to View Composers of the environment.",
        "operationId" : "listViewComposerMonitorsV1",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ViewComposerMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/monitor/virtual-centers" : {
      "get" : {
        "tags" : [ "Monitor" ],
        "summary" : "Lists monitoring information related to Virtual Centers of the environment.",
        "operationId" : "listVirtualCenterMonitors",
        "produces" : [ "*/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualCenterMonitorInfo"
              }
            }
          },
          "401" : {
            "description" : "User is not authenticated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "deprecated" : false
      }
    },
    "/refresh" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Refreshes access token from refresh token.",
        "operationId" : "refreshAccessToken",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Refresh token needed to generate new Access Token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RefreshToken"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessToken"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      }
    }
  },
  "securityDefinitions" : {
    "Bearer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "ADDomainInfo" : {
      "type" : "object",
      "required" : [ "dns_name", "id", "netbios_name" ],
      "properties" : {
        "dns_name" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "DNS name of the AD Domain."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing AD Domain."
        },
        "netbios_name" : {
          "type" : "string",
          "example" : "AD-EXAMPLE1",
          "description" : "NetBIOS name of the AD Domain."
        }
      },
      "title" : "ADDomainInfo",
      "description" : "Information related to AD Domains of the environment."
    },
    "ADDomainMonitorConnectionServer" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "trust_relationship" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the connection server."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "FULLY_ACCESSIBLE",
          "description" : "Status of the connection to the domain.\n* UNCONTACTABLE: No domain controllers appear to be present on the network for this domain.\n* FULLY_ACCESSIBLE: The domain controller(s) are accepting bind operations.\n* CANNOT_BIND: The domain controller(s) are only accepting LDAP ping operations.\n* UNKNOWN: Cannot determine accessibility.",
          "enum" : [ "UNCONTACTABLE", "FULLY_ACCESSIBLE", "CANNOT_BIND", "UNKNOWN" ]
        },
        "trust_relationship" : {
          "type" : "string",
          "example" : "TWO_WAY",
          "description" : "The trust relationship for the domain.\n* PRIMARY_DOMAIN: The domain is the domain that the broker is present in.\n* FROM_BROKER: The domain is trusted by the domain that the broker is in.\n* TO_BROKER: The domain trusts the broker's domain (this is for completeness and generally will not be used).\n* TWO_WAY: The domain has a two way trust relationship with the broker's domain.\n* TWO_WAY_FOREST: The domain is in the same forest as the broker's domain, implies two way trust.\n* MANUAL: The domain was manually configured (the trust has not been detected).\n* UNKNOWN: The trust relationship could not be determined.",
          "enum" : [ "PRIMARY_DOMAIN", "FROM_BROKER", "TO_BROKER", "TWO_WAY", "TWO_WAY_FOREST", "MANUAL", "UNKNOWN" ]
        }
      },
      "title" : "ADDomainMonitorConnectionServer",
      "description" : "Information about the AD Domain connection from connection server."
    },
    "ADDomainMonitorConnectionServerV2" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "trust_relationship" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the connection server."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "FULLY_ACCESSIBLE",
          "description" : "Status of the connection to the domain.\n* UNCONTACTABLE: No domain controllers appear to be present on the network for this domain.\n* FULLY_ACCESSIBLE: The domain controller(s) are accepting bind operations.\n* CANNOT_BIND: The domain controller(s) are only accepting LDAP ping operations.\n* UNKNOWN: Cannot determine accessibility.",
          "enum" : [ "UNCONTACTABLE", "FULLY_ACCESSIBLE", "CANNOT_BIND", "UNKNOWN" ]
        },
        "trust_relationship" : {
          "type" : "string",
          "example" : "TWO_WAY",
          "description" : "The trust relationship for the domain.\n* PRIMARY_DOMAIN: The domain is the domain that the broker is present in.\n* FROM_BROKER: The domain is trusted by the domain that the broker is in.\n* TO_BROKER: The domain trusts the broker's domain (this is for completeness and generally will not be used).\n* TWO_WAY: The domain has a two way trust relationship with the broker's domain.\n* TWO_WAY_FOREST: The domain is in the same forest as the broker's domain, implies two way trust.\n* MANUAL: The domain was manually configured (the trust has not been detected).\n* UNKNOWN: The trust relationship could not be determined.",
          "enum" : [ "PRIMARY_DOMAIN", "FROM_BROKER", "TO_BROKER", "TWO_WAY", "TWO_WAY_FOREST", "MANUAL", "UNKNOWN" ]
        }
      },
      "title" : "ADDomainMonitorConnectionServerV2",
      "description" : "Information about the AD Domain connection from connection server."
    },
    "ADDomainMonitorInfo" : {
      "type" : "object",
      "required" : [ "dns_name", "netbios_name", "nt4_domain" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the AD Domain connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/ADDomainMonitorConnectionServer"
          }
        },
        "dns_name" : {
          "type" : "string",
          "example" : "ad-example1.example.com",
          "description" : "The DNS name for the domain."
        },
        "netbios_name" : {
          "type" : "string",
          "example" : "AD-EXAMPLE1",
          "description" : "The NetBIOS name for the domain."
        },
        "nt4_domain" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If this is an NT4 domain or not."
        }
      },
      "title" : "ADDomainMonitorInfo",
      "description" : "Monitoring information related to AD Domain."
    },
    "ADDomainMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "dns_name", "netbios_name", "nt4_domain" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the AD Domain connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/ADDomainMonitorConnectionServerV2"
          }
        },
        "dns_name" : {
          "type" : "string",
          "example" : "ad-example1.example.com",
          "description" : "The DNS name for the domain."
        },
        "netbios_name" : {
          "type" : "string",
          "example" : "AD-EXAMPLE1",
          "description" : "The NetBIOS name for the domain."
        },
        "nt4_domain" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If this is an NT4 domain or not."
        }
      },
      "title" : "ADDomainMonitorInfoV2",
      "description" : "Monitoring information related to AD Domain."
    },
    "ADUserChangePasswordSpec" : {
      "type" : "object",
      "required" : [ "key_id", "new_encrypted_password", "old_encrypted_password", "protected_password_key", "username" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "The domain of user. Note that domain is optional if UPN is supplied."
        },
        "key_id" : {
          "type" : "string",
          "example" : "ut0yGq7CbhtBUGfW3ngjkvjQ2cc=",
          "description" : "The keyId of the cluster's SSO KeyPair used to encrypt the password key."
        },
        "new_encrypted_password" : {
          "type" : "string",
          "example" : "4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=",
          "description" : "New password for the user in encrypted format."
        },
        "old_encrypted_password" : {
          "type" : "string",
          "example" : "9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=",
          "description" : "Old password for the user in encrypted format."
        },
        "protected_password_key" : {
          "type" : "string",
          "example" : "Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC",
          "description" : "Decryption key for the password. This key is itself encrypted with cluster's SSO keypair."
        },
        "username" : {
          "type" : "string",
          "example" : "testuser or testuser@example.com",
          "description" : "The username or UPN."
        }
      },
      "title" : "ADUserChangePasswordSpec",
      "description" : "Specification for changing AD user's password."
    },
    "ADUserEncryptedCredentialSpec" : {
      "type" : "object",
      "required" : [ "encrypted_password", "key_id", "protected_password_key", "username" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "The domain of user. Note that domain is optional if UPN is supplied."
        },
        "encrypted_password" : {
          "type" : "string",
          "example" : "9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=",
          "description" : "Encrypted password for the user."
        },
        "key_id" : {
          "type" : "string",
          "example" : "ut0yGq7CbhtBUGfW3ngjkvjQ2cc=",
          "description" : "The keyId of the cluster's SSO KeyPair used to encrypt the protectedPasswordKey."
        },
        "protected_password_key" : {
          "type" : "string",
          "example" : "Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM",
          "description" : "Decryption key for the password. This key is itself encrypted with cluster's SSO keypair."
        },
        "username" : {
          "type" : "string",
          "example" : "testuser or testuser@example.com",
          "description" : "The username or UPN."
        }
      },
      "title" : "ADUserEncryptedCredentialSpec",
      "description" : "Specification for validating AD user's encrypted credentials."
    },
    "ADUserInfo" : {
      "type" : "object",
      "required" : [ "user_guid", "user_sid" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "DNS name of the domain in which this user or group belongs to."
        },
        "group_guids" : {
          "type" : "array",
          "example" : [ "5F5A45D9-15C0-4654-8FCF-D589C0EF3ECA", "6H8S6Y4-35D3-6534-5ERC-A678E3YG4FAD" ],
          "description" : "Guids of the user's groups in RFC 4122 format.",
          "items" : {
            "type" : "string"
          }
        },
        "group_sids" : {
          "type" : "array",
          "example" : [ "S-1-5-21-544", "S-1-5-21-1111111111-2222222222-3333333333-513" ],
          "description" : "List of unique SIDs of the groups, this user or group belongs to.",
          "items" : {
            "type" : "string"
          }
        },
        "user_guid" : {
          "type" : "string",
          "example" : "5F5A45D9-15C0-4654-8FCF-D589C0EF3ECA",
          "description" : "GUID of the user in RFC 4122 format."
        },
        "user_principal_name" : {
          "type" : "string",
          "example" : "testuser@example.com",
          "description" : "User Principal name(UPN) of this user."
        },
        "user_sid" : {
          "type" : "string",
          "example" : "S-1-5-21-544",
          "description" : "Unique SID representing this AD User."
        },
        "username" : {
          "type" : "string",
          "example" : "testuser",
          "description" : "Username of this user."
        }
      },
      "title" : "ADUserInfo",
      "description" : "Information related to AD User."
    },
    "ADUserOrGroupInfo" : {
      "type" : "object",
      "required" : [ "domain", "group", "guid", "id" ],
      "properties" : {
        "container" : {
          "type" : "string",
          "example" : "example.com/Users",
          "description" : "AD container for this user or group."
        },
        "description" : {
          "type" : "string",
          "example" : "Test User account",
          "description" : "Description number of this user or group.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "display_name" : {
          "type" : "string",
          "example" : "example.com\\\\testuser",
          "description" : "Login name with domain of this user or group."
        },
        "distinguished_name" : {
          "type" : "string",
          "example" : "CN=Test User,CN=Users,DC=example,DC=com",
          "description" : "Active Directory distinguished name for this user or group."
        },
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "DNS name of the domain in which this user or group belongs.\nSupported Filters : 'Equals'.\n Also, if 'Or' filter is used anywhere in filter string for this model class, then that 'Or' filter should nest only 'Equals' filter on 'domain' field."
        },
        "email" : {
          "type" : "string",
          "example" : "testuser@example.com",
          "description" : "Email address of this user or group.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "first_name" : {
          "type" : "string",
          "example" : "Test",
          "description" : "First name of this user or group."
        },
        "group" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if this object represents a group.\nThis field is NOT supported in filter string. To use any filter on 'group', use 'group_only' query param directly."
        },
        "group_membership_ids" : {
          "type" : "array",
          "example" : [ "S-1-5-21-544", "S-1-5-21-1111111111-2222222222-3333333333-513" ],
          "description" : "List of unique SIDs of the groups, this user or group belongs to.",
          "items" : {
            "type" : "string"
          }
        },
        "guid" : {
          "type" : "string",
          "example" : "5F5A45D9-15C0-4654-8FCF-D589C0EF3ECA",
          "description" : "GUID of the user or group in RFC 4122 format.\nSupported Filters : 'Equals'."
        },
        "id" : {
          "type" : "string",
          "example" : "S-1-5-21-1111111111-2222222222-3333333333-500",
          "description" : "Unique SID representing this AD User or Group."
        },
        "kiosk_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if this user or group is a \"kiosk user\" that supports client authentication. Client authentication is the process of supporting client devices directly logging into resources."
        },
        "last_name" : {
          "type" : "string",
          "example" : "User",
          "description" : "Last name of this user or group."
        },
        "login_name" : {
          "type" : "string",
          "example" : "testuser",
          "description" : "Login name of this user or group.\n Supported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "long_display_name" : {
          "type" : "string",
          "example" : "testuser@example.com (Test User)",
          "description" : "Login name, domain and name for this user or group, else display name"
        },
        "name" : {
          "type" : "string",
          "example" : "Test User",
          "description" : "Name of this user or group.\n Supported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "phone" : {
          "type" : "string",
          "example" : "1-877-486-9273",
          "description" : "Phone number of this user.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "sub_group_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Number of subgroups in this group, or 0 if not a group."
        },
        "user_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Number of users in this group, or 0 if not a group."
        },
        "user_display_name" : {
          "type" : "string",
          "example" : "Test User",
          "description" : "User or group's display name. This corresponds with displayName attribute in AD."
        },
        "user_principal_name" : {
          "type" : "string",
          "example" : "testuser@example.com",
          "description" : "User Principal name(UPN) of this user."
        }
      },
      "title" : "ADUserOrGroupInfo",
      "description" : "Information related to AD User or Group."
    },
    "ADUserOrGroupSummary" : {
      "type" : "object",
      "required" : [ "domain", "group", "guid", "id" ],
      "properties" : {
        "container" : {
          "type" : "string",
          "example" : "example.com/Users",
          "description" : "AD container for this user or group."
        },
        "description" : {
          "type" : "string",
          "example" : "Test User account",
          "description" : "Description number of this user or group.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "display_name" : {
          "type" : "string",
          "example" : "example.com\\\\testuser",
          "description" : "Login name with domain of this user or group."
        },
        "distinguished_name" : {
          "type" : "string",
          "example" : "CN=Test User,CN=Users,DC=example,DC=com",
          "description" : "Active Directory distinguished name for this user or group."
        },
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "DNS name of the domain in which this user or group belongs.\nSupported Filters : 'Equals'.\n Also, if 'Or' filter is used anywhere in filter string for this model class, then that 'Or' filter should nest only 'Equals' filter on 'domain' field."
        },
        "email" : {
          "type" : "string",
          "example" : "testuser@example.com",
          "description" : "Email address of this user or group.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "first_name" : {
          "type" : "string",
          "example" : "Test",
          "description" : "First name of this user or group."
        },
        "group" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if this object represents a group.\nThis field is NOT supported in filter string. To use any filter on 'group', use 'group_only' query param directly."
        },
        "guid" : {
          "type" : "string",
          "example" : "5F5A45D9-15C0-4654-8FCF-D589C0EF3ECA",
          "description" : "GUID of the user or group in RFC 4122 format.\nSupported Filters : 'Equals'."
        },
        "id" : {
          "type" : "string",
          "example" : "S-1-5-21-1111111111-2222222222-3333333333-500",
          "description" : "Unique SID representing this AD User or Group."
        },
        "kiosk_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if this user or group is a \"kiosk user\" that supports client authentication. Client authentication is the process of supporting client devices directly logging into resources."
        },
        "last_name" : {
          "type" : "string",
          "example" : "User",
          "description" : "Last name of this user or group."
        },
        "login_name" : {
          "type" : "string",
          "example" : "testuser",
          "description" : "Login name of this user or group.\n Supported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "long_display_name" : {
          "type" : "string",
          "example" : "testuser@example.com (Test User)",
          "description" : "Login name, domain and name for this user or group, else display name"
        },
        "name" : {
          "type" : "string",
          "example" : "Test User",
          "description" : "Name of this user or group.\n Supported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "phone" : {
          "type" : "string",
          "example" : "1-877-486-9273",
          "description" : "Phone number of this user.\nSupported Filters : 'Equals', 'StartsWith', 'Contains'."
        },
        "user_display_name" : {
          "type" : "string",
          "example" : "Test User",
          "description" : "User or group's display name. This corresponds with displayName attribute in AD."
        },
        "user_principal_name" : {
          "type" : "string",
          "example" : "testuser@example.com",
          "description" : "User Principal name(UPN) of this user."
        }
      },
      "title" : "ADUserOrGroupSummary",
      "description" : "Summary information related to AD Users or Groups.\n List API returning this summary information can use search filter query to filter on specific fields supported by filters.\n Supported Filters : 'And', 'Or', 'Equals', 'StartsWith', 'Contains'.\nSee the field description to know the filter types it supports."
    },
    "AccessToken" : {
      "type" : "object",
      "required" : [ "access_token" ],
      "properties" : {
        "access_token" : {
          "type" : "string",
          "example" : "<jwt.access.token>",
          "description" : "Access Token to be used in API calls."
        }
      },
      "title" : "AccessToken",
      "description" : "Access Token"
    },
    "ApplicationAntiAffinityData" : {
      "type" : "object",
      "required" : [ "anti_affinity_count", "anti_affinity_patterns" ],
      "properties" : {
        "anti_affinity_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Maximum number of other applications that can be running on the RDS Server before the RDS Server is rejected for new application sessions."
        },
        "anti_affinity_patterns" : {
          "type" : "array",
          "example" : [ "*pad.exe", "*notepad.???" ],
          "description" : "Set of pattern strings to match against process names on a RDS Server when attempting to launch a session for this Application. For each application running on an RDSServer that matches one of the patterns, the tally against the count threshold is incremented.<br>Pattern strings may contain wildcard characters. '*' matches zero or more characters. '?' matches exactly one character.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "ApplicationAntiAffinityData",
      "description" : "Anti-affinity data required to create an application pool."
    },
    "ApplicationFileTypeData" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Firefox Document",
          "description" : "Friendly name for the file type. If unset, no friendly name will be displayed."
        },
        "type" : {
          "type" : "string",
          "example" : ".html",
          "description" : "File type supported by this application. This value is case insensitive. If multiple file types are specified using the same (case insensitive) name and description, all but one will be ignored."
        }
      },
      "title" : "ApplicationFileTypeData",
      "description" : "Information about the file type supported by the application."
    },
    "ApplicationIconInfo" : {
      "type" : "object",
      "properties" : {
        "application_pool_ids" : {
          "type" : "array",
          "example" : [ "855ea6c5-720a-41e1-96f4-958c90e6e424", "1453c2a3-e549-4301-af12-d62210d18d54" ],
          "description" : "An application icon could be shared by multiple application pools. This is a set of application pool IDs this icon represents.",
          "items" : {
            "type" : "string"
          }
        },
        "data" : {
          "type" : "string",
          "format" : "byte",
          "description" : "Icon image data in PNG format.",
          "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
        },
        "height" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 16,
          "description" : "Icon height."
        },
        "icon_hash" : {
          "type" : "string",
          "example" : "13a5d8a8410445b51edf45b6eee2cd8d",
          "description" : "MD5 hash of icon image data, to enable quick icon lookup."
        },
        "icon_source" : {
          "type" : "string",
          "example" : "HORIZON_AGENT",
          "description" : "Source of the application icon. The icon can be from Machine/RDS Agent or custom icon.\n* HORIZON_AGENT: When the icon is from machine/RDS agent.\n* HORIZON_CONNECTION_SERVER: When the icon is uploaded by the administrator through connection server.",
          "enum" : [ "HORIZON_AGENT", "HORIZON_CONNECTION_SERVER" ]
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing application icon."
        },
        "width" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 16,
          "description" : "Icon width."
        }
      },
      "title" : "ApplicationIconInfo",
      "description" : "Application icon information."
    },
    "ApplicationOtherFileTypeData" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Firefox URL",
          "description" : "Friendly name for the file type. If unset, no friendly name will be displayed."
        },
        "name" : {
          "type" : "string",
          "example" : "https",
          "description" : "The name for other file type data."
        },
        "type" : {
          "type" : "string",
          "example" : "URL",
          "description" : "Other file type currently supported.\n* URL: URL scheme types supported by application.",
          "enum" : [ "URL" ]
        }
      },
      "title" : "ApplicationOtherFileTypeData",
      "description" : "Information about different file types supported by Application that can be passed from agent to client via Connection Server."
    },
    "ApplicationPoolCreateSpec" : {
      "type" : "object",
      "required" : [ "executable_path", "name" ],
      "properties" : {
        "anti_affinity_data" : {
          "description" : "Configure to enable anti-affinity rules. When an anti-affinity rule is configured for an application pool, Horizon Connection Server attempts to launch the application only on RDS servers that have sufficient resources to run the application. This feature can be useful for controlling applications that consume large amounts of CPU or memory resources.<br>An anti-affinity rule consists of an application matching pattern and a maximum count. For example, the application matching pattern might be autocad.exe and the maximum count might be 2.",
          "$ref" : "#/definitions/ApplicationAntiAffinityData"
        },
        "category_folder_name" : {
          "type" : "string",
          "example" : "dir1\\dir2\\dir3\\dir4",
          "description" : "Name of the category folder in the user's OS containing a shortcut to the application. Unset if the application does not belong to a category."
        },
        "cs_restriction_tags" : {
          "type" : "array",
          "example" : [ "Internal", "External" ],
          "description" : "Connection server restrictions. Application pool can be accessed from only those connection server instances that have a matching tag in this list. Null or empty list means that the application pool can be accessed from any connection server.",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Notes about the application pool."
        },
        "desktop_pool_id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "ID of the desktop pool from which this application pool is to be created. Once an application pool is created from a desktop pool, it is always associated with that desktop pool, and cannot be removed from the desktop pool, or added to another desktop pool. Either this or farm id should be set."
        },
        "display_name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "The display name is the name that users will see in Horizon client. If the display name is left blank, it defaults to name."
        },
        "enable_client_restrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether client restrictions are to be applied to application pool. Currently it is valid for application pool created from farm. Default value is false."
        },
        "enable_pre_launch" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to pre-launch the application. Default value is false."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the application pool is enabled. Default value is true"
        },
        "executable_path" : {
          "type" : "string",
          "example" : "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Firefox.lnk",
          "description" : "Path to application executable."
        },
        "farm_id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "ID of the farm from which this application pool is to be created. Once an application pool is created from a farm, it is always associated with that farm, and cannot be removed from the farm, or added to another farm. Either this or desktop pool id should be set."
        },
        "max_multi_sessions" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Maximum number of multi-sessions a user can have in this application pool. This property is required if multi-session mode is set to \"ENABLED_DEFAULT_OFF\", \"ENABLED_DEFAULT_ON\", or \"ENABLED_ENFORCED\"Default value is 1."
        },
        "multi_session_mode" : {
          "type" : "string",
          "example" : "DISABLED",
          "description" : "Multi-session mode for the application pool. An application launched in multi-session mode does not support reconnect behavior when user logs in from a different client instance. Multi-session mode should be disabled when pre-launch is enabled.Default value is \"DISABLED\"\n* DISABLED: Multi-session is not supported for this application.\n* ENABLED_DEFAULT_OFF: Multi-session is supported for this application but is disabled by default. The client would need to explicitly request multi-session launch, if wanted. If a legacy client is used, this will always result in a single-session application launch.\n* ENABLED_DEFAULT_ON: Multi-session mode is supported for this application and is enabled by default. The client can request explicitly for single-session launch, if wanted. If a legacy client is used, this will always result in a multi-session application launch.\n* ENABLED_ENFORCED: Multi-session is supported for this application and it is enforced. The client can not select to launch this application as a single-session application.",
          "enum" : [ "DISABLED", "ENABLED_DEFAULT_OFF", "ENABLED_DEFAULT_ON", "ENABLED_ENFORCED" ]
        },
        "name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "The application pool name is the unique identifier used to identify this application pool. This property must contain only alphanumerics, underscores, and dashes. The maximum length is 64 characters."
        },
        "parameters" : {
          "type" : "string",
          "example" : "-p myprofile",
          "description" : "Parameters to pass to application when launching."
        },
        "publisher" : {
          "type" : "string",
          "example" : "Mozilla Corporation",
          "description" : "Application publisher"
        },
        "shortcut_locations" : {
          "type" : "array",
          "description" : "Locations of the category folder in the user's OS containing a shortcut to the desktop. The value must be set if category folder name is provided.",
          "items" : {
            "type" : "string",
            "enum" : [ "START_MENU", "DESKTOP" ]
          }
        },
        "start_folder" : {
          "type" : "string",
          "description" : "Starting folder for application"
        },
        "supported_file_types_data" : {
          "description" : "Supported file types details.",
          "$ref" : "#/definitions/ApplicationSupportedFileTypesData"
        },
        "version" : {
          "type" : "string",
          "example" : "72.0.2",
          "description" : "Application version."
        }
      },
      "title" : "ApplicationPoolCreateSpec",
      "description" : "Information required to create an application pool."
    },
    "ApplicationPoolInfo" : {
      "type" : "object",
      "required" : [ "access_group_id", "enabled", "executable_path", "id", "name" ],
      "properties" : {
        "access_group_id" : {
          "type" : "string",
          "example" : "6fd4638a-381f-4518-aed6-042aa3d9f14c",
          "description" : "Access groups can organize the entities (like application pools, desktop pools) in the organization. They can also be used for delegated administration. For application pool, this is the same as that of the farm or desktop pool that the application pool belongs to.<br>Supported Filters: 'Equals'."
        },
        "anti_affinity_data" : {
          "description" : "Anti-affinity data. When an anti-affinity rule is configured for an application pool, Horizon Connection Server attempts to launch the application only on RDS servers that have sufficient resources to run the application. This feature can be useful for controlling applications that consume large amounts of CPU or memory resources.<br>An anti-affinity rule consists of an application matching pattern and a maximum count. For example, the application matching pattern might be autocad.exe and the maximum count might be 2.",
          "$ref" : "#/definitions/ApplicationAntiAffinityData"
        },
        "category_folder_name" : {
          "type" : "string",
          "example" : "dir1\\dir2\\dir3\\dir4",
          "description" : "Name of the category folder in the user's OS containing a shortcut to the application. Unset if the application does not belong to a category."
        },
        "cs_restriction_tags" : {
          "type" : "array",
          "example" : [ "Internal", "External" ],
          "description" : "Connection server restrictions. Application pool can be accessed from only those connection server instances that have a matching tag in this list. Null or empty list means that the application pool can be accessed from any connection server.",
          "items" : {
            "type" : "string"
          }
        },
        "customized_icon_ids" : {
          "type" : "array",
          "example" : [ "e8d7bf41-0fcd-477a-b7e0-1338b3868d26", "b5453336-01c6-4d44-b2f4-7bcdbcf7b82e" ],
          "description" : "List of customized icon IDs associated with the application which the user has configured.",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Notes about the application pool.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'."
        },
        "desktop_pool_id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "ID of the desktop pool from which this application pool is created. Either this or farm id will be set.<br>Supported Filters: 'Equals'."
        },
        "display_name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "The display name is the name that users will see when they connect to view client. If the display name is left blank, it defaults to name.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'."
        },
        "enable_client_restrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether client restrictions are to be applied to application pool. Currently it is valid for application pool created from farm.<br>Supported Filters: 'Equals'."
        },
        "enable_pre_launch" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to pre-launch the application.<br>Supported Filters: 'Equals'."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the application pool is enabled.<br>Supported Filters: 'Equals'."
        },
        "executable_path" : {
          "type" : "string",
          "example" : "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Firefox.lnk",
          "description" : "Path to application executable.<br>Supported Filters: 'Equals', 'StartsWith', 'EndsWith' and 'Contains'."
        },
        "farm_id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "ID of the farm from which this application pool is created. Either this or desktop pool id will be set.<br>Supported Filters: 'Equals'."
        },
        "icon_ids" : {
          "type" : "array",
          "example" : [ "200fd5fd-26d6-490e-b023-509cbe19c0ac", "920b7766-87b4-4712-9dac-1e7afcba28a6" ],
          "description" : "List of icon IDs associated with the application which are fetched from the agent.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing application pool."
        },
        "max_multi_sessions" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Maximum number of multi-sessions a user can have in this application pool. This property is required if multi-session mode is set to \"ENABLED_DEFAULT_OFF\", \"ENABLED_DEFAULT_ON\", or \"ENABLED_ENFORCED\""
        },
        "multi_session_mode" : {
          "type" : "string",
          "example" : "ENABLED_ENFORCED",
          "description" : "Multi-session mode for the application pool. An application launched in multi-session mode does not support reconnect behavior when user logs in from a different client instance. Multi-session mode should be disabled when pre-launch is enabled.<br>Supported Filters: 'Equals'.\n* DISABLED: Multi-session is not supported for this application.\n* ENABLED_DEFAULT_OFF: Multi-session is supported for this application but is disabled by default. The client would need to explicitly request multi-session launch, if wanted. If a legacy client is used, this will always result in a single-session application launch.\n* ENABLED_DEFAULT_ON: Multi-session mode is supported for this application and is enabled by default. The client can request explicitly for single-session launch, if wanted. If a legacy client is used, this will always result in a multi-session application launch.\n* ENABLED_ENFORCED: Multi-session is supported for this application and it is enforced. The client can not select to launch this application as a single-session application.",
          "enum" : [ "DISABLED", "ENABLED_DEFAULT_OFF", "ENABLED_DEFAULT_ON", "ENABLED_ENFORCED" ]
        },
        "name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "The application name is the unique identifier used to identify this application pool. This property must contain only alphanumerics, underscores, and dashes. The maximum length is 64 characters.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'."
        },
        "parameters" : {
          "type" : "string",
          "description" : "Parameters to pass to application when launching."
        },
        "publisher" : {
          "type" : "string",
          "example" : "Mozilla Corporation",
          "description" : "Application publisher.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'."
        },
        "shortcut_locations" : {
          "type" : "array",
          "description" : "Locations of the category folder in the user's OS containing a shortcut to the application. The value must be set if category folder name is provided.",
          "items" : {
            "type" : "string",
            "enum" : [ "START_MENU", "DESKTOP" ]
          }
        },
        "start_folder" : {
          "type" : "string",
          "description" : "Starting folder for application."
        },
        "supported_file_types_data" : {
          "description" : "Supported file types details.",
          "$ref" : "#/definitions/ApplicationSupportedFileTypesData"
        },
        "version" : {
          "type" : "string",
          "example" : "72.0.2",
          "description" : "Application version.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'."
        }
      },
      "title" : "ApplicationPoolInfo",
      "description" : "Application pool information.<br>List API returning this summary information can use search filter query to filter on specific fields supported by filters.<br> Supported Filters : 'And', 'Or', 'Equals', 'StartsWith', 'Contains' and 'EndsWith'.<br>See the field description to know the filter types it supports."
    },
    "ApplicationPoolUpdateSpec" : {
      "type" : "object",
      "required" : [ "enabled", "executable_path" ],
      "properties" : {
        "anti_affinity_data" : {
          "description" : "Configure to enable anti-affinity rules. When an anti-affinity rule is configured for an application pool, Horizon Connection Server attempts to launch the application only on RDS servers that have sufficient resources to run the application. This feature can be useful for controlling applications that consume large amounts of CPU or memory resources.<br>An anti-affinity rule consists of an application matching pattern and a maximum count. For example, the application matching pattern might be autocad.exe and the maximum count might be 2.",
          "$ref" : "#/definitions/ApplicationAntiAffinityData"
        },
        "category_folder_name" : {
          "type" : "string",
          "example" : "dir1\\dir2\\dir3\\dir4",
          "description" : "Name of the category folder in the user's OS containing a shortcut to the application. Unset if the application does not belong to a category."
        },
        "cs_restriction_tags" : {
          "type" : "array",
          "example" : [ "Internal", "External" ],
          "description" : "Connection server restrictions. Application pool can be accessed from only those connection server instances that have a matching tag in this list. Null or empty list means that the application pool can be accessed from any connection server.",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Notes about the application pool."
        },
        "display_name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "The display name is the name that users will see in Horizon client. If the display name is left blank, it defaults to name."
        },
        "enable_client_restrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether client restrictions are to be applied to application pool. Currently it is valid for application pool created from farm. Default value is false."
        },
        "enable_pre_launch" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to pre-launch the application. Default value is false."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the application pool is enabled. Default value is true"
        },
        "executable_path" : {
          "type" : "string",
          "example" : "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Firefox.lnk",
          "description" : "Path to application executable."
        },
        "max_multi_sessions" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Maximum number of multi-sessions a user can have in this application pool. This property is required if multi-session mode is set to \"ENABLED_DEFAULT_OFF\", \"ENABLED_DEFAULT_ON\", or \"ENABLED_ENFORCED\"Default value is 1."
        },
        "multi_session_mode" : {
          "type" : "string",
          "example" : "ENABLED_ENFORCED",
          "description" : "Multi-session mode for the application pool. An application launched in multi-session mode does not support reconnect behavior when user logs in from a different client instance. Multi-session mode should be disabled when pre-launch is enabled.Default value is \"DISABLED\"\n* DISABLED: Multi-session is not supported for this application.\n* ENABLED_DEFAULT_OFF: Multi-session is supported for this application but is disabled by default. The client would need to explicitly request multi-session launch, if wanted. If a legacy client is used, this will always result in a single-session application launch.\n* ENABLED_DEFAULT_ON: Multi-session mode is supported for this application and is enabled by default. The client can request explicitly for single-session launch, if wanted. If a legacy client is used, this will always result in a multi-session application launch.\n* ENABLED_ENFORCED: Multi-session is supported for this application and it is enforced. The client can not select to launch this application as a single-session application.",
          "enum" : [ "DISABLED", "ENABLED_DEFAULT_OFF", "ENABLED_DEFAULT_ON", "ENABLED_ENFORCED" ]
        },
        "parameters" : {
          "type" : "string",
          "example" : "-p myprofile",
          "description" : "Parameters to pass to application when launching."
        },
        "publisher" : {
          "type" : "string",
          "example" : "Mozilla Corporation",
          "description" : "Application publisher"
        },
        "shortcut_locations" : {
          "type" : "array",
          "description" : "Locations of the category folder in the user's OS containing a shortcut to the application. The value must be set if category folder name is provided.",
          "items" : {
            "type" : "string",
            "enum" : [ "START_MENU", "DESKTOP" ]
          }
        },
        "start_folder" : {
          "type" : "string",
          "description" : "Starting folder for application"
        },
        "supported_file_types_data" : {
          "description" : "Supported file types details.",
          "$ref" : "#/definitions/ApplicationSupportedFileTypesData"
        },
        "version" : {
          "type" : "string",
          "example" : "72.0.2",
          "description" : "Application version."
        }
      },
      "title" : "ApplicationPoolUpdateSpec",
      "description" : "Information required to update an application pool."
    },
    "ApplicationSupportedFileTypesData" : {
      "type" : "object",
      "required" : [ "enable_auto_update_file_types", "enable_auto_update_other_file_types" ],
      "properties" : {
        "enable_auto_update_file_types" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether or not the file types supported by this application should be allowed to automatically update to reflect changes reported by the agent. Typically this should be set to false if the application has manually configured supported file types. Default is true."
        },
        "enable_auto_update_other_file_types" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether or not the other file types supported by this application should be allowed to automatically update to reflect changes reported by the agent. Typically this should be set to false if the application has manually configured supported file types."
        },
        "file_types" : {
          "type" : "array",
          "description" : "Set of file types reported by the application as supported (if this application is discovered) or as specified by the administrator (if this application is manually configured). If unset, this application does not present any file type support.",
          "items" : {
            "$ref" : "#/definitions/ApplicationFileTypeData"
          }
        },
        "other_file_types" : {
          "type" : "array",
          "description" : "This represents the different file types reported by Application that can be passed from agent to client via broker or as specified by the administrator (if this application is manually configured). If unset, this application does not present any other file type support.",
          "items" : {
            "$ref" : "#/definitions/ApplicationOtherFileTypeData"
          }
        }
      },
      "title" : "ApplicationSupportedFileTypesData",
      "description" : "Information about the file types supported by the application."
    },
    "AuthLogin" : {
      "type" : "object",
      "required" : [ "domain", "password", "username" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "example" : "AD-TEST-DOMAIN",
          "description" : "Domain"
        },
        "password" : {
          "type" : "array",
          "example" : "<password>",
          "description" : "User password",
          "items" : {
            "type" : "string"
          }
        },
        "username" : {
          "type" : "string",
          "example" : "Administrator",
          "description" : "User Name"
        }
      },
      "title" : "AuthLogin",
      "description" : "Login Request"
    },
    "AuthTokens" : {
      "type" : "object",
      "required" : [ "access_token", "refresh_token" ],
      "properties" : {
        "access_token" : {
          "type" : "string",
          "example" : "<jwt.access.token>",
          "description" : "Access Token to be used in API calls."
        },
        "refresh_token" : {
          "type" : "string",
          "example" : "<jwt.refresh.token>",
          "description" : "Refresh Token to be used to get a new Access token."
        }
      },
      "title" : "AuthTokens",
      "description" : "Authentication Tokens"
    },
    "BaseSnapshotInfo" : {
      "type" : "object",
      "properties" : {
        "created_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582181947320,
          "description" : "Epoch time in milli seconds, when the VM snapshot was created."
        },
        "description" : {
          "type" : "string",
          "example" : "Base image snapshot",
          "description" : "Description of the VM snapshot."
        },
        "disk_size_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 42949,
          "description" : "Sum of capacities of all the virtual disks in the VM snapshot, in MB."
        },
        "hardware_version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 13,
          "description" : "VM snapshot hardware version"
        },
        "id" : {
          "type" : "string",
          "example" : "snapshot-4",
          "description" : "Unique ID representing the VM snapshot."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this VM snapshot from being used in linked/instant clone desktop pool or farm creation.",
          "items" : {
            "type" : "string",
            "enum" : [ "POWERED_ON", "INCOMPATIBLE_HARDWARE_VERSION" ]
          }
        },
        "max_number_of_monitors" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Maximum number of monitors set in SVGA settings for the VM snapshot in vCenter."
        },
        "max_resolution_of_any_one_monitor" : {
          "type" : "string",
          "example" : "1600x1200",
          "description" : "Maximum resolution of any one monitor set in SVGA settings for the VM snapshot in vCenter."
        },
        "memory_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 4096,
          "description" : "The physical memory size of VM snapshot, in MB"
        },
        "memory_reservation_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 0,
          "description" : "Amount of memory that is guaranteed available to the virtual machine, in MB."
        },
        "name" : {
          "type" : "string",
          "example" : "Snapshot1",
          "description" : "VM snapshot name."
        },
        "path" : {
          "type" : "string",
          "example" : "/Snapshot1",
          "description" : "VM snapshot path."
        },
        "renderer3d" : {
          "type" : "string",
          "example" : "DISABLED",
          "description" : "Indicate how the virtual video device for the VM snapshot renders 3D graphics. Will be set only if VM snapshot supports 3D functions.\n* MANAGE_BY_VSPHERE_CLIENT: 3D rendering managed by vSphere Client.\n* AUTOMATIC: 3D rendering is automatic.\n* SOFTWARE: 3D rendering is software dependent. The software renderer is supported (at minimum) on virtual hardware version 8 in a vSphere 5.0 environment.\n* HARDWARE: 3D rendering is hardware dependent. The hardware-based renderer is supported (at minimum) on virtual hardware version 9 in a vSphere 5.1 environment.\n* DISABLED: 3D rendering is disabled.",
          "enum" : [ "MANAGE_BY_VSPHERE_CLIENT", "AUTOMATIC", "SOFTWARE", "HARDWARE", "DISABLED" ]
        },
        "total_video_memory_mb" : {
          "type" : "number",
          "format" : "double",
          "example" : 8.0,
          "description" : "Total video memory in MB set in SVGA settings for the VM snapshot in vCenter."
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Virtual Center id for this VM snapshot."
        },
        "vgpu_type" : {
          "type" : "string",
          "description" : "NVIDIA GRID vGPU type configured on this VM snapshot."
        }
      },
      "title" : "BaseSnapshotInfo",
      "description" : "Information related to VM snapshot."
    },
    "BaseVMInfo" : {
      "type" : "object",
      "required" : [ "datacenter_id", "id", "name", "network_type", "operating_system", "operating_system_display_name", "path", "vcenter_id" ],
      "properties" : {
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter id for this VM."
        },
        "id" : {
          "type" : "string",
          "example" : "vm-416",
          "description" : "Unique ID representing a VM."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this BaseVM from having its snapshots used in linked or instant clone desktop or farm creation.",
          "items" : {
            "type" : "string",
            "enum" : [ "IN_USE_BY_DESKTOP_POOL", "IN_USE_BY_LINKED_CLONE_DESKTOP_POOL", "VIEW_COMPOSER_REPLICA", "UNSUPPORTED_OS_FOR_FARM", "UNSUPPORTED_OS", "NO_SNAPSHOTS", "INSTANT_INTERNAL", "IN_USE_BY_INSTANT_CLONE_DESKTOP_POOL" ]
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Win10",
          "description" : "VM name."
        },
        "network_type" : {
          "type" : "string",
          "example" : "STANDARD_NETWORK",
          "description" : "Type of network base VM belongs to.\n* STANDARD_NETWORK: Standard network.\n* OPAQUE_NETWORK: Opaque network.\n* DISTRUBUTED_VIRTUAL_PORT_GROUP: DVS port group.",
          "enum" : [ "STANDARD_NETWORK", "OPAQUE_NETWORK", "DISTRUBUTED_VIRTUAL_PORT_GROUP" ]
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "operating_system_display_name" : {
          "type" : "string",
          "example" : "Microsoft Windows 10 (64-bit)",
          "description" : "Operating system display name from Virtual Center."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/vm/VMs/Win10",
          "description" : "VM path."
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Virtual Center id for this VM."
        }
      },
      "title" : "BaseVMInfo",
      "description" : "Information related to base VM."
    },
    "BulkEntitlementResponseInfo" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "type" : "array",
          "description" : "List of entitlement response info objects correpsonding to each of the given ad-user-or-group SID.",
          "items" : {
            "$ref" : "#/definitions/EntitlementResponseInfo"
          }
        },
        "error_messages" : {
          "type" : "array",
          "example" : [ "Entity does not exists.", "Property is mandatory." ],
          "description" : "Reasons for the failure of the operation.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing the resource for the entitlement operation."
        },
        "status_code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 200,
          "description" : "Response HTTP status code of the operation."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1561939200000,
          "description" : "Timestamp in milliseconds when the operation failed. Measured as epoch time."
        }
      },
      "title" : "BulkEntitlementResponseInfo",
      "description" : "Response for each of the entitlement operation for a resource in a bulk entitlement operation."
    },
    "BulkItemResponseInfo" : {
      "type" : "object",
      "required" : [ "status_code", "timestamp" ],
      "properties" : {
        "error_messages" : {
          "type" : "array",
          "example" : [ "Entity does not exists.", "Property is mandatory." ],
          "description" : "Reasons for the failure of the operation.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing the entity on which the operation was performed. Will not be populated for create operation if the operation fails."
        },
        "status_code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 200,
          "description" : "Response HTTP status code of the operation."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1561939200000,
          "description" : "Timestamp in milliseconds when the operation failed. Measured as epoch time."
        }
      },
      "title" : "BulkItemResponseInfo",
      "description" : "Response for each of the operation in a bulk operation."
    },
    "CertificateMonitorInfo" : {
      "type" : "object",
      "required" : [ "valid", "valid_from", "valid_to" ],
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the certificate is valid."
        },
        "valid_from" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1561939200000,
          "description" : "Start time of the certificate validity in milliseconds. Measured as epoch time."
        },
        "valid_to" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1561939200000,
          "description" : "Expiration time of the certificate validity in milliseconds. Measured as epoch time."
        }
      },
      "title" : "CertificateMonitorInfo",
      "description" : "Monitoring data about server's certificate."
    },
    "CertificateOverrideData" : {
      "type" : "object",
      "properties" : {
        "certificate" : {
          "type" : "string",
          "description" : "Virtual Center certificate"
        },
        "type" : {
          "type" : "string",
          "example" : "PEM",
          "description" : "Type of Certificate.\n* PEM: PEM encoded certificate type",
          "enum" : [ "PEM" ]
        }
      },
      "title" : "CertificateOverrideData",
      "description" : "Certificate details and type information, which can be used to override thumbprint details."
    },
    "CertificateServerDetails" : {
      "type" : "object",
      "required" : [ "name", "status" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "SSOConnector",
          "description" : "Certificate Server name."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Certificate Server status.\n* OK: The state of the certificate server is OK as reported by the enrollment servers.\n* WARN: At least one enrollment server reports a warning on this certificate server.\n* ERROR: At least one enrollment server reports an error on this certificate server.",
          "enum" : [ "OK", "WARN", "ERROR" ]
        }
      },
      "title" : "CertificateServerDetails"
    },
    "CertificateThumbprint" : {
      "type" : "object",
      "required" : [ "ssl_cert_thumbprint", "ssl_cert_thumbprint_algorithm" ],
      "properties" : {
        "ssl_cert_thumbprint" : {
          "type" : "string",
          "example" : "8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6",
          "description" : "A digest of the certificate."
        },
        "ssl_cert_thumbprint_algorithm" : {
          "type" : "string",
          "example" : "SHA_1",
          "description" : "Algorithm used to compute the thumbprint.\n* SHA_1: SHA-1 hashing algorithm.\n* SHA_256: SHA-256 hashing algorithm.",
          "enum" : [ "SHA_1", "SHA_256" ]
        }
      },
      "title" : "CertificateThumbprint",
      "description" : "Information about the SSL Certificate thumbprints"
    },
    "ClientData" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "example" : "127.0.0.1",
          "description" : "IP address of the client machine for the session. \nThis property need not be set."
        },
        "location_id" : {
          "type" : "string",
          "example" : "6bda20e66cda315084edc8b5c67f9cf1e3b0f4559ba990b1004a",
          "description" : "Client location for the session. \nThis property need not be set."
        },
        "name" : {
          "type" : "string",
          "example" : "EXAMPLE-CLIENT1",
          "description" : "Client machine hostname for the session. \nThis property need not be set."
        },
        "type" : {
          "type" : "string",
          "example" : "WINDOWS",
          "description" : "Client type for the session. \nThis property need not be set.\n* WINDOWS: Client type is Windows client.\n* MAC: Client type is Mac client.\n* HTMLACCESS: Client type is Web client.\n* LINUX: Client type is Linux client.\n* IOS: Client type is iOS client.\n* ANDROID: Client type is Android client.\n* OTHER: Client type is other.",
          "enum" : [ "WINDOWS", "MAC", "HTMLACCESS", "LINUX", "IOS", "ANDROID", "OTHER" ]
        },
        "version" : {
          "type" : "string",
          "example" : "5.4.0",
          "description" : "Client version for the session. \nThis property need not be set."
        }
      },
      "title" : "ClientData",
      "description" : "Client data associated with the session."
    },
    "ConnectionServerMonitorCSReplication" : {
      "type" : "object",
      "required" : [ "server_name", "status" ],
      "properties" : {
        "server_name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection Server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "LDAP replication status.\n* OK: The connection to the Connection Server is working properly.\n* ERROR: There is a problem with LDAP replication to the Connection Server.",
          "enum" : [ "OK", "ERROR" ]
        }
      },
      "title" : "ConnectionServerMonitorCSReplication",
      "description" : "Replication status with respect to Peer Connection Servers in the same cluster."
    },
    "ConnectionServerMonitorDetails" : {
      "type" : "object",
      "required" : [ "build", "version" ],
      "properties" : {
        "build" : {
          "type" : "string",
          "example" : "12345678.0.1",
          "description" : "Connection Server build number."
        },
        "version" : {
          "type" : "string",
          "example" : "7.9.0",
          "description" : "Connection Server version number."
        }
      },
      "title" : "ConnectionServerMonitorDetails",
      "description" : "Details of the Connection Server."
    },
    "ConnectionServerMonitorInfo" : {
      "type" : "object",
      "required" : [ "certificate", "details", "id", "name", "status" ],
      "properties" : {
        "certificate" : {
          "description" : "Connection Server certificate information.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of connections to this Connection Server."
        },
        "cs_replications" : {
          "type" : "array",
          "description" : "Connection Server replication status with respect to the Peer Connection Servers in the same cluster.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerMonitorCSReplication"
          }
        },
        "default_certificate" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether server has the default certificate."
        },
        "details" : {
          "description" : "Details about the Connection Server.",
          "$ref" : "#/definitions/ConnectionServerMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection Server host name or IP address."
        },
        "services" : {
          "type" : "array",
          "description" : "Connection Server related Windows services information.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerMonitorServiceStatus"
          }
        },
        "session_protocol_data" : {
          "type" : "array",
          "description" : "PCoIP, RDP or BLAST protocol sessions details when clients connect directly to the connection server.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerSessionProtocolData"
          }
        },
        "session_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2000,
          "description" : "The maximum number of connections allowed for the connection server through the Horizon client. If all of the secure gateways (HTTP(S)/PCOIP/BLAST) are enabled, this field denotes the maximum number of connections allowed for the connection server.If none of the secure gateways(HTTP(S)/PCOIP/BLAST) are enabled, sessionThreshold value will not be set."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Connection Server.\n* OK: The Connection Server is working properly.\n* ERROR: Error occurred when connecting to Connection Server.\n* NOT_RESPONDING: The Connection Server is not responding.\n* UNKNOWN: Status of Connection Server is unknown.",
          "enum" : [ "OK", "ERROR", "NOT_RESPONDING", "UNKNOWN" ]
        },
        "tunnel_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of connections tunneled through this Connection Server."
        }
      },
      "title" : "ConnectionServerMonitorInfo",
      "description" : "Monitoring information related to Connection Server."
    },
    "ConnectionServerMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "certificate", "details", "id", "name", "status" ],
      "properties" : {
        "certificate" : {
          "description" : "Connection Server certificate information.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of connections to this Connection Server."
        },
        "cs_replications" : {
          "type" : "array",
          "description" : "Connection Server replication status with respect to the Peer Connection Servers in the same cluster.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerMonitorCSReplication"
          }
        },
        "default_certificate" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether server has the default certificate."
        },
        "details" : {
          "description" : "Details about the Connection Server.",
          "$ref" : "#/definitions/ConnectionServerMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection Server host name or IP address."
        },
        "services" : {
          "type" : "array",
          "description" : "Connection Server related Windows services information.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerMonitorServiceStatus"
          }
        },
        "session_protocol_data" : {
          "type" : "array",
          "description" : "PCoIP, RDP or BLAST protocol sessions details when clients connect directly to the connection server.",
          "items" : {
            "$ref" : "#/definitions/ConnectionServerSessionProtocolData"
          }
        },
        "session_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2000,
          "description" : "The maximum number of connections allowed for the connection server through the Horizon client. If all of the secure gateways (HTTP(S)/PCOIP/BLAST) are enabled, this field denotes the maximum number of connections allowed for the connection server.If none of the secure gateways(HTTP(S)/PCOIP/BLAST) are enabled, sessionThreshold value will not be set."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Connection Server.\n* OK: The Connection Server is working properly.\n* ERROR: Error occurred when connecting to Connection Server.\n* NOT_RESPONDING: The Connection Server is not responding.\n* UNKNOWN: Status of Connection Server is unknown.",
          "enum" : [ "OK", "ERROR", "NOT_RESPONDING", "UNKNOWN" ]
        },
        "tunnel_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of connections tunneled through this Connection Server."
        }
      },
      "title" : "ConnectionServerMonitorInfoV2",
      "description" : "Monitoring information related to Connection Server."
    },
    "ConnectionServerMonitorServiceStatus" : {
      "type" : "object",
      "required" : [ "service_name", "status" ],
      "properties" : {
        "service_name" : {
          "type" : "string",
          "example" : "BLAST_SECURE_GATEWAY",
          "description" : "Service name of the Connection Server.\n* PCOIP_SECURE_GATEWAY: PCoIP Secure Gateway service.\n* BLAST_SECURE_GATEWAY: BLAST Secure Gateway service.\n* SECURITY_GATEWAY_COMPONENT: Security Gateway Component service.",
          "enum" : [ "PCOIP_SECURE_GATEWAY", "BLAST_SECURE_GATEWAY", "SECURITY_GATEWAY_COMPONENT" ]
        },
        "status" : {
          "type" : "string",
          "example" : "UP",
          "description" : "Status of the service.\n* UP: The Windows service is UP and running.\n* DOWN: The Windows service is not UP.\n* UNKNOWN: The Windows service state is Unknown.",
          "enum" : [ "UP", "DOWN", "UNKNOWN" ]
        }
      },
      "title" : "ConnectionServerMonitorServiceStatus",
      "description" : "Status of Connection Server related Windows service."
    },
    "ConnectionServerSessionProtocolData" : {
      "type" : "object",
      "required" : [ "session_count", "session_protocol" ],
      "properties" : {
        "session_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 341,
          "description" : "Number of active sessions launched using the protocol."
        },
        "session_protocol" : {
          "type" : "string",
          "example" : "BLAST",
          "description" : "Protocol used in launching the session.\n* PCOIP: Display protocol is PCoIP.\n* RDP: Display protocol is RDP.\n* BLAST: Display protocol is BLAST.\n* CONSOLE: Display protocol is console.\n* UNKNOWN: Display protocol is unknown.",
          "enum" : [ "PCOIP", "RDP", "BLAST", "CONSOLE", "UNKNOWN" ]
        }
      },
      "title" : "ConnectionServerSessionProtocolData",
      "description" : "Details of connected session count for each session protocol."
    },
    "CustomizationSpecInfo" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "windows customization specification",
          "description" : "Customization specification description."
        },
        "guest_os" : {
          "type" : "string",
          "example" : "Windows",
          "description" : "Guest Operating system.\n* UNKNOWN: Unknown\n* WINDOWS: Windows\n* LINUX: Linux",
          "enum" : [ "UNKNOWN", "WINDOWS", "LINUX" ]
        },
        "id" : {
          "type" : "string",
          "example" : "a219420d-4799-4517-8f78-39c74c7c4efc",
          "description" : "Unique ID representing the customization specification."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this customization specification from being used in desktop pool creation.",
          "items" : {
            "type" : "string",
            "enum" : [ "DHCP_NOT_CONFIGURED", "UNSUPPORTED_OS" ]
          }
        },
        "name" : {
          "type" : "string",
          "example" : "windows specification",
          "description" : "Name of the customization specification."
        }
      },
      "title" : "CustomizationSpecInfo",
      "description" : "Information related to customization specification created in vCenter."
    },
    "DatacenterInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "path" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Unique ID representing a datacenter."
        },
        "name" : {
          "type" : "string",
          "example" : "datacenter",
          "description" : "Name of the datacenter."
        },
        "path" : {
          "type" : "string",
          "example" : "/datacenter",
          "description" : "Datacenter path."
        }
      },
      "title" : "DatacenterInfo",
      "description" : "Information related to datacenter."
    },
    "DatastoreInfo" : {
      "type" : "object",
      "properties" : {
        "capacity_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 946176,
          "description" : "Maximum capacity of this datastore, in MB."
        },
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter id for this datastore."
        },
        "disk_type" : {
          "type" : "string",
          "example" : "NON_SSD",
          "description" : "Disk type of the datastore.\n* SSD: Solid State Drive disk type.\n* NON_SSD: NON-Solid State Drive disk type.\n* UNKNOWN: Unknown disk type.\n* NON_VMFS: NON-VMFS disk type.",
          "enum" : [ "SSD", "NON_SSD", "UNKNOWN", "NON_VMFS" ]
        },
        "file_system_type" : {
          "type" : "string",
          "example" : "VMFS",
          "description" : "File system type of the datastore.\n* VMFS: Virtual Machine File System.\n* NFS: Network File System.\n* VSAN: vSAN File System.\n* VVOL: Virtual Volumes.",
          "enum" : [ "VMFS", "NFS", "VSAN", "VVOL" ]
        },
        "free_space_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 88239,
          "description" : "Available capacity of this datastore, in MB."
        },
        "host_or_cluster_id" : {
          "type" : "string",
          "example" : "domain-c85",
          "description" : "Host or Cluster id for this datastore."
        },
        "id" : {
          "type" : "string",
          "example" : "datastore-29",
          "description" : "Unique ID representing the datastore."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this Datastore from being used in desktop pool/farm.",
          "items" : {
            "type" : "string",
            "enum" : [ "INACCESSIBLE_TO_SOME_HOSTS", "VMFS5_AND_MORE_THAN_32_HOSTS", "NOT_VMFS5_AND_MORE_THAN_8_HOSTS", "ESX51_AND_MORE_THAN_32_HOSTS", "NOT_ESX51_AND_MORE_THAN_8_HOSTS", "INCOMPATIBLE_NATIVE_SNAPSHOTS" ]
          }
        },
        "local_datastore" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if this datastore is local to a single host."
        },
        "name" : {
          "type" : "string",
          "example" : "Datastore1",
          "description" : "Datastore name."
        },
        "number_of_vms" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 15,
          "description" : "Indicates the number of virtual machines the datastore has for desktop pool/farm when applicable"
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/host/Cluster/Datastore1",
          "description" : "Datastore path."
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Virtual Center id for this datastore."
        },
        "vmfs_major_version" : {
          "type" : "string",
          "example" : "5",
          "description" : "The VMFS major version number."
        }
      },
      "title" : "DatastoreInfo",
      "description" : "Information related to datastore."
    },
    "DatastorePathInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "a219420d-4799-4517-8f78-39c74c7c4efc",
          "description" : "Unique ID representing the datastore path."
        },
        "path" : {
          "type" : "string",
          "example" : "[datastore1] ISO images",
          "description" : "Datastore path."
        }
      },
      "title" : "DatastorePathInfo",
      "description" : "Information related to datastore paths."
    },
    "DesktopPoolCloneprepCustomizationSettings" : {
      "type" : "object",
      "properties" : {
        "post_synchronization_script_name" : {
          "type" : "string",
          "example" : "cloneprep_postsync_script",
          "description" : "Post synchronization script. ClonePrep can run a customization script on instant-clone machines after they are created or recovered or a new image is pushed. Provide the path to the script on the parent virtual machine."
        },
        "post_synchronization_script_parameters" : {
          "type" : "string",
          "example" : "p1 p2 p3",
          "description" : "Post synchronization script parameters."
        },
        "power_off_script_name" : {
          "type" : "string",
          "example" : "cloneprep_poweroff_script",
          "description" : "Power off script. ClonePrep can run a customization script on instant-clone machines before they are powered off. Provide the path to the script on the parent virtual machine."
        },
        "power_off_script_parameters" : {
          "type" : "string",
          "example" : "p1 p2 p3",
          "description" : "Power off script parameters."
        },
        "priming_computer_account" : {
          "type" : "string",
          "example" : "a219420d-4799-4517-8f78-39c74c7c4efc",
          "description" : "Instant Clone publishing needs an additional computer account in the same AD domain as the clones. This field accepts the pre-created computer accounts."
        }
      },
      "title" : "DesktopPoolCloneprepCustomizationSettings",
      "description" : "Settings for ClonePrep customization. This setting is only applicable to instant clone desktop pools."
    },
    "DesktopPoolCustomizationSettings" : {
      "type" : "object",
      "properties" : {
        "ad_container_rdn" : {
          "type" : "string",
          "example" : "CN=Computers",
          "description" : "Applicable To: Linked/instant clone automated desktop pools.<br>View Composer and Instant Clone Engine Active Directory container for QuickPrep and ClonePrep."
        },
        "cloneprep_customization_settings" : {
          "description" : "Settings when ClonePrep customization is requested.",
          "$ref" : "#/definitions/DesktopPoolCloneprepCustomizationSettings"
        },
        "customization_type" : {
          "type" : "string",
          "example" : "CLONE_PREP",
          "description" : "Type of customization to use.\n* NONE: Applicable To: Full clone automated desktop pools.<br>No customization.\n* QUICK_PREP: Applicable To: Linked clone automated desktop pools.<br>QuickPrep is a VMware system tool executed by View Composer during a linked-clone machine deployment. QuickPrep personalizes each machine created from the Master image.\n* SYS_PREP: Applicable To: All automated desktop pools.<br>Microsoft Sysprep is a tool to deploy the configured operating system installation from a base image. The machine can then be customized based on an answer script. Sysprep can modify a larger number of configurable parameters than QuickPrep.\n* CLONE_PREP: Applicable To: Instant clone automated desktop pools.<br>ClonePrep is a VMware system tool executed by Instant Clone Engine during a instant clone machine deployment. ClonePrep personalizes each machine created from the Master image.",
          "enum" : [ "NONE", "QUICK_PREP", "SYS_PREP", "CLONE_PREP" ]
        },
        "do_not_power_on_vms_after_creation" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to power on VMs after creation. This is the settings when customization will be done manually."
        },
        "instant_clone_domain_account_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Applicable To: Instant clone automated desktop pools.<br>Instant clone domain account. This is the administrator which will add the machines to its domain upon creation."
        },
        "quickprep_customization_settings" : {
          "description" : "Settings when QuickPrep customization is requested.",
          "$ref" : "#/definitions/DesktopPoolQuickprepCustomizationSettings"
        },
        "reuse_pre_existing_accounts" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Applicable To: Manual and automated desktop pools.<br>Whether to allow the use of existing AD computer accounts when the VM names of newly created clones match the existing computer account names. This is applicable only for automated desktop pools."
        },
        "sysprep_customization_spec_id" : {
          "type" : "string",
          "example" : "a219420d-4799-4517-8f78-39c74c7c4efc",
          "description" : "Customization specification to use when Sysprep customization is requested."
        },
        "view_composer_domain_account_id" : {
          "type" : "string",
          "example" : "0ebb464a-8780-4860-924f-8b2d1d1b33ef",
          "description" : "Applicable To: Linked clone automated desktop pools.<br>View Composer domain account. This is the administrator which will add the machines to its domain upon creation. This must be set for linked-clone automated desktop pools."
        }
      },
      "title" : "DesktopPoolCustomizationSettings",
      "description" : "Customization settings."
    },
    "DesktopPoolDatastoreSettings" : {
      "type" : "object",
      "properties" : {
        "datastore_id" : {
          "type" : "string",
          "example" : "datastore-1",
          "description" : "Id of the datastore."
        },
        "sdrs_cluster" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether datastore represents a Storage DRS cluster."
        },
        "storage_overcommit" : {
          "type" : "string",
          "example" : "CONSERVATIVE",
          "description" : "Storage overcommit determines how Horizon places new machines on the selected datastores. With an aggressive overcommit level, Horizon reserves less space for sparse disk growth, but fits more machines on the datastore.\n* NONE: No overcommit.\n* CONSERVATIVE: Conservative.\n* MODERATE: Moderate.\n* AGGRESSIVE: Aggressive.\n* UNBOUNDED: Unbounded.",
          "enum" : [ "NONE", "CONSERVATIVE", "MODERATE", "AGGRESSIVE", "UNBOUNDED" ]
        }
      },
      "title" : "DesktopPoolDatastoreSettings",
      "description" : "Settings for a Virtual Center datastore."
    },
    "DesktopPoolDisplayProtocolSettings" : {
      "type" : "object",
      "required" : [ "allow_users_to_choose_protocol", "default_display_protocol", "display_protocols", "html_access_enabled", "renderer3d", "session_collaboration_enabled", "vram_size_mb" ],
      "properties" : {
        "allow_users_to_choose_protocol" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the users can choose the protocol. Default value is true."
        },
        "default_display_protocol" : {
          "type" : "string",
          "example" : "PCOIP",
          "description" : "The default display protocol for the desktop pool. For a managed desktop pool, this will default to PCOIP.For an unmanaged desktop pool, this will default to RDP.\n* RDP: Microsoft Remote Desktop Protocol.\n* PCOIP: PCoIP protocol.\n* BLAST: BLAST protocol.",
          "enum" : [ "RDP", "PCOIP", "BLAST" ]
        },
        "display_protocols" : {
          "type" : "array",
          "example" : [ "PCOIP", "BLAST", "RDP" ],
          "description" : "List of supported display protocols for this desktop pool.Default value is [PCOIP, RDP, BLAST].",
          "items" : {
            "type" : "string",
            "enum" : [ "RDP", "PCOIP", "BLAST" ]
          }
        },
        "grid_vgpus_enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "When 3D rendering is managed by the vSphere Client, this enables support for NVIDIA GRID vGPUs.This will be false if 3D rendering is not managed by the vSphere Client. If this is true,the host or cluster associated with the desktop pool must support NVIDIA GRID and vGPU types required by the desktop pool's VirtualMachines,VmTemplate, or BaseImageSnapshot. If this is false, the desktop pool's VirtualMachines, VmTemplate, orBaseImageSnapshot must not support NVIDIA GRID vGPUs. Since suspending VMs with passthroughdevices such as vGPUs is not possible, power_policy cannot be set to SUSPEND if this is enabled.Default value is false."
        },
        "html_access_enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This property is no longer in use for Horizon Components. It is always set to true. HTML Access, enabled by VMware Blast technology, allows users to connect to machines from Web browsers. Horizon Client software does not have to be installed on the client devices. To enable HTML Access, you must install the HTML Machine Access feature pack. Also, Blast must be configured as a supported protocol in displayProtocols."
        },
        "max_number_of_monitors" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "When 3D is disabled, the 'Max number of monitors' and 'Max resolution of any one monitor' settings determine the amount ofvRAM assigned to machines in this desktop. The greater these values are, the more memory will be consumeon the associated ESX hosts. Existing virtual machines must be powered off and subsequently powered onfor the change to take effect. A restart will not cause the changes to take effect. If 3D is enabled and managedby View, the maximum number of monitors must be 1 or 2. For Instant Clones, this value is inherited from snapshot of Master VM.",
          "minimum" : 1,
          "maximum" : 4,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "max_resolution_of_any_one_monitor" : {
          "type" : "string",
          "example" : "WUXGA",
          "description" : "If 3D rendering is enabled and managed by View, this must be set to the default value. When 3D rendering is disabled,the 'Max number of monitors' and 'Max resolution of any one monitor' settings determine the amount of vRAM assignedto machines in this desktop. The greater these values are, the more memory will be consumed on the associated ESX hosts.This setting is only relevant on managed machines. Existing virtual machines must be powered off and subsequently poweredon for the change to take effect. A restart will not cause the changes to take effect. For Instant Clones,this value is inherited from snapshot of Master VM. This property has a default value of WUXGA.\n* WSXGA_PLUS: 1680x1050 resolution.\n* WUXGA: 1920x1200 resolution.\n* WQXGA: 2560x1600 resolution.\n* UHD: 3840x2160 resolution.",
          "enum" : [ "WSXGA_PLUS", "WUXGA", "WQXGA", "UHD" ]
        },
        "renderer3d" : {
          "type" : "string",
          "example" : "true",
          "description" : "3D rendering is supported on Windows 7 or later guests running on VMs with virtual hardware version8 or later. The default protocol must be PCoIP and users must not be allowed to choose their ownprotocol to enable 3D rendering. For instant clone source desktop 3D rendering always mapped to MANAGE_BY_VSPHERE_CLIENT.Default value is DISABLED.\n* MANAGE_BY_VSPHERE_CLIENT: 3D rendering managed by vSphere Client.\n* AUTOMATIC: 3D rendering is automatic.\n* SOFTWARE: 3D rendering is software dependent. The software renderer is supported (at minimum) on virtual hardware version 8 in a vSphere 5.0 environment.\n* HARDWARE: 3D rendering is hardware dependent. The hardware-based renderer is supported (at minimum) on virtual hardware version 9 in a vSphere 5.1 environment.\n* DISABLED: 3D rendering is disabled.",
          "enum" : [ "MANAGE_BY_VSPHERE_CLIENT", "AUTOMATIC", "SOFTWARE", "HARDWARE", "DISABLED" ]
        },
        "session_collaboration_enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enable session collaboration feature. Session collaborationallows a user to share their remote session with other users.BLAST must be configured as a supported protocol in supported_display_protocols.Default value is false."
        },
        "vgpu_grid_profile" : {
          "type" : "string",
          "example" : "instant-profile",
          "description" : "NVIDIA GRID vGPUs might have multiple profiles and any one of the available profiles can beapplied to newly created instant clone desktop. The profile specified in this field will beused in the newly created instant clone desktop. Will be set if enable_grid_vgpus set to true."
        },
        "vram_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 64,
          "description" : "vRAM size for View managed 3D rendering. More VRAM can improve 3D performance.Size is in MB. On ESXi 5.0 hosts, the renderer allows a maximum VRAM size of 128MB. On ESXi 5.1and later hosts, the maximum VRAM size is 512MB. For Instant Clones, this value is inherited from snapshot of Master VM.This property is applicable when 3D renderer is not disabled. This has a default value of 96.",
          "minimum" : 64,
          "maximum" : 512,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        }
      },
      "title" : "DesktopPoolDisplayProtocolSettings",
      "description" : "Settings for the networking protocol to display the remote machine."
    },
    "DesktopPoolInfo" : {
      "type" : "object",
      "required" : [ "enabled", "id", "name", "settings", "source", "type" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Desktop pool description",
          "description" : "Description of the Desktop Pool. The maximum length is 1024 characters."
        },
        "display_name" : {
          "type" : "string",
          "example" : "pool",
          "description" : "Display name of the Desktop Pool. The maximum length is 256 characters."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the Desktop Pool is enabled for brokering."
        },
        "id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "Unique ID representing Desktop Pool."
        },
        "name" : {
          "type" : "string",
          "example" : "sales-pool1",
          "description" : "Name of the Desktop Pool. The maximum length is 64 characters."
        },
        "settings" : {
          "description" : "Settings related to the Desktop Pool.",
          "$ref" : "#/definitions/DesktopPoolSettings"
        },
        "source" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Source of the Machines in this Desktop Pool.\n* INSTANT_CLONE: The Desktop Pool uses instant clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools.\n* LINKED_CLONE: The Desktop Pool uses linked clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools.\n* VIRTUAL_CENTER: The Desktop Pool uses Virtual Center as source for provisioning the machines.Applicable for AUTOMATED and MANUAL type desktop pools.\n* RDS: The Desktop Pool is backed by Farm. The Farm used in this Desktop Pool can be of any Source.\n* UNMANAGED: The Desktop Pool holds the non-vCenter source machines that includes physical computers,blade PCs and non-vCenter servers. Applicable for MANUAL type desktop pools.",
          "enum" : [ "INSTANT_CLONE", "LINKED_CLONE", "VIRTUAL_CENTER", "RDS", "UNMANAGED" ]
        },
        "type" : {
          "type" : "string",
          "example" : "AUTOMATED",
          "description" : "Type of the Desktop Pool.\n* AUTOMATED: Automated Desktop Pool.\n* MANUAL: Manual Desktop Pool.\n* RDS: RDS Desktop Pool.",
          "enum" : [ "AUTOMATED", "MANUAL", "RDS" ]
        }
      },
      "title" : "DesktopPoolInfo",
      "description" : "Information related to Desktop Pool."
    },
    "DesktopPoolInfoV2" : {
      "type" : "object",
      "properties" : {
        "access_group_id" : {
          "type" : "string",
          "example" : "6fd4638a-381f-4518-aed6-042aa3d9f14c",
          "description" : "Access groups can organize the entities (like application pools, desktop pools) in the organization. They can also be used for delegated administration."
        },
        "allow_multiple_user_assignments" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Applicable To: Dedicated manual and automated desktop pools (except linked clone pools) with manual user assignment.<br>Whether assignment of multiple users to a single machine is allowed. "
        },
        "allow_rds_pool_multi_session_per_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Applicable To: RDS desktop pools.<br>Whether multiple sessions are allowed per user for this pool.For other desktop pools, allow_multiple_sessions_per_user in sessionSettings will be applicable."
        },
        "automatic_user_assignment" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Applicable To: Dedicated manual and automated desktop pools.<br>Automatic assignment of a user the first time they access the machine."
        },
        "category_folder_name" : {
          "type" : "string",
          "example" : "dir1",
          "description" : "Name of the category folder in the user's OS containing a shortcut to the desktop pool.Will be unset if the desktop does not belong to a category.This property defines valid folder names with a max length of 64 characters and up to 4 subdirectory levels.The subdirectories can be specified using a backslash, e.g. (dir1\\dir2\\dir3\\dir4). Folder names can't start orend with a backslash nor can there be 2 or more backslashes together. Combinations such as(\\dir1, dir1\\dir2\\, dir1\\\\dir2, dir1\\\\\\dir2) are invalid. The windows reserved keywords(CON, PRN, NUL, AUX, COM1 - COM9, LPT1 - LPT9 etc.) are not allowed in subdirectory names."
        },
        "cloud_assigned" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this desktop is assigned to a workspace in Horizon Cloud Services."
        },
        "cloud_managed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this desktop is managed by Horizon Cloud Services.This can be false only when cloud_assigned is false."
        },
        "cs_restriction_tags" : {
          "type" : "array",
          "example" : "CS1_TAG1",
          "description" : "List of tags for which the access to the desktop pool is restricted to.No list indicates that desktop pool can be accessed from any connection server.",
          "items" : {
            "type" : "string"
          }
        },
        "customization_settings" : {
          "description" : "Applicable To: Automated desktop pools.<br>Customization settings for this desktop pool.",
          "$ref" : "#/definitions/DesktopPoolCustomizationSettings"
        },
        "delete_in_progress" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the desktop pool is in the process of being deleted.Default value is false."
        },
        "description" : {
          "type" : "string",
          "example" : "Desktop pool description",
          "description" : "Description of the Desktop Pool. The maximum length is 1024 characters."
        },
        "display_assigned_machine_name" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Applicable To: Dedicated manual and automated desktop pools.<br>Indicates whether users should see the hostname of the machine assigned to them instead of displayName when they connect using View Client. If no machine is assigned to the user then \"displayName (No machine assigned)\" will be displayed in the client."
        },
        "display_name" : {
          "type" : "string",
          "example" : "pool",
          "description" : "Display name of the Desktop Pool. The maximum length is 256 characters."
        },
        "display_protocol_settings" : {
          "description" : "Remote display protocol settings. These relate to RDP/PCoIP/BLAST.",
          "$ref" : "#/definitions/DesktopPoolDisplayProtocolSettings"
        },
        "enable_client_restrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Client restrictions to be applied to the desktop pool."
        },
        "enable_provisioning" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Applicable To: Automated desktop pools.<br>Whether provisioning is enabled."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the Desktop Pool is enabled for brokering."
        },
        "farm_id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "Applicable To: RDS desktop pools.<br>Farm needed to create RDS desktop pool."
        },
        "id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "Unique ID representing Desktop Pool."
        },
        "image_source" : {
          "type" : "string",
          "example" : "VIRTUAL_CENTER",
          "description" : "Applicable To: Automated desktop pools.<br>Source of image used in the desktop pool.\n* VIRTUAL_CENTER: Image was created in virtual center.\n* IMAGE_CATALOG: Image was created in image catalog.",
          "enum" : [ "VIRTUAL_CENTER", "IMAGE_CATALOG" ]
        },
        "name" : {
          "type" : "string",
          "example" : "sales-pool1",
          "description" : "Name of the Desktop Pool. The maximum length is 64 characters."
        },
        "nics" : {
          "type" : "array",
          "description" : "Applicable To: Automated desktop pools.<br>Network interface card settings for machines provisioned for this desktop. A NIC may appear at most once in these settings and must be present on this desktop pool's parent's snapshot or template. Not all NICs need be configured. Any that are not will use default settings.",
          "items" : {
            "$ref" : "#/definitions/DesktopPoolNetworkInterfaceCardSettings"
          }
        },
        "pattern_naming_settings" : {
          "description" : "Applicable To: Automated desktop pools.<br>Pattern naming settings.",
          "$ref" : "#/definitions/DesktopPoolVirtualMachinePatternNamingSettings"
        },
        "provisioning_settings" : {
          "description" : "Applicable To: Automated desktop pools.<br>Virtual center entities used for provisioning.",
          "$ref" : "#/definitions/DesktopPoolProvisioningSettings"
        },
        "provisioning_status_data" : {
          "description" : "Applicable To: Automated desktop pools.<br>Provisioning status data about this desktop pool.",
          "$ref" : "#/definitions/DesktopPoolProvisioningStatusData"
        },
        "session_settings" : {
          "description" : "Includes machine settings applicable when a user logs off or when a desktop pool is no longer keeping a machine as a spare.",
          "$ref" : "#/definitions/DesktopPoolSessionSettingsV2"
        },
        "session_type" : {
          "type" : "string",
          "example" : "DESKTOP",
          "description" : "Supported session types for this desktop pool. If application sessions are selected to besupported then this desktop pool can be used for application pool creation. This will beuseful when the machines in the pool support application remoting. Default value of DESKTOP.\n* DESKTOP: Only desktop sessions are supported.\n* APPLICATION: Only application sessions are supported.\n* DESKTOP_AND_APPLICATION: Both desktop and application sessions are supported.",
          "enum" : [ "DESKTOP", "APPLICATION", "DESKTOP_AND_APPLICATION" ]
        },
        "shortcut_locations" : {
          "type" : "array",
          "example" : "Desktop",
          "description" : "Locations of the category folder in the user's OS containing a shortcut to the desktop pool.The value will be present if categoryFolderName is set.",
          "items" : {
            "type" : "string"
          }
        },
        "source" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Source of the Machines in this Desktop Pool.\n* INSTANT_CLONE: The Desktop Pool uses instant clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools.\n* LINKED_CLONE: The Desktop Pool uses linked clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools.\n* VIRTUAL_CENTER: The Desktop Pool uses Virtual Center as source for provisioning the machines.Applicable for AUTOMATED and MANUAL type desktop pools.\n* RDS: The Desktop Pool is backed by Farm. The Farm used in this Desktop Pool can be of any Source.\n* UNMANAGED: The Desktop Pool holds the non-vCenter source machines that includes physical computers,blade PCs and non-vCenter servers. Applicable for MANUAL type desktop pools.",
          "enum" : [ "INSTANT_CLONE", "LINKED_CLONE", "VIRTUAL_CENTER", "RDS", "UNMANAGED" ]
        },
        "specific_naming_settings" : {
          "description" : "Applicable To: Automated desktop pools.<br>Specified name settings.",
          "$ref" : "#/definitions/DesktopPoolVirtualMachineSpecifiedNamingSettings"
        },
        "stop_provisioning_on_error" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Applicable To: Automated desktop pools.<br>Whether provisioning on all machines stops on error."
        },
        "storage_settings" : {
          "description" : "Applicable To: Automated desktop pools.<br>Virtual Center storage settings.",
          "$ref" : "#/definitions/DesktopPoolStorageSettings"
        },
        "transparent_page_sharing_scope" : {
          "type" : "string",
          "example" : "VM",
          "description" : "Applicable To: Manual and automated desktop pools.<br>The transparent page sharing scope.\n* VM: Inter-VM page sharing is not permitted.\n* DESKTOP_POOL: Inter-VM page sharing among VMs belonging to the same Desktop pool is permitted.\n* POD: Inter-VM page sharing among VMs belonging to the same Pod is permitted.\n* GLOBAL: Inter-VM page sharing among all VMs on the same host is permitted.",
          "enum" : [ "VM", "DESKTOP_POOL", "POD", "GLOBAL" ]
        },
        "type" : {
          "type" : "string",
          "example" : "AUTOMATED",
          "description" : "Type of the desktop pool.\n* AUTOMATED: Automated Desktop Pool.\n* MANUAL: Manual Desktop Pool.\n* RDS: RDS Desktop Pool.",
          "enum" : [ "AUTOMATED", "MANUAL", "RDS" ]
        },
        "user_assignment" : {
          "type" : "string",
          "example" : "DEDICATED",
          "description" : "Applicable To: Manual and automated desktop pools.<br>User assignment scheme.\n* DEDICATED: With dedicated assignment, a user returns to the same machine at each session.\n* FLOATING: With floating assignment, a user may return to one of the available machines for the next session.",
          "enum" : [ "DEDICATED", "FLOATING" ]
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "f148f3e8-db0e-4abb-9c33-7e5205ccd360",
          "description" : "Applicable To: Manual and automated desktop pools.<br>Virtual Center that manages the machines of the desktop pool."
        },
        "view_storage_accelerator_settings" : {
          "description" : "Applicable To: Manual and automated desktop pools.<br>View Storage Accelerator settings.",
          "$ref" : "#/definitions/DesktopPoolViewStorageAcceleratorSettings"
        }
      },
      "title" : "DesktopPoolInfoV2",
      "description" : "Information related to Desktop Pool."
    },
    "DesktopPoolInstantClonePushImageSettings" : {
      "type" : "object",
      "properties" : {
        "add_virtual_tpm" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to add Virtual TPM device."
        },
        "logoff_policy" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b473",
          "description" : "Determines when to perform the operation on machines which have an active session.\n* FORCE_LOGOFF: Users will be forced to log off when the system is ready to operate on their virtual machines. Before being forcibly logged off, users may have a grace period in which to save their work (Global Settings).\n* WAIT_FOR_LOGOFF: Wait for connected users to disconnect before the task starts. The operation starts immediately on machines without active sessions.",
          "enum" : [ "FORCE_LOGOFF", "WAIT_FOR_LOGOFF" ]
        },
        "start_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1587081283000,
          "description" : "When to start the operation. If unset or the time is in the past, the operation will begin immediately. Measured as epoch time."
        },
        "stop_on_first_error" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the operation should stop on first error."
        }
      },
      "title" : "DesktopPoolInstantClonePushImageSettings",
      "description" : "Settings for the push image operation."
    },
    "DesktopPoolNetworkInterfaceCardSettings" : {
      "type" : "object",
      "properties" : {
        "network_interface_card_id" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b473",
          "description" : "The network interface card id for these settings."
        },
        "network_interface_card_name" : {
          "type" : "string",
          "example" : "Network adapter 1",
          "description" : "The network interface card name."
        },
        "network_label_assignment_specs" : {
          "type" : "array",
          "description" : "Automatic network label assignment feature settings for this NIC. By default, newly provisioned machines of an automated desktop pool retain their parent image's network labels on each of their network interface cards. In certain circumstances, notably dealing with VLAN subset sizing and DHCP IP address availability, it may be desirable for the desktop pool to instead use different network labels for these newly provisioned machines. This feature allows an administrator to provide a per NIC list of network labels and their maximum availability to be automatically distributed to newly provisioned machines. <br> If this is unset, the feature is disabled.<br> Starting at the alphabetically first network label specification in the list that has not yet been assigned its maximum count for this NIC on this desktop pool, the desktop pool will have its next provisioned machine's NIC assigned that label. If all network labels in this list have reached their maximum count, this desktop pool will have further provisioned machines assigned the last label in the list over capacity, and an error will be logged. Not all labels need be configured. <br>",
          "items" : {
            "$ref" : "#/definitions/NetworkLabelAssignmentSettings"
          }
        }
      },
      "title" : "DesktopPoolNetworkInterfaceCardSettings",
      "description" : "Network interface card settings for machines provisioned for this desktop pool."
    },
    "DesktopPoolProvisioningSettings" : {
      "type" : "object",
      "properties" : {
        "add_virtual_tpm" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to add Virtual TPM device."
        },
        "base_snapshot_id" : {
          "type" : "string",
          "example" : "snapshot-1",
          "description" : "Applicable To: Linked/instant clone automated desktop pools.<br>Base image snapshot for linked clone desktop pool and current image snapshot for instant clone desktop pool."
        },
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter within which the desktop pool is configured."
        },
        "host_or_cluster_id" : {
          "type" : "string",
          "example" : "domain-s425",
          "description" : "Host or cluster where the machines are deployed in."
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Applicable To: Full/instant clone automated desktop pools.<br>Image management stream used in desktop pool when Image Management feature is enabled."
        },
        "im_tag_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Applicable To: Full/instant clone automated desktop pools.<br>Image management tag associated with the selected image management stream which is used in desktop pool when Image Management feature is enabled."
        },
        "min_ready_vms_on_vcomposer_maintenance" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Applicable To: Linked clone automated desktop pools.<br>Minimum number of ready (provisioned) machines during View Composer maintenance operations."
        },
        "parent_vm_id" : {
          "type" : "string",
          "example" : "vm-2",
          "description" : "Applicable To: Linked/instant clone automated desktop pools.<br>Base image VM for linked clone desktop pool and current image for instant clone desktop pool."
        },
        "resource_pool_id" : {
          "type" : "string",
          "example" : "resgroup-1",
          "description" : "Resource pool to deploy the machines."
        },
        "vm_folder_id" : {
          "type" : "string",
          "example" : "group-v1",
          "description" : "VM folder where the machines are deployed to."
        },
        "vm_template_id" : {
          "type" : "string",
          "example" : "vm-1",
          "description" : "Applicable To: Full clone automated desktop pools.<br>Template from which full clone machines are deployed."
        }
      },
      "title" : "DesktopPoolProvisioningSettings",
      "description" : "Virtual Center provisioning settings for the automated desktop pool."
    },
    "DesktopPoolProvisioningStatusData" : {
      "type" : "object",
      "properties" : {
        "instant_clone_current_image_state" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b473",
          "description" : "Applicable To: instant clone automated desktop pools.<br>This represents the state of the current image of this instant clone desktop pool.\n* READY: This is the state of the current image after successful completion of pool creation operation. At this stage the current image is ready to be used to create the instant clones. Please note that this state is also reached from UNPUBLISHING state on successful completion of editing of cluster or editing of datastore(s) operations.\n* FAILED: This is the state of the current image if instant clone pool delete operation has failed or timed out.\n* PENDING_UNPUBLISH: This is the state of the current image before instant clone pool delete or cluster edit or datastore(s) edit operation(s) begins.\n* UNPUBLISHING: This is the transient state of the current image when instant clone pool delete or cluster edit or datastore(s) edit operation(s) is going on.",
          "enum" : [ "READY", "FAILED", "PENDING_UNPUBLISH", "UNPUBLISHING" ]
        },
        "instant_clone_operation" : {
          "type" : "string",
          "example" : "NONE",
          "description" : "Applicable To: instant clone automated desktop pools.<br>The operation that this instant clone desktop pool is undergoing.\n* NONE: There is no current operation on the desktop pool.\n* INITIAL_PUBLISH: The desktop pool has just been created and is undergoing initial publishing.\n* SCHEDULE_PUSH_IMAGE: The push operation is scheduled on the desktop pool.\n* CANCEL_SCHEDULED_PUSH_IMAGE: The scheduled push operation on the desktop pool is being cancelled.\n* INFRASTRUCTURE_CHANGE: A cluster or datastore change operation was requested for the desktop pool.\n* FINAL_UNPUBLISH: A desktop pool has been deleted and is undergoing final unpublishing.",
          "enum" : [ "NONE", "INITIAL_PUBLISH", "SCHEDULE_PUSH_IMAGE", "CANCEL_SCHEDULED_PUSH_IMAGE", "INFRASTRUCTURE_CHANGE", "FINAL_UNPUBLISH" ]
        },
        "instant_clone_pending_im_stream_id" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b473",
          "description" : "Applicable To: instant clone automated desktop pools.<br>Pending image management stream for instant clone desktop pools."
        },
        "instant_clone_pending_im_tag_id" : {
          "type" : "string",
          "example" : "e9896e51-48a2-4d82-ae9e-a0246981b484",
          "description" : "Applicable To: instant clone automated desktop pools.<br>Pending image management tag for instant clone desktop pools"
        },
        "instant_clone_pending_image_error" : {
          "type" : "string",
          "example" : "Could not authenticate with domain administrator credentials",
          "description" : "Applicable To: instant clone automated desktop pools.<br>This represents the error message if publishing of push image operation is failed."
        },
        "instant_clone_pending_image_parent_vm_id" : {
          "type" : "string",
          "example" : "vm-1",
          "description" : "Applicable To: instant clone automated desktop pools.<br>Pending base image VM for instant clone desktop pools. This is used to return the information about the parent VM of the pending Image."
        },
        "instant_clone_pending_image_progress" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Applicable To: instant clone automated desktop pools.<br>This represents the pending image publish progress in percentage for an instant clone desktop pool."
        },
        "instant_clone_pending_image_snapshot_id" : {
          "type" : "string",
          "example" : "snapshot-1",
          "description" : "Applicable To: instant clone automated desktop pools.<br>Pending base image snapshot for instant clone desktop pools. This is used to return the information about the snapshot of the pending image."
        },
        "instant_clone_pending_image_state" : {
          "type" : "string",
          "example" : "FAILED",
          "description" : "Applicable To: instant clone automated desktop pools.<br>This represents the state of the pending image of this instant clone desktop pool. This will be null when there is no pending image for the desktop pool.\n* PENDING_PUBLISH: This is the initial transient state of the pending image before instant clone pool creation operation has started.\n* PUBLISHING: This is the transient state of the pending image when creation of instant clone pool operation is going on.\n* UNPUBLISHING: This is the transient state of the pending image when instant clone pool delete or cluster edit or datastore(s) edit operation(s) is going on.\n* READY: This is the state of the pending image after successful publish of the pending image and before that image has been upgraded to the current image. This is normally seen after successful publish for a push image which has been scheduled to trigger at a later time.\n* FAILED: This is the state of the pending image if creation of instant clone pool operation has failed or timed out.",
          "enum" : [ "PENDING_PUBLISH", "PUBLISHING", "UNPUBLISHING", "READY", "FAILED" ]
        },
        "instant_clone_push_image_settings" : {
          "description" : "Applicable To: instant clone automated desktop pools.<br>If the current operation is a push image, the settings for that operation.",
          "$ref" : "#/definitions/DesktopPoolInstantClonePushImageSettings"
        },
        "last_provisioning_error" : {
          "type" : "string",
          "example" : "Initial publish failed: Could not authenticate with domain administrator credentials",
          "description" : "String message detailing the last provisioning error on this desktop pool while stop_provisioning_on_error is enabled. This will be cleared when enable_provisioning is updated to true."
        },
        "last_provisioning_error_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1587081283000,
          "description" : "Time the last provisioning error occurred on this desktop while stop_provisioning_on_error is enabled. This will be cleared when enable_provisioning is updated to true. Measured as epoch time."
        }
      },
      "title" : "DesktopPoolProvisioningStatusData",
      "description" : "Provisioning status data about this automated desktop pool."
    },
    "DesktopPoolQuickprepCustomizationSettings" : {
      "type" : "object",
      "properties" : {
        "post_synchronization_script_parameters" : {
          "type" : "string",
          "example" : "p1 p2 p3",
          "description" : "Post synchronization script parameters."
        },
        "post_synchronization_script_path" : {
          "type" : "string",
          "example" : "quickprep_postsync_script",
          "description" : "Post synchronization script. QuickPrep can run a customization script on linked-clone machines after they are created, recomposed, and refreshed. Provide the path to the script on the parent virtual machine."
        },
        "power_off_script_parameters" : {
          "type" : "string",
          "example" : "p1 p2 p3",
          "description" : "Power off script parameters."
        },
        "power_off_script_path" : {
          "type" : "string",
          "example" : "quickprep_poweroff_script",
          "description" : "Power off script. QuickPrep can run a customization script on linked-clone machines before they are powered off. Provide the path to the script on the parent virtual machine."
        }
      },
      "title" : "DesktopPoolQuickprepCustomizationSettings",
      "description" : "Settings for QuickPrep customization."
    },
    "DesktopPoolSessionSettings" : {
      "type" : "object",
      "required" : [ "allow_multiple_sessions_per_user", "allow_users_to_reset_machines", "delete_or_refresh_machine_after_logoff", "disconnected_session_timeout_policy", "empty_session_timeout_policy", "logoff_after_timeout", "power_policy", "refresh_os_disk_after_logoff", "refresh_period_days_for_replica_os_disk", "refresh_threshold_percentage_for_replica_os_disk" ],
      "properties" : {
        "allow_multiple_sessions_per_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether multiple sessions are allowed per user in case of Floating User Assignment. Default value is false."
        },
        "allow_users_to_reset_machines" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the user can be allowed to reset or restart their machines. Default value is false."
        },
        "delete_or_refresh_machine_after_logoff" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Whether machines are to be deleted or refreshed after logoff in case of Floating User Assignment.This is applicable for automated desktops with virtual machines names based onpattern naming. This is not applicable for desktops that are using specified naming since dynamic creation and deletion of VMs is not supported.For Instant clone desktops this setting can only be set to DELETE. Default value is NEVER.\n* NEVER: Never delete or refresh the machine in the desktop pool.\n* DELETE: Delete the machine after user logoff.\n* REFRESH: Refresh the machine after user logoff.",
          "enum" : [ "NEVER", "DELETE", "REFRESH" ]
        },
        "disconnected_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Disconnected sessions timeout (in minutes). Will be set when disconnected_session_timeout_policy is set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disconnected_session_timeout_policy" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Log-off policy after disconnected session. Default value is NEVER.\n* IMMEDIATELY: Immmediately Logoff after user disconnect.\n* AFTER: Logoff after the specified number of minutes after user disconnect.\n* NEVER: Do not logoff after user disconnect.",
          "enum" : [ "IMMEDIATELY", "AFTER", "NEVER" ]
        },
        "empty_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Application empty session timeout (in minutes). An empty session (that has no remote-ablewindow) is disconnected after the timeout. Default value is 1.Will be set when the empty_session_timeout_policy set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "empty_session_timeout_policy" : {
          "type" : "string",
          "example" : "AFTER",
          "description" : "Application empty session timeout policy. Default value is AFTER.\n* IMMEDIATE: Empty session will be disconnected immediately.\n* NEVER: Empty session will never disconnected.\n* AFTER: Empty session will be disconnected after specified number of minutes.",
          "enum" : [ "IMMEDIATE", "NEVER", "AFTER" ]
        },
        "logoff_after_timeout" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the empty application sessions are logged off (true) or disconnected (false) after timeout.Default value is false."
        },
        "power_policy" : {
          "type" : "string",
          "example" : "ALWAYS_POWERED_ON",
          "description" : "Power policy for the machines in the desktop pool after logoff. This setting is only relevant for managed machines.Default value is TAKE_NO_POWER_ACTION.For Instant clone desktops this setting can only be set to ALWAYS_POWERED_ON.\n* TAKE_NO_POWER_ACTION: No action will be taken when user logs off.\n* ALWAYS_POWERED_ON: Ensure machines in the Desktop pool are always powered on.The connection server will monitor and power on machines as necessary.\n* SUSPEND: Suspend when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines.\n* POWER_OFF: Power off when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines.",
          "enum" : [ "TAKE_NO_POWER_ACTION", "ALWAYS_POWERED_ON", "SUSPEND", "POWER_OFF" ]
        },
        "refresh_os_disk_after_logoff" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Whether and when to refresh the OS disks for dedicated-assignment, linked-clone and instant-clone machines.Default value is NEVER.\n* NEVER: The OS disk is never refreshed.\n* ALWAYS: The OS disk is refreshed every time the user logs off.\n* EVERY: The OS disk is refreshed at regular intervals of a specified number of days. The number of days is counted from the last refresh, or from the initial provisioning if no refresh has occurred yet. For example, if the specified value is 3 days, and three days have passed since the last refresh, the machine is refreshed after the user logs off.\n* AT_SIZE: The OS disk is refreshed when its current size reaches a specified percentage of its maximum allowable size. The maximum size of a linked clone's OS disk is the size of the replica's OS disk. With this option, the size of the linked clone's OS disk in the datastore is compared to maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.",
          "enum" : [ "NEVER", "ALWAYS", "EVERY", "AT_SIZE" ]
        },
        "refresh_period_days_for_replica_os_disk" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "false",
          "description" : "Regular interval at which to refresh the OS disk. Will be set when refresh_os_disk_after_logoff set to EVERY.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "refresh_threshold_percentage_for_replica_os_disk" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "false",
          "description" : "With the 'AT_SIZE' option for refreshOsDiskAfterLogoff, the size of the linked clone's OS diskin the datastore is compared to its maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.Will be set when refresh_os_disk_after_logoff set to AT_SIZE."
        }
      },
      "title" : "DesktopPoolSessionSettings",
      "description" : "Machine settings applicable when a user logs off or when a desktop pool is no longer keeping a machine as a spare."
    },
    "DesktopPoolSessionSettingsV2" : {
      "type" : "object",
      "required" : [ "allow_multiple_sessions_per_user", "allow_users_to_reset_machines", "delete_or_refresh_machine_after_logoff", "disconnected_session_timeout_policy", "empty_session_timeout_policy", "logoff_after_timeout", "power_policy", "refresh_os_disk_after_logoff", "refresh_period_days_for_replica_os_disk", "refresh_threshold_percentage_for_replica_os_disk" ],
      "properties" : {
        "allow_multiple_sessions_per_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether multiple sessions are allowed per user in case of Floating User Assignment. Default value is false."
        },
        "allow_users_to_reset_machines" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the user can be allowed to reset or restart their machines. Default value is false."
        },
        "delete_or_refresh_machine_after_logoff" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Whether machines are to be deleted or refreshed after logoff in case of Floating User Assignment.This is applicable for automated desktops with virtual machines names based onpattern naming. This is not applicable for desktops that are using specified naming since dynamic creation and deletion of VMs is not supported.For Instant clone desktops this setting can only be set to DELETE. Default value is NEVER.\n* NEVER: Never delete or refresh the machine in the desktop pool.\n* DELETE: Delete the machine after user logoff.\n* REFRESH: Refresh the machine after user logoff.",
          "enum" : [ "NEVER", "DELETE", "REFRESH" ]
        },
        "disconnected_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Disconnected sessions timeout (in minutes). Will be set when disconnected_session_timeout_policy is set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disconnected_session_timeout_policy" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Log-off policy after disconnected session. Default value is NEVER.\n* IMMEDIATELY: Immmediately Logoff after user disconnect.\n* AFTER: Logoff after the specified number of minutes after user disconnect.\n* NEVER: Do not logoff after user disconnect.",
          "enum" : [ "IMMEDIATELY", "AFTER", "NEVER" ]
        },
        "empty_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Application empty session timeout (in minutes). An empty session (that has no remote-ablewindow) is disconnected after the timeout. Default value is 1.Will be set when the empty_session_timeout_policy set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "empty_session_timeout_policy" : {
          "type" : "string",
          "example" : "AFTER",
          "description" : "Application empty session timeout policy. Default value is AFTER.\n* IMMEDIATE: Empty session will be disconnected immediately.\n* NEVER: Empty session will never disconnected.\n* AFTER: Empty session will be disconnected after specified number of minutes.",
          "enum" : [ "IMMEDIATE", "NEVER", "AFTER" ]
        },
        "logoff_after_timeout" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the empty application sessions are logged off (true) or disconnected (false) after timeout.Default value is false."
        },
        "power_policy" : {
          "type" : "string",
          "example" : "ALWAYS_POWERED_ON",
          "description" : "Power policy for the machines in the desktop pool after logoff. This setting is only relevant for managed machines.Default value is TAKE_NO_POWER_ACTION.For Instant clone desktops this setting can only be set to ALWAYS_POWERED_ON.\n* TAKE_NO_POWER_ACTION: No action will be taken when user logs off.\n* ALWAYS_POWERED_ON: Ensure machines in the Desktop pool are always powered on.The connection server will monitor and power on machines as necessary.\n* SUSPEND: Suspend when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines.\n* POWER_OFF: Power off when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines.",
          "enum" : [ "TAKE_NO_POWER_ACTION", "ALWAYS_POWERED_ON", "SUSPEND", "POWER_OFF" ]
        },
        "pre_launch_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Application pre-launch session timeout (in minutes). A pre-launch session is disconnected after the timeout. Default value is 10.Will be required when the pre-launch session timeout policy is set to AFTER.",
          "minimum" : 10,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "pre_launch_session_timeout_policy" : {
          "type" : "string",
          "example" : "AFTER",
          "description" : "Application pre-launch session timeout policy. Default value is AFTER.\n* NEVER: Pre-launched session is never disconnected.\n* AFTER: Pre-launched session is disconnected after specified number of minutes.",
          "enum" : [ "NEVER", "AFTER" ]
        },
        "refresh_os_disk_after_logoff" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Whether and when to refresh the OS disks for dedicated-assignment, linked-clone and instant-clone machines.Default value is NEVER.\n* NEVER: The OS disk is never refreshed.\n* ALWAYS: The OS disk is refreshed every time the user logs off.\n* EVERY: The OS disk is refreshed at regular intervals of a specified number of days. The number of days is counted from the last refresh, or from the initial provisioning if no refresh has occurred yet. For example, if the specified value is 3 days, and three days have passed since the last refresh, the machine is refreshed after the user logs off.\n* AT_SIZE: The OS disk is refreshed when its current size reaches a specified percentage of its maximum allowable size. The maximum size of a linked clone's OS disk is the size of the replica's OS disk. With this option, the size of the linked clone's OS disk in the datastore is compared to maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.",
          "enum" : [ "NEVER", "ALWAYS", "EVERY", "AT_SIZE" ]
        },
        "refresh_period_days_for_replica_os_disk" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "false",
          "description" : "Regular interval at which to refresh the OS disk. Will be set when refresh_os_disk_after_logoff set to EVERY.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "refresh_threshold_percentage_for_replica_os_disk" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "false",
          "description" : "With the 'AT_SIZE' option for refreshOsDiskAfterLogoff, the size of the linked clone's OS diskin the datastore is compared to its maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.Will be set when refresh_os_disk_after_logoff set to AT_SIZE."
        }
      },
      "title" : "DesktopPoolSessionSettingsV2",
      "description" : "Machine settings applicable when a user logs off or when a desktop pool is no longer keeping a machine as a spare."
    },
    "DesktopPoolSettings" : {
      "type" : "object",
      "required" : [ "delete_in_progress" ],
      "properties" : {
        "allow_mutilple_sessions_per_user" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether multiple sessions are allowed per user for this pool. This is valid for RDS desktop pools.For other Desktops, allow_multiple_sessions_per_user in settings will be applicable.Default value is false."
        },
        "category_folder_name" : {
          "type" : "string",
          "example" : "dir1",
          "description" : "Name of the category folder in the user's OS containing a shortcut to the desktop pool.Will be unset if the desktop does not belong to a category.This property defines valid folder names with a max length of 64 characters and up to 4 subdirectory levels.The subdirectories can be specified using a backslash, e.g. (dir1\\dir2\\dir3\\dir4). Folder names can't start orend with a backslash nor can there be 2 or more backslashes together. Combinations such as(\\dir1, dir1\\dir2\\, dir1\\\\dir2, dir1\\\\\\dir2) are invalid. The windows reserved keywords(CON, PRN, NUL, AUX, COM1 - COM9, LPT1 - LPT9 etc.) are not allowed in subdirectory names."
        },
        "cloud_assigned" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this desktop is assigned to a workspace in Horizon Cloud Services. Default value is false."
        },
        "cloud_managed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this desktop is managed by Horizon Cloud Services.This can be false only when cloud_assigned is false. Default value is false."
        },
        "cs_restriction_tags" : {
          "type" : "array",
          "example" : "CS1_TAG1",
          "description" : "List of tags for which the access to the desktop pool is restricted to.No list indicates that desktop pool can be accessed from any connection server.",
          "items" : {
            "type" : "string"
          }
        },
        "delete_in_progress" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the desktop pool is in the process of being deleted.Default value is false."
        },
        "display_protocol_settings" : {
          "description" : "Remote display protocol settings. These relate to RDP/PCoIP/BLAST.",
          "$ref" : "#/definitions/DesktopPoolDisplayProtocolSettings"
        },
        "enable_client_restrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Client restrictions to be applied to the desktop pool.Currently it is valid for RDS desktop pools only. Default value is false."
        },
        "session_settings" : {
          "description" : "Includes machine settings applicable when a user logs off or when a desktop pool is no longer keeping a machine as a spare.",
          "$ref" : "#/definitions/DesktopPoolSessionSettings"
        },
        "session_type" : {
          "type" : "string",
          "example" : "DESKTOP",
          "description" : "Supported session types for this desktop pool. If application sessions are selected to besupported then this desktop pool can be used for application pool creation. This will beuseful when the machines in the pool support application remoting. Default value of DESKTOP.\n* DESKTOP: Only desktop sessions are supported.\n* APPLICATION: Only application sessions are supported.\n* DESKTOP_AND_APPLICATION: Both desktop and application sessions are supported.",
          "enum" : [ "DESKTOP", "APPLICATION", "DESKTOP_AND_APPLICATION" ]
        },
        "shortcut_locations" : {
          "type" : "array",
          "example" : "Desktop",
          "description" : "Locations of the category folder in the user's OS containing a shortcut to the desktop pool.The value will be present if categoryFolderName is set.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "DesktopPoolSettings",
      "description" : "Information related to Desktop Pool Settings."
    },
    "DesktopPoolStorageSettings" : {
      "type" : "object",
      "properties" : {
        "datastores" : {
          "type" : "array",
          "description" : "Datastores to store the machine (or the OS disk using other options for linked clone or instant clone machine storage)",
          "items" : {
            "$ref" : "#/definitions/DesktopPoolDatastoreSettings"
          }
        },
        "non_persistent_disk_drive_letter" : {
          "type" : "string",
          "example" : "Auto",
          "description" : "Non persistent disk drive letter."
        },
        "non_persistent_disk_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 4096,
          "description" : "Size of the non persistent disk in MB."
        },
        "non_persistent_redirect_disposable_files" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Redirect disposable files to a non-persistent disk that will be deleted automatically when a user's session ends."
        },
        "persistent_disk_datastores" : {
          "type" : "array",
          "description" : "Datastores to store persistent disks for linked clone machines.",
          "items" : {
            "$ref" : "#/definitions/DesktopPoolDatastoreSettings"
          }
        },
        "persistent_disk_drive_letter" : {
          "type" : "string",
          "example" : "D",
          "description" : "Persistent disk drive letter."
        },
        "persistent_disk_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2048,
          "description" : "Size of the persistent disk in MB."
        },
        "reclaim_vm_disk_space" : {
          "type" : "boolean",
          "example" : false,
          "description" : "With vSphere 5.x, virtual machines can be configured to use a space efficient disk format that supports reclamation of unused disk space (such as deleted files). This option reclaims unused disk space on each virtual machine. The operation is initiated when an estimate of used disk space exceeds the specified threshold."
        },
        "reclamation_threshold_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1024,
          "description" : "Initiate reclamation when unused space on virtual machine exceeds the threshold in MB."
        },
        "redirect_windows_profile" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Windows profiles will be redirected to persistent disks, which are not affected by View Composer operations such as refresh, recompose and rebalance."
        },
        "replica_disk_datastore_id" : {
          "type" : "string",
          "example" : "datastore-1",
          "description" : "Datastore to store replica disks for linked clone and instant clone machines."
        },
        "use_native_snapshots" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Applicable To: Linked/instant clone automated desktop pool.<br>Native NFS Snapshots (VAAI - vStorage API for Array Integration) is a hardware feature of certain storage arrays. It uses native snapshotting technology to provide linked clone functionality."
        },
        "use_separate_datastores_persistent_and_os_disks" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to use separate datastores for persistent and OS disks."
        },
        "use_separate_datastores_replica_and_os_disks" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to use separate datastores for replica and OS disks."
        },
        "use_vsan" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to use vSphere vSAN."
        }
      },
      "title" : "DesktopPoolStorageSettings",
      "description" : "Virtual Center storage settings for the automated desktop pool."
    },
    "DesktopPoolViewStorageAcceleratorSettings" : {
      "type" : "object",
      "properties" : {
        "blackout_times" : {
          "type" : "array",
          "description" : "A list of blackout times. Storage accelerator regeneration and machine disk space reclamation do not occur during blackout times. The same blackout policy applies to both operations. If unset, no blackout times are used.",
          "items" : {
            "$ref" : "#/definitions/ViewStorageAcceleratorBlackoutTimeSettings"
          }
        },
        "regenerate_view_storage_accelerator_days" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 7,
          "description" : "How often to regenerate the View Storage Accelerator cache. Measured in Days."
        },
        "use_view_storage_accelerator" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to use View Storage Accelerator."
        },
        "view_storage_accelerator_disk_types" : {
          "type" : "string",
          "example" : "OS_DISKS",
          "description" : "Disk types to enable for the View Storage Accelerator feature. This is only applicable to linked clone desktop pools.\n* OS_DISKS: OS disks.\n* OS_AND_PERSISTENT_DISKS: OS and persistent disks.",
          "enum" : [ "OS_DISKS", "OS_AND_PERSISTENT_DISKS" ]
        }
      },
      "title" : "DesktopPoolViewStorageAcceleratorSettings",
      "description" : "Settings related to the View Storage Accelerator feature."
    },
    "DesktopPoolVirtualMachinePatternNamingSettings" : {
      "type" : "object",
      "properties" : {
        "max_number_of_machines" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Maximum number of machines in the desktop pool."
        },
        "min_number_of_machines" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "The minimum number of machines to have provisioned if on demand provisioning is selected."
        },
        "naming_pattern" : {
          "type" : "string",
          "example" : "vm-{n}-sales",
          "description" : "Virtual machines will be named according to the specified naming pattern."
        },
        "number_of_spare_machines" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Number of spare powered on machines."
        },
        "provisioning_time" : {
          "type" : "string",
          "example" : "ON_DEMAND",
          "description" : "Determines when the machines are provisioned.\n* ON_DEMAND: Provision machines on demand.\n* UP_FRONT: Provision all machines up-front.",
          "enum" : [ "ON_DEMAND", "UP_FRONT" ]
        }
      },
      "title" : "DesktopPoolVirtualMachinePatternNamingSettings",
      "description" : "Settings related to specification of VMs with a naming pattern."
    },
    "DesktopPoolVirtualMachineSpecifiedNamingSettings" : {
      "type" : "object",
      "properties" : {
        "num_machines" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Number of machines in the pool."
        },
        "num_unassigned_machines_kept_powered_on" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Number of unassigned machines kept powered on. This value must be less than or equal to the number of specified names."
        },
        "start_machines_in_maintenance_mode" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Allows virtual machines to be customized manually before users can log in and access them. This mode must be exited manually."
        }
      },
      "title" : "DesktopPoolVirtualMachineSpecifiedNamingSettings",
      "description" : "Settings related to specified naming of machines."
    },
    "EnrollmentServerDetails" : {
      "type" : "object",
      "required" : [ "dns_name", "id", "status" ],
      "properties" : {
        "dns_name" : {
          "type" : "string",
          "example" : "enrollment-server.example.com",
          "description" : "Enrollment server dns name."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the Enrollment Server."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Enrollment server status.\n* OK: The state of enrollment server is OK.\n* ERROR: The enrollment server has an error.",
          "enum" : [ "OK", "ERROR" ]
        }
      },
      "title" : "EnrollmentServerDetails"
    },
    "EntitlementInfo" : {
      "type" : "object",
      "properties" : {
        "ad_user_or_group_ids" : {
          "type" : "array",
          "example" : [ "S-1-1-1-3965912346-1012345398-3123456564-123", "S-1-2-3-3123456786-1012345398-3123456784-124" ],
          "description" : "List of ad-user-or-group SIDs which are entitled to the given resource.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "Unique ID representing the resource.<br>Supported Filters : 'Equals'."
        }
      },
      "title" : "EntitlementInfo",
      "description" : "Entitlement Information related to the resource.<br>List API returning this summary information can use search filter queryto filter on specific fields supported by filters.<br>Supported Filters : 'Equals'.<br>See the field description to know the filter types it supports."
    },
    "EntitlementResponseInfo" : {
      "type" : "object",
      "properties" : {
        "ad_user_or_group_id" : {
          "type" : "string",
          "example" : "S-1-5-21-2898529287-1016622242-505487308-500",
          "description" : "Unique SID representing the ad-user-or-group"
        },
        "error_messages" : {
          "type" : "array",
          "example" : [ "Entity does not exists.", "Property is mandatory." ],
          "description" : "Reasons for the failure of the operation.",
          "items" : {
            "type" : "string"
          }
        },
        "status_code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 200,
          "description" : "Response HTTP status code of the operation."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1561939200000,
          "description" : "Timestamp in milliseconds when the operation failed. Measured as epoch time."
        }
      },
      "title" : "EntitlementResponseInfo",
      "description" : "Entitlement response info object corrspsonding to the given ad-user-or-group SID for the entitlement operation."
    },
    "EntitlementSpec" : {
      "type" : "object",
      "properties" : {
        "ad_user_or_group_ids" : {
          "type" : "array",
          "example" : [ "S-1-1-1-3965912346-1012345398-3123456564-123", "S-1-2-3-3123456786-1012345398-3123456784-124" ],
          "description" : "List of ad-user-or-group SIDs for the entitlement operations on the given resource.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "Unique ID representing the resource."
        }
      },
      "title" : "EntitlementSpec",
      "description" : "Specification for entitlement operations on a given resource id."
    },
    "EnvironmentInfo" : {
      "type" : "object",
      "required" : [ "cluster_guid", "cluster_name", "fips_mode_enabled", "ip_mode", "timezone_offset" ],
      "properties" : {
        "cluster_guid" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "The GUID of a group of Connection Servers sharing the same configuration."
        },
        "cluster_name" : {
          "type" : "string",
          "example" : "master-cluster",
          "description" : "The name of a group of Connection Servers sharing the same configuration."
        },
        "fips_mode_enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if FIPS mode is enabled."
        },
        "ip_mode" : {
          "type" : "string",
          "example" : "IPv4",
          "description" : "Indicates the IP mode of the environment.\n* IPv4: The ip mode is IPv4.\n* IPv6: The ip mode is IPv6.",
          "enum" : [ "IPv4", "IPv6" ]
        },
        "local_pod_name" : {
          "type" : "string",
          "example" : "master-pod",
          "description" : "The name of the current pod in the Multi-DataCenter Horizon Pod, the value will be null when PodFederation is not initialized."
        },
        "timezone_offset" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 19800,
          "description" : "Represents the clusters time zone offset from UTC in seconds."
        }
      },
      "title" : "EnvironmentInfo",
      "description" : "Information related to Environment Settings."
    },
    "EventDatabaseMonitorDetails" : {
      "type" : "object",
      "required" : [ "database_name", "port", "prefix", "server_name", "type", "user_name" ],
      "properties" : {
        "database_name" : {
          "type" : "string",
          "example" : "HorizonEventDB",
          "description" : "The name of the database."
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1433,
          "description" : "The port of the database server."
        },
        "prefix" : {
          "type" : "string",
          "example" : "view_",
          "description" : "The prefix for event tables in the database."
        },
        "server_name" : {
          "type" : "string",
          "example" : "event-db.example.com",
          "description" : "The name or ip address of the database server."
        },
        "type" : {
          "type" : "string",
          "example" : "SQL_SERVER",
          "description" : "The type of the database.\n* ORACLE: An Oracle database.\n* SQL_SERVER: A SQL server database.",
          "enum" : [ "ORACLE", "SQL_SERVER" ]
        },
        "user_name" : {
          "type" : "string",
          "example" : "sa",
          "description" : "The username used to connect to the database."
        }
      },
      "title" : "EventDatabaseMonitorDetails"
    },
    "EventDatabaseMonitorInfo" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "description" : "The basic details of the event database",
          "$ref" : "#/definitions/EventDatabaseMonitorDetails"
        },
        "event_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10000,
          "description" : "Number of events recorded in the database"
        },
        "status" : {
          "type" : "string",
          "example" : "CONNECTED",
          "description" : "State of the database.\n* CONNECTED: Connection Server is connected to the database.\n* CONNECTING: Connection Server is connecting to the database.\n* DISCONNECTED: Connection Server is disconnected from the database.\n* RECONNECTING: Connection Server is reconnecting to the database.\n* ERROR: Error in connecting to the database from Connection Server.\n* NOT_CONFIGURED: Database is not configured.",
          "enum" : [ "CONNECTED", "CONNECTING", "DISCONNECTED", "RECONNECTING", "ERROR", "NOT_CONFIGURED" ]
        }
      },
      "title" : "EventDatabaseMonitorInfo",
      "description" : "Event Database Monitor Information"
    },
    "FarmDisplayProtocolSettings" : {
      "type" : "object",
      "required" : [ "allow_display_protocol_override", "default_display_protocol", "html_access_enabled", "session_collaboration_enabled" ],
      "properties" : {
        "allow_display_protocol_override" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the display protocol settings could be overridden.If set to false, then default_display_protocol is used.Default value is true."
        },
        "default_display_protocol" : {
          "type" : "string",
          "example" : "PCOIP",
          "description" : "The default server display protocol. Default value is PCOIP.\n* RDP: Microsoft Remote Desktop Protocol.\n* PCOIP: PCoIP protocol.\n* BLAST: BLAST protocol.",
          "enum" : [ "RDP", "PCOIP", "BLAST" ]
        },
        "grid_vgpus_enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If this is true, the host or cluster associated with the farm must support NVIDIA GRID andvGPU types required by the RDSH desktop virtualMachines, VmTemplate, or BaseImageSnapshot.If this is false, RDSH instant clone farm must not support NVIDIA GRID vGPUs.Default value is false."
        },
        "html_access_enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This property is no longer in use for Horizon Components. It is always set to true. HTML Access, enabled by VMware Blast technology, allows users to connect to Horizon machines from Web browsers. Horizon Client software does not have to be installed on the client devices. To enable HTML Access, you must install the HTML Machine Access feature pack."
        },
        "session_collaboration_enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enable session collaboration feature. Session collaborationallows a user to share their remote session with other users.BLAST must be configured as a supported protocol in supported_display_protocols.Default value is false."
        },
        "vgpu_grid_profile" : {
          "type" : "string",
          "example" : "instant-profile",
          "description" : "NVIDIA GRID vGPUs might have multiple profiles and any one of the available profiles can beapplied to newly created instant clone RDSH server. The profile specified in this field will beused in the newly created instant clone RDSH server. Will be set if enable_grid_vgpus set to true."
        }
      },
      "title" : "FarmDisplayProtocolSettings",
      "description" : "Display protocol settings for the Farm."
    },
    "FarmInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "settings", "type" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Farm description",
          "description" : "Farm description. The maximum length is 1024 characters."
        },
        "display_name" : {
          "type" : "string",
          "example" : "Farm-display-1",
          "description" : "Display name of the Farm. The maximum length is 256 characters."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the Farm is enabled for brokering. Default value is true."
        },
        "id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "Unique ID representing Farm."
        },
        "name" : {
          "type" : "string",
          "example" : "ManualFarm1",
          "description" : "Name of the Farm. The maximum length is 64 characters."
        },
        "settings" : {
          "description" : "Settings related to the Farm.",
          "$ref" : "#/definitions/FarmSettings"
        },
        "source" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Type of the Farm.\n* INSTANT_CLONE: The Farm uses instant clone technology for provisioning the RDS Servers.Applicable for AUTOMATED type Farms only.\n* LINKED_CLONE: The Farm uses linked clone technology for provisioning the RDS Servers.Applicable for AUTOMATED type Farms only.",
          "enum" : [ "INSTANT_CLONE", "LINKED_CLONE" ]
        },
        "type" : {
          "type" : "string",
          "example" : "AUTOMATED",
          "description" : "Type of the Farm.\n* AUTOMATED: Automated Farm.\n* MANUAL: Manual Farm.",
          "enum" : [ "AUTOMATED", "MANUAL" ]
        }
      },
      "title" : "FarmInfo",
      "description" : "Information related to Farm."
    },
    "FarmLoadBalancerSettings" : {
      "type" : "object",
      "properties" : {
        "custom_script_in_use" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to use custom scripts for Load Balancing.Default is false."
        },
        "lb_metric_settings" : {
          "description" : "Metrics used for load balancing. Will be set only when custom_script_in_use is set to false.",
          "$ref" : "#/definitions/LoadBalancerMetricSettings"
        }
      },
      "title" : "FarmLoadBalancerSettings",
      "description" : "Settings for load balancing the session requests across the RDS servers in the farm."
    },
    "FarmMonitorDetails" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "source" : {
          "type" : "string",
          "example" : "LINKED_CLONE",
          "description" : "Source of farm machines.\nThis property is required if type is set to \"AUTOMATED\".\n* LINKED_CLONE: Linked clone share the same base image and use less storage space than full RDS Servers.\n* INSTANT_CLONE: Instant clone engine uses vmfork technology to create the instant clones. These clones take much less time for provisioning.",
          "enum" : [ "LINKED_CLONE", "INSTANT_CLONE" ]
        },
        "type" : {
          "type" : "string",
          "example" : "AUTOMATED",
          "description" : "Farm type.\n* AUTOMATED: Automated Farm.\n* MANUAL: Manual farm.",
          "enum" : [ "AUTOMATED", "MANUAL" ]
        }
      },
      "title" : "FarmMonitorDetails",
      "description" : "Details of the Farm."
    },
    "FarmMonitorInfo" : {
      "type" : "object",
      "required" : [ "details", "id", "name", "status" ],
      "properties" : {
        "application_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12,
          "description" : "Number of Applications published from the farm."
        },
        "details" : {
          "description" : "Details of Farm.",
          "$ref" : "#/definitions/FarmMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the Farm."
        },
        "name" : {
          "type" : "string",
          "example" : "farm1",
          "description" : "Farm name."
        },
        "rds_server_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123,
          "description" : "Number of RDS Servers in the farm."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of Farm.\n* OK: Farm is enabled and no servers are in WARNING or ERROR state. One or more server(s) may be DISABLED (including the case where all of them are DISABLED).\n* WARNING: Farm is enabled. One or more of the following is true:\n1) One or more server(s) is either in WARNING or ERROR (not exceeding the predefined threshold) state.\n2) The RDS Servers in this Farm present a mix of both known and unknown load preferences.\n* ERROR: Farm is enabled. One or more server(s) (exceeding the predefined threshold) is in ERROR state, or, for Automated Farms, there could be a provisioning error.\n* DISABLED: Farm is disabled.",
          "enum" : [ "OK", "WARNING", "ERROR", "DISABLED" ]
        }
      },
      "title" : "FarmMonitorInfo",
      "description" : "Monitoring information related to Farm."
    },
    "FarmSessionSettings" : {
      "type" : "object",
      "required" : [ "disconnected_session_timeout_policy", "empty_session_timeout_policy", "logoff_after_timeout" ],
      "properties" : {
        "disconnected_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Disconnected sessions timeout (in minutes).Will be set when disconnected_session_timeout_policy is set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disconnected_session_timeout_policy" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Log-off policy after disconnected session. Default value is NEVER.\n* IMMEDIATELY: Immmediately Logoff after user disconnect.\n* AFTER: Logoff after the specified number of minutes after user disconnect.\n* NEVER: Do not logoff after user disconnect.",
          "enum" : [ "IMMEDIATELY", "AFTER", "NEVER" ]
        },
        "empty_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "Application empty session timeout in minutes. An empty session that has no remote-ablewindow is disconnected after the timeout. Default value is 1.Will be set when the empty_session_timeout_policy set to AFTER.",
          "minimum" : 1,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "empty_session_timeout_policy" : {
          "type" : "string",
          "example" : "AFTER",
          "description" : "Application empty session timeout policy. Default value is AFTER.\n* IMMEDIATE: Empty session will be disconnected immediately.\n* NEVER: Empty session will never disconnected.\n* AFTER: Empty session will be disconnected after specified number of minutes.",
          "enum" : [ "IMMEDIATE", "NEVER", "AFTER" ]
        },
        "logoff_after_timeout" : {
          "type" : "boolean",
          "example" : false,
          "description" : "After timeout, empty application sessions are logged off when set to true. Otherwise sessions are disconnected.Default value is false."
        },
        "pre_launch_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Application pre-launch session timeout in minutes. A pre-launch session is disconnected after the timeout.Will be set only when pre_launch_timeout_policy is set to AFTER.",
          "minimum" : 10,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "pre_launch_session_timeout_policy" : {
          "type" : "string",
          "example" : "AFTER",
          "description" : "Pre-launch session timeout policy for the application sessions on this Farm.\n* AFTER: Pre-launched session is disconnected after specified number of minutes.\n* NEVER: Pre-launched session is never disconnected.",
          "enum" : [ "AFTER", "NEVER" ]
        }
      },
      "title" : "FarmSessionSettings",
      "description" : "Session related settings for the Farm."
    },
    "FarmSettings" : {
      "type" : "object",
      "required" : [ "delete_in_progess" ],
      "properties" : {
        "delete_in_progess" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the Farm is in the process of being deleted. Default value is false."
        },
        "desktop_id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "Desktop pool Id representing the RDS Desktop pool to which this Farm belongs."
        },
        "display_protocol_settings" : {
          "description" : "Display protocol settings for session related to the Farm.",
          "$ref" : "#/definitions/FarmDisplayProtocolSettings"
        },
        "load_balancer_settings" : {
          "description" : "Settings for load balancing the session requests across the RDS servers in the farm.",
          "$ref" : "#/definitions/FarmLoadBalancerSettings"
        },
        "server_error_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 5,
          "description" : "The minimum number of machines that must be fully operational in order toavoid showing the farm in an error state. Default value is 0.",
          "minimum" : 0,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "session_settings" : {
          "description" : "Session related settings for the Farm.",
          "$ref" : "#/definitions/FarmSessionSettings"
        }
      },
      "title" : "FarmSettings",
      "description" : "Settings related to the Farm."
    },
    "FeatureSettings" : {
      "type" : "object",
      "properties" : {
        "cloud_managed" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether this cluster/pod is managed by Horizon Cloud Services. This will be false only when there are no cloud managed machines."
        },
        "enable_helpdesk" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether Helpdesk feature is enabled or not. By default Helpdesk is enabled."
        },
        "enable_image_management" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether Image Management feature is enabled or not. By default Image Management is disabled."
        }
      },
      "title" : "FeatureSettings",
      "description" : "Information related to Feature Settings."
    },
    "FeatureSettingsUpdateSpec" : {
      "type" : "object",
      "properties" : {
        "cloud_managed" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether this cluster/pod is managed by Horizon Cloud Services. This will be false only when there are no cloud managed machines."
        }
      },
      "title" : "FeatureSettingsUpdateSpec",
      "description" : "Information related to Feature Settings."
    },
    "GatewayMonitorDetails" : {
      "type" : "object",
      "required" : [ "address", "internal", "type", "version" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "example" : "uag1.example.com",
          "description" : "Gateway host name or IP address."
        },
        "internal" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the Gateway is internal."
        },
        "type" : {
          "type" : "string",
          "example" : "UAG",
          "description" : "Type of the Gateway.\n* UAG: Unified Access Gateway type.\n* F5: F5 Gateway type.\n* UNKNOWN: Unknown type.",
          "enum" : [ "UAG", "F5", "UNKNOWN" ]
        },
        "version" : {
          "type" : "string",
          "example" : "3.5.0",
          "description" : "Version of the Gateway."
        }
      },
      "title" : "GatewayMonitorDetails",
      "description" : "Details of the Gateway."
    },
    "GatewayMonitorInfo" : {
      "type" : "object",
      "required" : [ "details", "id", "name", "status" ],
      "properties" : {
        "active_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of active connections for the gateway. Includes PCoIP and BLAST connection counts."
        },
        "blast_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Number of BLAST connections for the gateway."
        },
        "details" : {
          "description" : "Details of the gateway.",
          "$ref" : "#/definitions/GatewayMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID of the Gateway."
        },
        "name" : {
          "type" : "string",
          "example" : "uag1",
          "description" : "Gateway name."
        },
        "pcoip_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 90,
          "description" : "Number of PCoIP connections for the gateway."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Gateway.\n* NOT_CONTACTED: There has been no contact from the gateway.\n* PROBLEM: The gateway has reported a problem.\n* STALE: Gateway is stale. Gateway will be marked as stale when Connection Server does not receive any request from the Gateway in last two successive intervals.\n* OK: The Gateway is working as expected.",
          "enum" : [ "NOT_CONTACTED", "PROBLEM", "STALE", "OK" ]
        }
      },
      "title" : "GatewayMonitorInfo",
      "description" : "Monitoring information related to Gateways registered in the environment."
    },
    "GatewayMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "details", "id", "name", "status" ],
      "properties" : {
        "active_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Number of active connections for the gateway. Includes PCoIP and BLAST connection counts."
        },
        "blast_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Number of BLAST connections for the gateway."
        },
        "details" : {
          "description" : "Details of the gateway.",
          "$ref" : "#/definitions/GatewayMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID of the Gateway."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "uag1",
          "description" : "Gateway name."
        },
        "pcoip_connection_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 90,
          "description" : "Number of PCoIP connections for the gateway."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Gateway.\n* NOT_CONTACTED: There has been no contact from the gateway.\n* PROBLEM: The gateway has reported a problem.\n* STALE: Gateway is stale. Gateway will be marked as stale when Connection Server does not receive any request from the Gateway in last two successive intervals.\n* OK: The Gateway is working as expected.",
          "enum" : [ "NOT_CONTACTED", "PROBLEM", "STALE", "OK" ]
        }
      },
      "title" : "GatewayMonitorInfoV2",
      "description" : "Monitoring information related to Gateways registered in the environment."
    },
    "GeneralSettings" : {
      "type" : "object",
      "required" : [ "application_sso_timeout_policy", "client_idle_session_timeout_policy", "client_max_session_timeout_policy", "client_session_timeout_minutes", "machine_sso_timeout_policy", "store_cal_on_client", "store_cal_on_connection_server" ],
      "properties" : {
        "application_sso_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 30,
          "description" : "The time allowed to elapse after a user has authenticated before the application SSO credentials are locked unless the user's Horizon client supports idle sessions and the user remains active."
        },
        "application_sso_timeout_policy" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Specifies the policy for the maximum time after which single sign on will be disabled for application sessions.\n* DISABLED_AFTER: Single sign on will be disabled after the specified number of minutes has elapsed since the user connected to Horizon Connection Server.\n* DISABLED: Single sign on is disabled.\n* ENABLED: Single sign on is enabled.",
          "enum" : [ "DISABLED_AFTER", "DISABLED", "ENABLED" ]
        },
        "block_restricted_clients" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether restricted Horizon clients should be blocked by the Connection Server."
        },
        "client_idle_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines how long a user can be idle before the Connection Server takes measure to protect the session."
        },
        "client_idle_session_timeout_policy" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Specifies the policy for the maximum time that a that a user can be idle before the Connection Server takes measure to protect the session.\n* TIMEOUT_AFTER: The timeout is set for a configurable time.\n* NEVER: The timeout has been disabled.",
          "enum" : [ "TIMEOUT_AFTER", "NEVER" ]
        },
        "client_max_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines how long a user can keep a session open after logging in to the Connection Server. When a session times out, the session is terminated and the Horizon client is disconnected from the resource. This property has a default value of 600 and a minimum value of 5. This property is required if clientMaxSessionTimeoutPolicy is set to TIMEOUT_AFTER."
        },
        "client_max_session_timeout_policy" : {
          "type" : "string",
          "example" : "TIMEOUT_AFTER",
          "description" : "Client max session lifetime policy. This property has a default value of TIMEOUT_AFTER. A value of TIMEOUT_AFTER indicates that the Horizon client session times out after a configurable session length. A value of NEVER indicates that the Horizon client session will not time out and will only end due to inactivity.\n* TIMEOUT_AFTER: The timeout is set for a configurable time.\n* NEVER: The timeout has been disabled.",
          "enum" : [ "TIMEOUT_AFTER", "NEVER" ]
        },
        "client_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines the maximum length of time that a session will be kept active if there is no traffic between the Horizon client and the Connection Server."
        },
        "console_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 30,
          "description" : "Determines how long an idle admin console session continues before the session times out."
        },
        "display_pre_login_message" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to show a disclaimer or other message when the Horizon Client user logs in. This change will take effect on next login for each user."
        },
        "display_warning_before_forced_logoff" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether to display a warning message when users are forced to log off because a scheduled or immediate update such as a machine-refresh operation is about to start."
        },
        "enable_automatic_status_updates" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enable updation of the global status of the application periodically. The Dashboard Information is also updated at regular intervals when Dashboard page is active."
        },
        "enable_credential_cleanup_for_htmlaccess" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to clean up session credentials when one tab connecting to remote machine/application is closed."
        },
        "enable_multi_factor_re_authentication" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enables 2 factor re-authentication after idle session timeout."
        },
        "enable_sending_domain_list" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the domain list will be sent to the Horizon client. Since domain list will be sent before user is authenticated with server, it could disclose domain information to external users."
        },
        "enable_server_in_single_user_mode" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Permits RDSServer operating systems to be used for non-RDS Machines."
        },
        "forced_logoff_message" : {
          "type" : "string",
          "example" : "The system will shut down shortly. Please save your work.",
          "description" : "The warning to be displayed before logging off the user."
        },
        "forced_logoff_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "The time to wait after the warning is displayed and before logging off the user."
        },
        "hide_domain_list_in_client" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether to hide the list of domains in the Horizon client user interface. If value set to true, the user will need to provide a UPN (e.g. user@domain) or a logon name in the format domain\\\\user when logging in."
        },
        "hide_server_information_in_client" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to hide the server URL in the Horizon client user interface."
        },
        "machine_sso_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Single sign on will be disabled after the specified time has elapsed since the user connected to Connection Server."
        },
        "machine_sso_timeout_policy" : {
          "type" : "string",
          "example" : "DISABLED_AFTER",
          "description" : "Specifies the policy for the maximum time after which single sign on will be disabled after a user connects to the Connection Server.\n* DISABLED_AFTER: Single sign on will be disabled after the specified number of minutes has elapsed since the user connected to Horizon Connection Server.\n* DISABLED: Single sign on is disabled.\n* ENABLED: Single sign on is enabled.",
          "enum" : [ "DISABLED_AFTER", "DISABLED", "ENABLED" ]
        },
        "pre_login_message" : {
          "type" : "string",
          "example" : "Disclaimer : This server is being monitored for suspicious activity.",
          "description" : "Displays a disclaimer or another message to Horizon Client users when they log in. No message will be displayed if this is not set."
        },
        "restricted_client_data" : {
          "type" : "array",
          "example" : [ {
            "type" : "WINDOWS",
            "version" : "7.5"
          }, {
            "type" : "LINUX",
            "version" : "6.5"
          } ],
          "description" : "List of restricted Horizon Clients.",
          "items" : {
            "$ref" : "#/definitions/RestrictedClientData"
          }
        },
        "restricted_client_message" : {
          "type" : "string",
          "example" : "The system does not support this version of the Horizon client.",
          "description" : "The message to be displayed to Horizon clients which are blocked by the Connection Server."
        },
        "store_cal_on_client" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Determines whether or not to store the RDS Per Device Client Access License on Horizon client devices. This value can be true only if Store Client Access License on Connection Server is true."
        },
        "store_cal_on_connection_server" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Determines whether or not to store the RDS Per Device Client Access License on Connection Server."
        }
      },
      "title" : "GeneralSettings",
      "description" : "Information related to General Settings."
    },
    "GeneralSettingsUpdateSpec" : {
      "type" : "object",
      "required" : [ "application_sso_timeout_policy", "client_idle_session_timeout_policy", "client_max_session_timeout_policy", "client_session_timeout_minutes", "machine_sso_timeout_policy", "store_cal_on_client", "store_cal_on_connection_server" ],
      "properties" : {
        "application_sso_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 30,
          "description" : "The time allowed to elapse after a user has authenticated before the application SSO credentials are locked unless the user's Horizon client supports idle sessions and the user remains active."
        },
        "application_sso_timeout_policy" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Specifies the policy for the maximum time after which single sign on will be disabled for application sessions.\n* DISABLED_AFTER: Single sign on will be disabled after the specified number of minutes has elapsed since the user connected to Horizon Connection Server.\n* DISABLED: Single sign on is disabled.\n* ENABLED: Single sign on is enabled.",
          "enum" : [ "DISABLED_AFTER", "DISABLED", "ENABLED" ]
        },
        "block_restricted_clients" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether restricted Horizon clients should be blocked by the Connection Server."
        },
        "client_idle_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines how long a user can be idle before the broker takes measure to protect the session."
        },
        "client_idle_session_timeout_policy" : {
          "type" : "string",
          "example" : "NEVER",
          "description" : "Specifies the policy for the maximum time that a that a user can be idle before the Connection Server takes measure to protect the session.\n* TIMEOUT_AFTER: The timeout is set for a configurable time.\n* NEVER: The timeout has been disabled.",
          "enum" : [ "TIMEOUT_AFTER", "NEVER" ]
        },
        "client_max_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines how long a user can keep a session open after logging in to the Connection Server. When a session times out, the session is terminated and the Horizon client is disconnected from the resource. This property has a default value of 600 and a minimum value of 5. This property is required if Client Max Session Timeout Policy is set to TIMEOUT_AFTER."
        },
        "client_max_session_timeout_policy" : {
          "type" : "string",
          "example" : "TIMEOUT_AFTER",
          "description" : "Client max session lifetime policy. This property has a default value of TIMEOUT_AFTER. A value of TIMEOUT_AFTER indicates that the Horizon client session times out after a configurable session length. A value of NEVER indicates that the Horizon client session will not time out and will only end due to inactivity.\n* TIMEOUT_AFTER: The timeout is set for a configurable time.\n* NEVER: The timeout has been disabled.",
          "enum" : [ "TIMEOUT_AFTER", "NEVER" ]
        },
        "client_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Determines the maximum length of time that a session will be kept active if there is no traffic between the Horizon client and the Connection Server."
        },
        "console_session_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 30,
          "description" : "Determines how long an idle admin console session continues before the session times out."
        },
        "display_pre_login_message" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to show a disclaimer or other message when the Horizon Client user logs in. This change will take effect on next login for each user."
        },
        "display_warning_before_forced_logoff" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether to display a warning message when users are forced to log off because a scheduled or immediate update such as a machine-refresh operation is about to start."
        },
        "enable_automatic_status_updates" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enable updation of the global status of the application periodically. The Dashboard Information is also updated at regular intervals when Dashboard page is active."
        },
        "enable_credential_cleanup_for_htmlaccess" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to clean up session credentials when one tab connecting to remote machine/application is closed."
        },
        "enable_multi_factor_re_authentication" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enables 2 factor re-authentication after idle session timeout."
        },
        "enable_sending_domain_list" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the domain list will be sent to the Horizon client. Since domain list will be sent before user is authenticated with server, it could disclose domain information to external users."
        },
        "enable_server_in_single_user_mode" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Permits RDSServer operating systems to be used for non-RDS Machines."
        },
        "forced_logoff_message" : {
          "type" : "string",
          "example" : "The system will shut down shortly. Please save your work.",
          "description" : "The warning to be displayed before logging off the user."
        },
        "forced_logoff_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "The time to wait after the warning is displayed and before logging off the user."
        },
        "hide_domain_list_in_client" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether to hide the list of domains in the Horizon client user interface. If value set to true, the user will need to provide a UPN (e.g. user@domain) or a logon name in the format domain\\\\user when logging in."
        },
        "hide_server_information_in_client" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to hide the server URL in the Horizon client user interface."
        },
        "machine_sso_timeout_minutes" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 300,
          "description" : "Single sign on will be disabled after the specified time has elapsed since the user connected to Connection Server."
        },
        "machine_sso_timeout_policy" : {
          "type" : "string",
          "example" : "DISABLED_AFTER",
          "description" : "Specifies the policy for the maximum time after which single sign on will be disabled after a user connects to the Connection Server.\n* DISABLED_AFTER: Single sign on will be disabled after the specified number of minutes has elapsed since the user connected to Horizon Connection Server.\n* DISABLED: Single sign on is disabled.\n* ENABLED: Single sign on is enabled.",
          "enum" : [ "DISABLED_AFTER", "DISABLED", "ENABLED" ]
        },
        "pre_login_message" : {
          "type" : "string",
          "example" : "Disclaimer : This server is being monitored for suspicious activity.",
          "description" : "Displays a disclaimer or another message to Horizon Client users when they log in. No message will be displayed if this is not set."
        },
        "restricted_client_data" : {
          "type" : "array",
          "example" : [ {
            "type" : "WINDOWS",
            "version" : "7.5"
          }, {
            "type" : "LINUX",
            "version" : "6.5"
          } ],
          "description" : "List of restricted Horizon Clients.",
          "items" : {
            "$ref" : "#/definitions/RestrictedClientData"
          }
        },
        "restricted_client_message" : {
          "type" : "string",
          "example" : "The system does not support this version of the Horizon client.",
          "description" : "The message to be displayed to Horizon clients which are blocked by the Connection Server."
        },
        "store_cal_on_client" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Determines whether or not to store the RDS Per Device Client Access License on Horizon client devices. This value can be true only if Store Client Access License on Connection Server is true."
        },
        "store_cal_on_connection_server" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Determines whether or not to store the RDS Per Device Client Access License on Broker."
        }
      },
      "title" : "GeneralSettingsUpdateSpec",
      "description" : "Information related to General Settings."
    },
    "HostOrClusterContainer" : {
      "type" : "object",
      "required" : [ "name", "path", "type" ],
      "properties" : {
        "children" : {
          "type" : "array",
          "description" : "Contents of the container. These may be hosts or clusters or further nested containers.",
          "items" : {
            "$ref" : "#/definitions/HostOrClusterInfo"
          }
        },
        "name" : {
          "type" : "string",
          "example" : "ServicesFolder",
          "description" : "Host or cluster container node display name."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/host/ServicesFolder",
          "description" : "Host or cluster container node path."
        },
        "type" : {
          "type" : "string",
          "example" : "FOLDER",
          "description" : "Type of container.\n* FOLDER: A folder container.\n* OTHER: Other container type.",
          "enum" : [ "FOLDER", "OTHER" ]
        }
      },
      "title" : "HostOrClusterContainer",
      "description" : "Details of the host or cluster container node."
    },
    "HostOrClusterDetails" : {
      "type" : "object",
      "required" : [ "cluster", "datacenter_id", "incompatible_reasons", "name", "path", "vcenter_id" ],
      "properties" : {
        "cluster" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether or not this is a cluster or a host."
        },
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter id for this host or cluster."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this Host Or Cluster from being used in desktop pool creation.",
          "items" : {
            "type" : "string",
            "enum" : [ "UNSUPPORTED_ESX_VERSION", "ALL_HOSTS_DISCONNECTED", "NO_HOSTS_IN_CLUSTER", "INCOMPATIBLE_VSAN", "INCOMPATIBLE_STORAGE_ACCELERATOR", "INCOMPATIBLE_NATIVE_SNAPSHOTS", "INCOMPATIBLE_INSTANT_CLONE_DESKTOP_POOLS", "INCOMPATIBLE_STANDALONE_HOST_FOR_INSTANT_CLONE", "INCOMPATIBLE_VGPU_TYPE" ]
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Cluster",
          "description" : "Host or cluster display name."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/host/ServicesFolder/Cluster",
          "description" : "Host or cluster path."
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Virtual Center id for this host or cluster."
        },
        "vgpu_types" : {
          "type" : "array",
          "description" : "Types of NVIDIA GRID vGPUs supported by this host or at least one host on this cluster. If unset, this host or cluster does not support NVIDIA GRID vGPUs and cannot be used for desktop creation with NVIDIA GRID vGPU support enabled.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "HostOrClusterDetails",
      "description" : "Details of the host or cluster."
    },
    "HostOrClusterInfo" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "container" : {
          "description" : "Set only if this node represents a container.",
          "$ref" : "#/definitions/HostOrClusterContainer"
        },
        "details" : {
          "description" : "Set only if this node represents a host or cluster.",
          "$ref" : "#/definitions/HostOrClusterDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "domain-s425",
          "description" : "Unique ID representing a host or cluster."
        }
      },
      "title" : "HostOrClusterInfo",
      "description" : "Information related to host or cluster."
    },
    "HostOverrideData" : {
      "type" : "object",
      "properties" : {
        "cache_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2048,
          "description" : "Size of the cache in megabytes. This property has a minimum value of 100. This property has a maximum value of 2048."
        },
        "path" : {
          "type" : "string",
          "example" : "/path/host",
          "description" : "The path of the host that supports View Storage Accelerator."
        }
      },
      "title" : "HostOverrideData",
      "description" : "Details of the Hypervisor hosts involved in Content Based Read Caching (CBRC)"
    },
    "ImageManagementAssetCreateSpec" : {
      "type" : "object",
      "required" : [ "clone_type", "im_stream_id", "im_version_id", "image_type", "status", "vcenter_id" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management asset.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "base_snapshot_id" : {
          "type" : "string",
          "example" : "snapshot-1",
          "description" : "Virtual machine snapshot. Must be set if vm_template_id is unset."
        },
        "base_vm_id" : {
          "type" : "string",
          "example" : "vm-2",
          "description" : "Virtual machine ID. Must be set if vm_template_id is unset."
        },
        "clone_type" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Image management asset clone type.\n* FULL_CLONE: Image management asset to be used in full clone automated desktop pool.\n* INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.",
          "enum" : [ "FULL_CLONE", "INSTANT_CLONE" ]
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream to which this asset belongs to."
        },
        "im_version_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Image management version to which this asset belongs to."
        },
        "image_type" : {
          "type" : "string",
          "example" : "RDSH_APPS",
          "description" : "Image management asset image type.\n* RDSH_APPS: Image management asset to be used for farm creation which is be used in application.\n* RDSH_DESKTOP: Image management asset is for farm creation to be created.\n* VDI_DESKTOP: Image management asset is available for desktops/farms to be created.",
          "enum" : [ "RDSH_APPS", "RDSH_DESKTOP", "VDI_DESKTOP" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management asset status.\n* AVAILABLE: Image management asset is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management asset is deploying VM on the virtual center.\n* DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center.\n* DELETED: Image management asset has been deleted.\n* DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same.\n* FAILED: Image management asset creation has failed.\n* REPLICATING: Copying the specialized images across all virtual centers.\n* RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created.\n* SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "REPLICATING", "RETRY_PENDING", "SPECIALIZING_VM" ]
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "f148f3e8-db0e-4abb-9c33-7e5205ccd360",
          "description" : "Virtual Center where this asset is created."
        },
        "vm_template_id" : {
          "type" : "string",
          "example" : "vm-1",
          "description" : "Virtual machine template ID."
        }
      },
      "title" : "ImageManagementAssetCreateSpec",
      "description" : "Information related to image management asset."
    },
    "ImageManagementAssetInfo" : {
      "type" : "object",
      "required" : [ "base_snapshot_id", "base_vm_id", "clone_type", "datacenter_id", "id", "im_stream_id", "im_version_id", "image_type", "status", "vcenter_id", "vm_template_id" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management asset.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "base_snapshot_id" : {
          "type" : "string",
          "example" : "snapshot-1",
          "description" : "Virtual machine snapshot. Must be set if vm_template_id is unset."
        },
        "base_vm_id" : {
          "type" : "string",
          "example" : "vm-2",
          "description" : "Virtual machine ID. Must be set if vm_template_id is unset."
        },
        "clone_type" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Image management asset clone type.\n* FULL_CLONE: Image management asset to be used in full clone automated desktop pool.\n* INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.",
          "enum" : [ "FULL_CLONE", "INSTANT_CLONE" ]
        },
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter where this asset is created."
        },
        "id" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b47d",
          "description" : "Unique ID representing image management asset."
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream to which this asset belongs to."
        },
        "im_version_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Image management version to which this asset belongs to."
        },
        "image_type" : {
          "type" : "string",
          "example" : "RDSH_APPs",
          "description" : "Image management asset image type.\n* RDSH_APPS: Image management asset to be used for farm creation which is be used in application.\n* RDSH_DESKTOP: Image management asset is for farm creation to be created.\n* VDI_DESKTOP: Image management asset is available for desktops/farms to be created.",
          "enum" : [ "RDSH_APPS", "RDSH_DESKTOP", "VDI_DESKTOP" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management asset status.\n* AVAILABLE: Image management asset is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management asset is deploying VM on the virtual center.\n* DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center.\n* DELETED: Image management asset has been deleted.\n* DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same.\n* FAILED: Image management asset creation has failed.\n* REPLICATING: Copying the specialized images across all virtual centers.\n* RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created.\n* SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "REPLICATING", "RETRY_PENDING", "SPECIALIZING_VM" ]
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "f148f3e8-db0e-4abb-9c33-7e5205ccd360",
          "description" : "Virtual Center where this asset is created."
        },
        "vm_template_id" : {
          "type" : "string",
          "example" : "vm-1",
          "description" : "Virtual machine template ID."
        }
      },
      "title" : "ImageManagementAssetInfo",
      "description" : "Information related to image management asset."
    },
    "ImageManagementAssetUpdateSpec" : {
      "type" : "object",
      "required" : [ "clone_type", "image_type", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management asset.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "clone_type" : {
          "type" : "string",
          "example" : "INSTANT_CLONE",
          "description" : "Image management asset clone type.\n* FULL_CLONE: Image management asset to be used in full clone automated desktop pool.\n* INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.",
          "enum" : [ "FULL_CLONE", "INSTANT_CLONE" ]
        },
        "image_type" : {
          "type" : "string",
          "example" : "RDSH_APPS",
          "description" : "Image management asset image type.\n* RDSH_APPS: Image management asset to be used for farm creation which is be used in application.\n* RDSH_DESKTOP: Image management asset is for farm creation to be created.\n* VDI_DESKTOP: Image management asset is available for desktops/farms to be created.",
          "enum" : [ "RDSH_APPS", "RDSH_DESKTOP", "VDI_DESKTOP" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management asset status.\n* AVAILABLE: Image management asset is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management asset is deploying VM on the virtual center.\n* DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center.\n* DELETED: Image management asset has been deleted.\n* DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same.\n* FAILED: Image management asset creation has failed.\n* REPLICATING: Copying the specialized images across all virtual centers.\n* RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created.\n* SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "REPLICATING", "RETRY_PENDING", "SPECIALIZING_VM" ]
        }
      },
      "title" : "ImageManagementAssetUpdateSpec",
      "description" : "Information related to image management asset."
    },
    "ImageManagementStreamCreateSpec" : {
      "type" : "object",
      "required" : [ "name", "operating_system", "source", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management stream.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "example" : "Windows 10 Stream",
          "description" : "Image management stream description."
        },
        "name" : {
          "type" : "string",
          "example" : "Win10",
          "description" : "Image management stream name."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "publisher" : {
          "type" : "string",
          "example" : "VMware",
          "description" : "Image management stream publisher"
        },
        "source" : {
          "type" : "string",
          "example" : "MARKET_PLACE",
          "description" : "Image management stream source.\n* MARKET_PLACE: Image management stream is from market place.\n* UPLOADED: Image management stream is uploaded.\n* COPIED_FROM_STREAM: Image management stream is copied from another stream.\n* COPIED_FROM_VERSION: Image management stream is copied from a version.",
          "enum" : [ "MARKET_PLACE", "UPLOADED", "COPIED_FROM_STREAM", "COPIED_FROM_VERSION" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management stream status.\n* AVAILABLE: Image management stream is available for desktop pools/farms to be created.\n* DELETED: Image management stream is deleted.\n* DISABLED: Image management stream is disabled and no further desktop pools/farms can be created using the same.\n* FAILED: Image management stream creation has failed.\n* IN_PROGRESS: Image management stream creation is in progress.\n* PARTIALLY_AVAILABLE: Image management version for this stream could not be created in one or more environments.\n* PENDING: Image management stream is in pending state.",
          "enum" : [ "AVAILABLE", "DELETED", "DISABLED", "FAILED", "IN_PROGRESS", "PARTIALLY_AVAILABLE", "PENDING" ]
        }
      },
      "title" : "ImageManagementStreamCreateSpec",
      "description" : "Information related to image management stream."
    },
    "ImageManagementStreamInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "operating_system", "source", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "example" : true,
          "description" : "Additional details about image management stream.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "example" : "Windows 10 Stream",
          "description" : "Image management stream description."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing image management stream."
        },
        "name" : {
          "type" : "string",
          "example" : "Win10",
          "description" : "Image management stream name."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "publisher" : {
          "type" : "string",
          "example" : "VMware",
          "description" : "Image management stream publisher"
        },
        "source" : {
          "type" : "string",
          "example" : "MARKET_PLACE",
          "description" : "Image management stream source.\n* MARKET_PLACE: Image management stream is from market place.\n* UPLOADED: Image management stream is uploaded.\n* COPIED_FROM_STREAM: Image management stream is copied from another stream.\n* COPIED_FROM_VERSION: Image management stream is copied from a version.",
          "enum" : [ "MARKET_PLACE", "UPLOADED", "COPIED_FROM_STREAM", "COPIED_FROM_VERSION" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management stream status.\n* AVAILABLE: Image management stream is available for desktop pools/farms to be created.\n* DELETED: Image management stream is deleted.\n* DISABLED: Image management stream is disabled and no further desktop pools/farms can be created using the same.\n* FAILED: Image management stream creation has failed.\n* IN_PROGRESS: Image management stream creation is in progress.\n* PARTIALLY_AVAILABLE: Image management version for this stream could not be created in one or more environments.\n* PENDING: Image management stream is in pending state.",
          "enum" : [ "AVAILABLE", "DELETED", "DISABLED", "FAILED", "IN_PROGRESS", "PARTIALLY_AVAILABLE", "PENDING" ]
        },
        "usable" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether the image management stream can be used in desktop pool or farm. This will be set to true when: <ul><li>Image management stream is in AVAILABLE or PARTIALLY_AVAILABLE state. </li><li>There is at least one image management version in AVAILABLE or PARTIALLY_AVAILABLE state for this stream. </li><li>There is at least one image management tag associated with the image management version.</li> </ul>For a specific virtual center, image management tag information will be retrieved."
        }
      },
      "title" : "ImageManagementStreamInfo",
      "description" : "Information related to image management stream."
    },
    "ImageManagementStreamUpdateSpec" : {
      "type" : "object",
      "required" : [ "name", "operating_system", "source", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management stream.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "example" : "Windows 10 Stream",
          "description" : "Image management stream description."
        },
        "name" : {
          "type" : "string",
          "example" : "Win10",
          "description" : "Image management stream name."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "publisher" : {
          "type" : "string",
          "example" : "VMware",
          "description" : "Image management stream publisher"
        },
        "source" : {
          "type" : "string",
          "example" : "MARKET_PLACE",
          "description" : "Image management stream source.\n* MARKET_PLACE: Image management stream is from market place.\n* UPLOADED: Image management stream is uploaded.\n* COPIED_FROM_STREAM: Image management stream is copied from another stream.\n* COPIED_FROM_VERSION: Image management stream is copied from a version.",
          "enum" : [ "MARKET_PLACE", "UPLOADED", "COPIED_FROM_STREAM", "COPIED_FROM_VERSION" ]
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management stream status.\n* AVAILABLE: Image management stream is available for desktop pools/farms to be created.\n* DELETED: Image management stream is deleted.\n* DISABLED: Image management stream is disabled and no further desktop pools/farms can be created using the same.\n* FAILED: Image management stream creation has failed.\n* IN_PROGRESS: Image management stream creation is in progress.\n* PARTIALLY_AVAILABLE: Image management version for this stream could not be created in one or more environments.\n* PENDING: Image management stream is in pending state.",
          "enum" : [ "AVAILABLE", "DELETED", "DISABLED", "FAILED", "IN_PROGRESS", "PARTIALLY_AVAILABLE", "PENDING" ]
        }
      },
      "title" : "ImageManagementStreamUpdateSpec",
      "description" : "Information related to image management stream."
    },
    "ImageManagementTagCreateSpec" : {
      "type" : "object",
      "required" : [ "im_stream_id", "im_version_id", "name" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management tag.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream ID to which this tag belongs."
        },
        "im_version_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Image management version ID to which this tag belongs."
        },
        "name" : {
          "type" : "string",
          "example" : "PROD",
          "description" : "Image management tag name. It is unique among all the tags of a stream."
        }
      },
      "title" : "ImageManagementTagCreateSpec",
      "description" : "Information related to image management tag."
    },
    "ImageManagementTagInfo" : {
      "type" : "object",
      "required" : [ "id", "im_stream_id", "im_version_id", "name" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management tag.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Image management tag description."
        },
        "id" : {
          "type" : "string",
          "example" : "c9896e51-48a2-4d82-ae9e-a0246981b47d",
          "description" : "Unique ID representing image management tag."
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream ID to which this tag belongs."
        },
        "im_version_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Image management version ID to which this tag belongs."
        },
        "name" : {
          "type" : "string",
          "example" : "STAGE",
          "description" : "Image management tag name."
        }
      },
      "title" : "ImageManagementTagInfo",
      "description" : "Information related to image management tag."
    },
    "ImageManagementTagUpdateSpec" : {
      "type" : "object",
      "required" : [ "im_version_id", "name" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management tag.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "im_version_id" : {
          "type" : "string",
          "example" : "7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62",
          "description" : "Image management version ID to which this tag belongs."
        },
        "name" : {
          "type" : "string",
          "example" : "PROD",
          "description" : "Image management tag name."
        }
      },
      "title" : "ImageManagementTagUpdateSpec",
      "description" : "Information related to image management tag."
    },
    "ImageManagementVersionCreateSpec" : {
      "type" : "object",
      "required" : [ "im_stream_id", "name", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management version.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Image management version description."
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream ID"
        },
        "name" : {
          "type" : "string",
          "example" : "v1",
          "description" : "Image management version name."
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management version status.\n* AVAILABLE: Image management version is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management version is deploying VM on the selected pod.\n* DEPLOYMENT_DONE: Image management version status when VM deployment is done for the selected pod.\n* DELETED: Image management version has been deleted.\n* DISABLED: Image management version has been disabled and no further pool operation can be done using the same.\n* FAILED: Image management version creation has failed.\n* PARTIALLY_AVAILABLE: Some of the image management asset creation in some of the virtual centers have failed.\n* PUBLISHING: Image management version is being published and specialized internally like installing agents etc.\n* REPLICATING: Copying the specialized images across all virtual centers.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "PARTIALLY_AVAILABLE", "PUBLISHING", "REPLICATING" ]
        }
      },
      "title" : "ImageManagementVersionCreateSpec",
      "description" : "Information related to image management version."
    },
    "ImageManagementVersionInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management version.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Image management version description."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing image management version."
        },
        "im_stream_id" : {
          "type" : "string",
          "example" : "abc16e8f-9ba0-4789-a5dd-6880f32c52df",
          "description" : "Image management stream ID"
        },
        "name" : {
          "type" : "string",
          "example" : "v1",
          "description" : "Image management version name."
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management version status.\n* AVAILABLE: Image management version is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management version is deploying VM on the selected pod.\n* DEPLOYMENT_DONE: Image management version status when VM deployment is done for the selected pod.\n* DELETED: Image management version has been deleted.\n* DISABLED: Image management version has been disabled and no further pool operation can be done using the same.\n* FAILED: Image management version creation has failed.\n* PARTIALLY_AVAILABLE: Some of the image management asset creation in some of the virtual centers have failed.\n* PUBLISHING: Image management version is being published and specialized internally like installing agents etc.\n* REPLICATING: Copying the specialized images across all virtual centers.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "PARTIALLY_AVAILABLE", "PUBLISHING", "REPLICATING" ]
        }
      },
      "title" : "ImageManagementVersionInfo",
      "description" : "Information related to image management version."
    },
    "ImageManagementVersionUpdateSpec" : {
      "type" : "object",
      "required" : [ "name", "status" ],
      "properties" : {
        "additional_details" : {
          "type" : "object",
          "description" : "Additional details about image management version.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Image management version description."
        },
        "name" : {
          "type" : "string",
          "example" : "v1",
          "description" : "Image management version name."
        },
        "status" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "Image management version status.\n* AVAILABLE: Image management version is available for desktop pools/farms to be created.\n* DEPLOYING_VM: Image management version is deploying VM on the selected pod.\n* DEPLOYMENT_DONE: Image management version status when VM deployment is done for the selected pod.\n* DELETED: Image management version has been deleted.\n* DISABLED: Image management version has been disabled and no further pool operation can be done using the same.\n* FAILED: Image management version creation has failed.\n* PARTIALLY_AVAILABLE: Some of the image management asset creation in some of the virtual centers have failed.\n* PUBLISHING: Image management version is being published and specialized internally like installing agents etc.\n* REPLICATING: Copying the specialized images across all virtual centers.",
          "enum" : [ "AVAILABLE", "DEPLOYING_VM", "DEPLOYMENT_DONE", "DELETED", "DISABLED", "FAILED", "PARTIALLY_AVAILABLE", "PUBLISHING", "REPLICATING" ]
        }
      },
      "title" : "ImageManagementVersionUpdateSpec",
      "description" : "Information related to image management version."
    },
    "InstalledApplicationInfo" : {
      "type" : "object",
      "properties" : {
        "executable_path" : {
          "type" : "string",
          "example" : "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Firefox.lnk",
          "description" : "Path to application executable."
        },
        "file_types" : {
          "type" : "array",
          "description" : "Set of file types reported by the application as supported. If unset, this application does not present any file type support.",
          "items" : {
            "$ref" : "#/definitions/ApplicationFileTypeData"
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Firefox",
          "description" : "Application name information, as sent by RDSServer/machine during application discovery."
        },
        "other_file_types" : {
          "type" : "array",
          "description" : "This represents the different file types reported by Application that can be passed from horizon agent to horizon client via connection server. If unset, this application does not present any other file type support.",
          "items" : {
            "$ref" : "#/definitions/ApplicationOtherFileTypeData"
          }
        },
        "publisher" : {
          "type" : "string",
          "example" : "Mozilla Corporation",
          "description" : "Application publisher"
        },
        "version" : {
          "type" : "string",
          "example" : "72.0.2",
          "description" : "Application version."
        }
      },
      "title" : "InstalledApplicationInfo",
      "description" : "Information about the application installed on RDS server/machine of a farm/desktop pool."
    },
    "InstantCloneDomainAccountCreateSpec" : {
      "type" : "object",
      "required" : [ "ad_domain_id", "password", "username" ],
      "properties" : {
        "ad_domain_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "ID of the AD Domain that this account user belongs to."
        },
        "password" : {
          "type" : "array",
          "example" : "<password>",
          "description" : "Password of the account.",
          "items" : {
            "type" : "string"
          }
        },
        "username" : {
          "type" : "string",
          "example" : "testuser",
          "description" : "User name of the account."
        }
      },
      "title" : "InstantCloneDomainAccountCreateSpec",
      "description" : "Specification of the instant clone domain account."
    },
    "InstantCloneDomainAccountInfo" : {
      "type" : "object",
      "required" : [ "ad_domain_id", "id", "username" ],
      "properties" : {
        "ad_domain_id" : {
          "type" : "string",
          "example" : "6f8543a5-a7a0-4ab8-b3e3-37164dd1ed53",
          "description" : "ID of the AD Domain that this account user belongs to."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing instant clone domain account."
        },
        "username" : {
          "type" : "string",
          "example" : "testuser",
          "description" : "User name of the account."
        }
      },
      "title" : "InstantCloneDomainAccountInfo",
      "description" : "Information related to instant clone domain accounts of the environment."
    },
    "InstantCloneDomainAccountUpdateSpec" : {
      "type" : "object",
      "required" : [ "password" ],
      "properties" : {
        "password" : {
          "type" : "array",
          "example" : "<password>",
          "description" : "Password of the account.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "InstantCloneDomainAccountUpdateSpec",
      "description" : "Update specification for the instant clone domain account."
    },
    "LoadBalancerMetricSettings" : {
      "type" : "object",
      "properties" : {
        "cpu_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Represents threshold of CPU usage, in percentage. If the value is 0,then this metric will not be considered for load balancing. Default value is 0.",
          "minimum" : 0,
          "maximum" : 100,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disk_queue_length_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Represents the threshold of average number of both read and write requests that werequeued for the selected disk during the sample interval. If the value is 0,then this metric will not be considered for load balancing. Default value is 0.",
          "minimum" : 0,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disk_read_latency_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Represents the threshold of average time, in milliseconds, of a read of data from the disk. If the value is 0,then this metric will not be considered for load balancing. Default value is 0.",
          "minimum" : 0,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "disk_write_latency_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Represents the threshold of average time, in milliseconds, of a write of data to the disk.If the value is 0, then this metric will not be considered for load balancing. Default value is 0.",
          "minimum" : 0,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "include_session_count" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether to include session count for load balancing. Default value is true."
        },
        "memory_threshold" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Represents threshold of memory usage, in percentage.If the value is 0, then this metric will not be considered for load balancing.",
          "minimum" : 0,
          "maximum" : 100,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        }
      },
      "title" : "LoadBalancerMetricSettings",
      "description" : "Load Balancer Metric settings for Farm."
    },
    "MachineDeleteData" : {
      "type" : "object",
      "properties" : {
        "allow_delete_from_multi_desktop_pools" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether the machines from different desktop pools can be deleted. This defaults to false in which case only machines belonging to single desktop pool can be deleted. If true, machines from different desktop pools can be deleted."
        },
        "archive_datastore_id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "Determines the datastore where the persistent user disk will be saved for future use. Both this as well as the archiveDatastorePathId need to be set. If this is unset and archivePersistentDisk is specified, the persistent disk is archived in place."
        },
        "archive_datastore_path_id" : {
          "type" : "string",
          "example" : "a219420d-4799-4517-8f78-39c74c7c4efc",
          "description" : "Determines the location in the datastore where the persistent user disk will be saved for future use. If this is set, then archiveDatastoreId also needs to be specified.If this is unset and archivePersistentDisk is specified, the persistent disk is archived in place."
        },
        "archive_persistent_disk" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether to detach the persistent user disk and save it for future use. This can only be specified for linked-clone desktops with redirectWindowsProfile enabled, in which case it defaults to true. "
        },
        "delete_from_disk" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether the Machine VM should be deleted from vCenter Server. This is only applicable for managed machines. This must always be true for machines in linked and instant clone desktops. This defaults to true for linked and instant clone machines and false for all other types. If this is true, then machine being deleted must not have any active user session, otherwise delete operation would fail."
        },
        "force_logoff_session" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines whether active session on the machine to be logged off before deletion. This is only applicable for managed machines. If true, active session on the machine will be logged off before Machine delete. Otherwise,it will result in an exception. "
        }
      },
      "title" : "MachineDeleteData",
      "description" : "Specification applicable when deleting machines."
    },
    "MachineDeleteSpec" : {
      "type" : "object",
      "required" : [ "machine_ids" ],
      "properties" : {
        "machine_delete_data" : {
          "description" : "The specification applicable when deleting machines.",
          "$ref" : "#/definitions/MachineDeleteData"
        },
        "machine_ids" : {
          "type" : "array",
          "example" : [ "0103796c-102b-4ed3-953f-3dfe3d23e0fe", "7cdd624f-37d1-46c1-ab96-695a5d13956f" ],
          "description" : "Machine Ids representing the machines to be deleted.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "MachineDeleteSpec",
      "description" : "Information required to delete machines."
    },
    "MachineInfo" : {
      "type" : "object",
      "required" : [ "desktop_pool_id", "id", "message_security_enhanced_mode_supported", "message_security_mode", "name", "operating_system", "operating_system_architecture", "state", "type" ],
      "properties" : {
        "agent_build_number" : {
          "type" : "string",
          "example" : "22673015",
          "description" : "The Horizon Agent build number.<br>Supported Filters : 'Equals'."
        },
        "agent_version" : {
          "type" : "string",
          "example" : "7.12",
          "description" : "The Horizon Agent version.<br>Supported Filters : 'Equals'."
        },
        "attempted_theft_by_connection_server" : {
          "type" : "array",
          "example" : "connection-server2.example.com",
          "description" : "Names of the Horizon Connection Servers that attempted theft of pairing for this Agent.",
          "items" : {
            "type" : "string"
          }
        },
        "configured_by_connection_server" : {
          "type" : "array",
          "example" : "connection-server1.example.com",
          "description" : "Names of the Horizon Connection Servers the Horizon Agent is paired with.",
          "items" : {
            "type" : "string"
          }
        },
        "desktop_pool_id" : {
          "type" : "string",
          "example" : "855ea6c5-720a-41e1-96f4-958c90e6e424",
          "description" : "The id of the Desktop Pool that the machine belongs to.<br>Supported Filters : 'Equals'."
        },
        "dns_name" : {
          "type" : "string",
          "example" : "machine1.example.com",
          "description" : "DNS name of the machine.<br>Supported Filters : 'Equals', 'StartsWith', 'EndsWith' and 'Contains'."
        },
        "id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "Unique ID representing machine."
        },
        "managed_machine_data" : {
          "description" : "Information applicable only to Managed Machines.",
          "$ref" : "#/definitions/ManagedMachineData"
        },
        "message_security_enhanced_mode_supported" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether ENHANCED message security mode is currently supported by this machine."
        },
        "message_security_mode" : {
          "type" : "string",
          "example" : "MIXED",
          "description" : "The current JMS message security mode used by this machine.<br>Supported Filters : 'Equals'.\n* DISABLED: Message security mode is disabled.\n* MIXED: Message security mode is enabled but not enforced.\n* ENABLED: Message security mode is enabled. Unsigned messages are rejected by Horizon components.\n* ENHANCED: Message Security mode is Enhanced. Message signing and validation is performed based on the current Security Level and desktop Message Security mode.",
          "enum" : [ "DISABLED", "MIXED", "ENABLED", "ENHANCED" ]
        },
        "name" : {
          "type" : "string",
          "example" : "machine1",
          "description" : "Name of the machine.<br>Supported Filters : 'Equals', 'StartsWith' and 'Contains'."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_SERVER_2016",
          "description" : "The guest operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "operating_system_architecture" : {
          "type" : "string",
          "example" : "BIT_64",
          "description" : "The guest operating system architecture.\n* UNKNOWN: Operating System cannot be determined.\n* BIT_32: 32 bit Operating System Architecture.\n* BIT_64: 64 bit Operating System Architecture.",
          "enum" : [ "UNKNOWN", "BIT_32", "BIT_64" ]
        },
        "pairing_state" : {
          "type" : "string",
          "example" : "IN_PAIRING",
          "description" : "Horizon Agent pairing state.\n* NOT_AVAILABLE: Agent pairing state is not available.\n* IN_PAIRING: Agent pairing with Horizon Connection Server is in progress.\n* PAIRED_AND_SECURED: Agent is paired and secured with a Horizon Connection Server.",
          "enum" : [ "NOT_AVAILABLE", "IN_PAIRING", "PAIRED_AND_SECURED" ]
        },
        "remote_experience_agent_build_number" : {
          "type" : "string",
          "example" : "32573985",
          "description" : "The remote experience Horizon Agent build number.<br>Supported Filters : 'Equals'."
        },
        "remote_experience_agent_version" : {
          "type" : "string",
          "example" : "7.12",
          "description" : "The remote experience Horizon Agent version.<br>Supported Filters : 'Equals'."
        },
        "state" : {
          "type" : "string",
          "example" : "PROVISIONING",
          "description" : "The state of the machine.<br>Supported Filters : 'Equals'.\n* PROVISIONING: The machine is being provisioned.\n* PROVISIONING_ERROR: An error occurred during provisioning.\n* WAITING_FOR_AGENT: Horizon Connection Server is waiting to establish communication with Horizon Agent for one of these cases - a virtual machine in a manual desktop pool, unmanaged machine or RDS server.\n* CUSTOMIZING: The machine which is from an automated desktop pool is being customized after provisioning.\n* DELETING: The machine is marked for deletion.\n* MAINTENANCE: The machine is in maintenance mode. Users cannot log in or use the machine.\n* ERROR: An unknown error occurred in the machine.\n* PROVISIONED: The machine is powered off or suspended.\n* AGENT_UNREACHABLE: Horizon Connection Server cannot establish communication with Horizon Agent on the machine.\n* UNASSIGNED_USER_CONNECTED: A user other than the assigned user is logged in to the machine in a dedicated desktop pool.\n* CONNECTED: The machine is in an active session and has an active connection to a Horizon client.\n* UNASSIGNED_USER_DISCONNECTED: A user other than the assigned user is logged in and disconnected from the machine in a dedicated desktop pool.\n* DISCONNECTED: The machine is in an active session, but it is disconnected from the Horizon client.\n* AGENT_ERROR_STARTUP_IN_PROGRESS: Horizon Agent has started on the machine, but other required services such as the display protocol are still starting.\n* AGENT_ERROR_DISABLED: Horizon Agent is disabled.\n* AGENT_ERROR_INVALID_IP: Horizon Agent has an invalid IP address.\n* AGENT_ERROR_NEEDS_REBOOT: Horizon Agent needs reboot.\n* AGENT_ERROR_PROTOCOL_FAILURE: Protocol such as BLAST, RDP or PCoIP is not enabled.\n* AGENT_CONFIG_ERROR: The Remote Desktop Services role is not enabled on the windows server.\n* AGENT_DRAIN_MODE: RDS host is configured for drain mode. New connections are currently disabled.\n* AGENT_DRAIN_UNTIL_RESTART: RDS host is configured for drain-until-restart mode.\n* ALREADY_USED: The machine is configured to have only one session which is currently in progress and cannot accept new sessions.\n* AVAILABLE: The machine is powered on and ready for active connections.\n* IN_PROGRESS: There is a machine operation in progress.\n* DISABLED: The machine is disabled.\n* DISABLE_IN_PROGRESS: Disabled Horizon Connection Server still has some Horizon brokered sessions. It can still accept re-connections.\n* VALIDATING: The Horizon Connection Server is synchronizing state information with the agent.\n* UNKNOWN: Could not determine the state of the machine.",
          "enum" : [ "PROVISIONING", "PROVISIONING_ERROR", "WAITING_FOR_AGENT", "CUSTOMIZING", "DELETING", "MAINTENANCE", "ERROR", "PROVISIONED", "AGENT_UNREACHABLE", "UNASSIGNED_USER_CONNECTED", "CONNECTED", "UNASSIGNED_USER_DISCONNECTED", "DISCONNECTED", "AGENT_ERROR_STARTUP_IN_PROGRESS", "AGENT_ERROR_DISABLED", "AGENT_ERROR_INVALID_IP", "AGENT_ERROR_NEEDS_REBOOT", "AGENT_ERROR_PROTOCOL_FAILURE", "AGENT_CONFIG_ERROR", "AGENT_DRAIN_MODE", "AGENT_DRAIN_UNTIL_RESTART", "ALREADY_USED", "AVAILABLE", "IN_PROGRESS", "DISABLED", "DISABLE_IN_PROGRESS", "VALIDATING", "UNKNOWN" ]
        },
        "type" : {
          "type" : "string",
          "example" : "MANAGED_MACHINE",
          "description" : "The type of machine.<br>Supported Filters : 'Equals'.\n* MANAGED_MACHINE: The machine is a managed virtual machine.\n* UNMANAGED_MACHINE: The machine is an unmanaged physical or virtual machine.",
          "enum" : [ "MANAGED_MACHINE", "UNMANAGED_MACHINE" ]
        },
        "user_ids" : {
          "type" : "array",
          "example" : [ "S-1-1-1-3965912346-1012345398-3123456564-123", "S-1-2-3-3123456786-1012345398-3123456784-124" ],
          "description" : "The unique SIDs of the users assigned to the machine.<br>Supported Filters : 'Contains'.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "MachineInfo",
      "description" : "Information related to a Machine.<br>List API returning this summary information can use search filter query to filter on specific fields supported by filters.<br> Supported Filters : 'And', 'Or', 'Equals', 'StartsWith', 'Contains' and 'EndsWith'.<br>See the field description to know the filter types it supports."
    },
    "MachineSpecifiedName" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "machine1",
          "description" : "Name of the machine."
        },
        "user_id" : {
          "type" : "string",
          "example" : "S-1-1-1-3965912346-1012345398-3123456564-123",
          "description" : "The unique SID of the user assigned to the machine."
        }
      },
      "title" : "MachineSpecifiedName",
      "description" : "Information required to add a machine to a desktop pool."
    },
    "ManagedMachineData" : {
      "type" : "object",
      "required" : [ "path", "virtual_center_id", "virtual_machine_power_state" ],
      "properties" : {
        "clone_error_message" : {
          "type" : "string",
          "example" : "Timeout expired trying to clone a virtual machine.",
          "description" : "Cloning error message for this machine. This will be set for machine belonging to automated desktop pools when the machine's state is in PROVISIONING_ERROR or ERROR state."
        },
        "clone_error_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1575285661395,
          "description" : "Cloning error time for this machine in milliseconds. Measured as epoch time. This will be set for machine belonging to automated desktop pools when the machine's state is in PROVISIONING_ERROR or ERROR state."
        },
        "create_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1575285661395,
          "description" : "Time at which the machine was created in milliseconds. Measured as epoch time."
        },
        "host_name" : {
          "type" : "string",
          "example" : "WD332H5",
          "description" : "The name of the host on which this virtual machine is registered."
        },
        "in_hold_customization" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This condition determines if this virtual machine should be on hold before customization is started.<br>Supported Filters : 'Equals'."
        },
        "in_maintenance_mode" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the Machine is in maintenance mode."
        },
        "memory_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1024,
          "description" : "The virtual machine physical memory in MB."
        },
        "missing_in_vcenter" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This condition determines if the virtual machine is missing in vCenter Server.<br>Supported Filters : 'Equals'."
        },
        "network_labels" : {
          "type" : "array",
          "description" : "The network label(s) associated with this Machine. The network label(s) automatically assigned by Horizon to this Machine. These may differ from the actual labels if manually changed after automatic assignment or if there was an error in assignment. Labels are only assigned if the feature is enabled on this Machine's Desktop Pool.",
          "items" : {
            "$ref" : "#/definitions/NetworkLabelData"
          }
        },
        "path" : {
          "type" : "string",
          "example" : "/path/host",
          "description" : "The virtual machine path.<br>Supported Filters : 'Equals', 'StartsWith', 'EndsWith' and 'Contains'.Field name to be used in filter : managedMachineData.path."
        },
        "storage_accelerator_state" : {
          "type" : "string",
          "example" : "CURRENT",
          "description" : "The Horizon Storage Accelerator state. Storage acceleration will be available for managed machines if configured.<br>Supported Filters : 'Equals'.\n* OFF: The Storage Accelerator is off.\n* CURRENT: The machine cached data is updated.\n* OUT_OF_DATE: The machine cached data is not updated and requires regeneration.\n* ERROR: The Storage Accelerator has encountered an error.",
          "enum" : [ "OFF", "CURRENT", "OUT_OF_DATE", "ERROR" ]
        },
        "virtual_center_id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "The ID of the Virtual Center managing this machine.<br>Supported Filters : 'Equals'."
        },
        "virtual_disks" : {
          "type" : "array",
          "description" : "The virtual disks comprising the virtual machine.",
          "items" : {
            "$ref" : "#/definitions/VirtualDiskData"
          }
        },
        "virtual_machine_power_state" : {
          "type" : "string",
          "example" : "POWERED_ON",
          "description" : "The virtual machine power state.<br>Supported Filters : 'Equals'.\n* POWERED_OFF: The machine is powered off.\n* POWERED_ON: The machine is powered on.\n* SUSPENDED: The machine is suspended.",
          "enum" : [ "POWERED_OFF", "POWERED_ON", "SUSPENDED" ]
        }
      },
      "title" : "ManagedMachineData",
      "description" : "Information related to Managed machines."
    },
    "NetworkInterfaceCardInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "74390016-2dea-4b8c-8181-385783effaeb",
          "description" : "Unique ID representing the network interface card."
        },
        "mac_address" : {
          "type" : "string",
          "example" : "00:50:56:a6:62:ac",
          "description" : "Network interface card MAC address."
        },
        "name" : {
          "type" : "string",
          "example" : "Network adapter 1",
          "description" : "Network interface card name."
        }
      },
      "title" : "NetworkInterfaceCardInfo",
      "description" : "Information related to network interface card."
    },
    "NetworkLabelAssignmentSettings" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Whether or not this specification is enabled. While this specification is disabled, automatic network label assigment for this desktop pool will skip over the network label in this spec."
        },
        "max_label" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The maximum number of times this label can be assigned to a machine. Note this count only encompasses this spec. That is, this label may be used for other NICs and in other Desktop pools, but those assignments will not be counted towards this total. This count also does not include assignments of this label to machines not under the control of View."
        },
        "max_label_type" : {
          "type" : "string",
          "example" : "LIMITED",
          "description" : "This type specifies whether or not there is a maximum limit to the number of times this label may be assigned to machines within this spec. While this specification is enabled and unlimited, specs after this one in the NIC's network label specification list will never be used.\n* UNLIMITED: The network label assignment specification has no limit on the number of labels to assign.\n* LIMITED: The network label assignment specification has a limited number of labels to assign.",
          "enum" : [ "UNLIMITED", "LIMITED" ]
        },
        "network_label_name" : {
          "type" : "string",
          "example" : "vm-network",
          "description" : "The network label id for this spec. This network label must not have any incompatibility reasons that would preclude it from automatic machine assignment."
        }
      },
      "title" : "NetworkLabelAssignmentSettings",
      "description" : "Specification for an individual network label assignment, stipulating the label and how many times it may be assigned to machines with this spec."
    },
    "NetworkLabelData" : {
      "type" : "object",
      "required" : [ "network_label_name", "nic_name" ],
      "properties" : {
        "network_label_name" : {
          "type" : "string",
          "example" : "example-network",
          "description" : "The network label name."
        },
        "nic_name" : {
          "type" : "string",
          "example" : "network1",
          "description" : "The network interface name"
        }
      },
      "title" : "NetworkLabelData",
      "description" : "Information related to a network label."
    },
    "NetworkLabelInfo" : {
      "type" : "object",
      "properties" : {
        "available_ports" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Available ports in network label."
        },
        "id" : {
          "type" : "string",
          "example" : "network-1",
          "description" : "Unique ID representing the network label."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this Network Label from being used in desktoppool/farm configuration.",
          "items" : {
            "type" : "string",
            "enum" : [ "NOT_CONFIGURED_ON_ALL_HOSTS", "DVS_UPLINK_PORT", "VMC_NETWORKS" ]
          }
        },
        "label_type" : {
          "type" : "string",
          "example" : "EARLY_BINDING",
          "description" : "Network label type.\n* EARLY_BINDING: A free Distributed Virtual Port will be selected and assigned to a Virtual Machine when the Virtual Machine is reconfigured to connect to the portgroup. Instant clones desktop pools/farms only support port group type of early binding.\n* EPHEMERAL: A Distributed Virtual Port will be created and assigned to a Virtual Machine when the Virtual Machine is powered on, and will be deleted when the Virtual Machine is powered off. An ephemeral portgroup has no limit on the number of ports that can be a part of this portgroup. In cases where the vCenter Server is unavailable the host can create conflict ports in this portgroup to be used by a Virtual Machine at power on.\n* LATE_BINDING: Deprecated as of vSphere API 5.0 A free DistributedVirtualPort will be selected and assigned to a Virtual Machine when the Virtual Machine is powered on.",
          "enum" : [ "EARLY_BINDING", "EPHEMERAL", "LATE_BINDING" ]
        },
        "max_ports" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "The total number of ports present."
        },
        "name" : {
          "type" : "string",
          "example" : "VM Network",
          "description" : "Network label name."
        },
        "switch_type" : {
          "type" : "string",
          "example" : "STANDARD_SWITCH",
          "description" : "Network label switch type.\n* STANDARD_SWITCH: Standard Switch.\n* DISTRIBUTED_VIRTUAL_SWITCH: Distributed Virtual Switch.\n* NSX_NETWORK_SWITCH: NSX network Switch.",
          "enum" : [ "STANDARD_SWITCH", "DISTRIBUTED_VIRTUAL_SWITCH", "NSX_NETWORK_SWITCH" ]
        }
      },
      "title" : "NetworkLabelInfo",
      "description" : "Information related to network label."
    },
    "PodEndPointData" : {
      "type" : "object",
      "required" : [ "enabled", "id", "name", "status", "url" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether an endpoint is enabled. A disabled endpoint will be excluded from participating inter-pod communication."
        },
        "id" : {
          "type" : "string",
          "example" : "c5337d77-2bf1-4fa4-b027-c301114f2d1e",
          "description" : "Unique ID for a pod endpoint."
        },
        "name" : {
          "type" : "string",
          "example" : "connection-server1.example.com",
          "description" : "Name for the pod endpoint."
        },
        "roundtrip_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234,
          "description" : "Round trip time (in milliseconds) for ping request between the local pod endpoint and the remote pod."
        },
        "status" : {
          "type" : "string",
          "example" : "ONLINE",
          "description" : "Status of the pod endpoint.\n* ONLINE: Pod endpoint is online and functional.\n* UNCHECKED: Pod endpoint was offline and it just came back online but the system has not verified that it is functional.\n* OFFLINE: Pod endpoint is offline or unreachable.",
          "enum" : [ "ONLINE", "UNCHECKED", "OFFLINE" ]
        },
        "url" : {
          "type" : "string",
          "example" : "https://connection-server1.example.com:8742",
          "description" : "The URL for the pod endpoint. This address and special port will be used for inter-pod communication."
        }
      },
      "title" : "PodEndPointData"
    },
    "PodEndPointDataV2" : {
      "type" : "object",
      "required" : [ "enabled", "id", "name", "status", "url" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether an endpoint is enabled. A disabled endpoint will be excluded from participating inter-pod communication."
        },
        "id" : {
          "type" : "string",
          "example" : "c5337d77-2bf1-4fa4-b027-c301114f2d1e",
          "description" : "Unique ID for a pod endpoint."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "connection-server1.example.com",
          "description" : "Name for the pod endpoint."
        },
        "roundtrip_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234,
          "description" : "Round trip time (in milliseconds) for ping request between the local pod endpoint and the remote pod."
        },
        "status" : {
          "type" : "string",
          "example" : "ONLINE",
          "description" : "Status of the pod endpoint.\n* ONLINE: Pod endpoint is online and functional.\n* UNCHECKED: Pod endpoint was offline and it just came back online but the system has not verified that it is functional.\n* OFFLINE: Pod endpoint is offline or unreachable.",
          "enum" : [ "ONLINE", "UNCHECKED", "OFFLINE" ]
        },
        "url" : {
          "type" : "string",
          "example" : "https://connection-server1.example.com:8742",
          "description" : "The URL for the pod endpoint. This address and special port will be used for inter-pod communication."
        }
      },
      "title" : "PodEndPointDataV2"
    },
    "PodMonitorInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "site_id" ],
      "properties" : {
        "endpoints" : {
          "type" : "array",
          "description" : "The list of pod endpoints within this pod. An endpoint is basically a connection server in that pod.",
          "items" : {
            "$ref" : "#/definitions/PodEndPointData"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the pod."
        },
        "name" : {
          "type" : "string",
          "example" : "Cluster-SITE1-POD1",
          "description" : "Display name for the pod."
        },
        "site_id" : {
          "type" : "string",
          "example" : "a5882e23-3bf4-1ba6-c128-e780004f2d1e",
          "description" : "The Id of the site this pod belongs to."
        }
      },
      "title" : "PodMonitorInfo",
      "description" : "Monitoring information related to a pod."
    },
    "PodMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "id", "name", "site_id" ],
      "properties" : {
        "endpoints" : {
          "type" : "array",
          "description" : "The list of pod endpoints within this pod. An endpoint is basically a connection server in that pod.",
          "items" : {
            "$ref" : "#/definitions/PodEndPointDataV2"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the pod."
        },
        "name" : {
          "type" : "string",
          "example" : "Cluster-SITE1-POD1",
          "description" : "Display name for the pod."
        },
        "site_id" : {
          "type" : "string",
          "example" : "a5882e23-3bf4-1ba6-c128-e780004f2d1e",
          "description" : "The Id of the site this pod belongs to."
        }
      },
      "title" : "PodMonitorInfoV2",
      "description" : "Monitoring information related to a pod."
    },
    "RCXClientRegisterSpec" : {
      "type" : "object",
      "required" : [ "name", "thumbprints" ],
      "properties" : {
        "ip_address" : {
          "type" : "string",
          "example" : "127.0.0.1",
          "description" : "IP address of the RCX client."
        },
        "name" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "The RCX client certificate name."
        },
        "thumbprints" : {
          "type" : "array",
          "description" : "Thumbprints of the RCX client certificate.",
          "items" : {
            "$ref" : "#/definitions/CertificateThumbprint"
          }
        }
      },
      "title" : "RCXClientRegisterSpec",
      "description" : "Specification of the RCX client."
    },
    "RCXClientUpdateSpec" : {
      "type" : "object",
      "required" : [ "thumbprints" ],
      "properties" : {
        "ip_address" : {
          "type" : "string",
          "example" : "127.0.0.1",
          "description" : "IP address of the RCX client."
        },
        "thumbprints" : {
          "type" : "array",
          "description" : "Thumbprints of the RCX client certificate.",
          "items" : {
            "$ref" : "#/definitions/CertificateThumbprint"
          }
        }
      },
      "title" : "RCXClientUpdateSpec",
      "description" : "Update specification for the RCX client."
    },
    "RCXServerInfo" : {
      "type" : "object",
      "required" : [ "id", "name", "port", "status", "version" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51",
          "description" : "Unique ID representing RCX server."
        },
        "name" : {
          "type" : "string",
          "example" : "rcxserver.example.com",
          "description" : "FQDN/IP address of the RCX server."
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 81,
          "description" : "RCX server's port."
        },
        "status" : {
          "type" : "string",
          "example" : "UP",
          "description" : "This indicates the current status of RCX server.\n* UP: RCX server is running.\n* DOWN: RCX server is down.\n* UNKNOWN: RCX server status is unknown.",
          "enum" : [ "UP", "DOWN", "UNKNOWN" ]
        },
        "thumbprints" : {
          "type" : "array",
          "description" : "Thumbprints of the RCX server certificates.",
          "items" : {
            "$ref" : "#/definitions/CertificateThumbprint"
          }
        },
        "version" : {
          "type" : "string",
          "example" : "7.12",
          "description" : "Version information of RCX server."
        }
      },
      "title" : "RCXServerInfo",
      "description" : "Information related to RCX servers of the cluster."
    },
    "RDSServerMonitorDetails" : {
      "type" : "object",
      "required" : [ "agent_build", "agent_version", "operating_system", "state" ],
      "properties" : {
        "agent_build" : {
          "type" : "string",
          "example" : "4445678",
          "description" : "Agent build number."
        },
        "agent_version" : {
          "type" : "string",
          "example" : "7.9.0",
          "description" : "Agent version."
        },
        "max_sessions_count_configured" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123,
          "description" : "Maximum number of sessions for RDS server as configured by administrator. Will be unset if the value is not configured."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_SERVER_2016",
          "description" : "Operating System version.\n* UNKNOWN: Unknown\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_SERVER_OTHER: Linux Server (other)",
          "enum" : [ "UNKNOWN", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_SERVER_OTHER" ]
        },
        "state" : {
          "type" : "string",
          "example" : "AVAILABLE",
          "description" : "State of RDS Server.\n* WAIT_FOR_AGENT: Connection Server is waiting to establish communication with View Agent on a RDS Server.\n* AGENT_UNREACHABLE: Connection Server cannot establish communication with View Agent on a RDS Server.\n* AGENT_CONFIG_ERROR: The RDS Server has configuration error. Ex: Remote Desktop Service role is not enabled.\n* AVAILABLE: The RDS Server is powered on and ready for an active connection.\n* DISABLED: The RDS Server is disabled.\n* DISABLE_IN_PROGRESS: Disabled RDS server still has some brokered sessions. It can still accept re-connections.\n* PROVISIONING: The RDS Server is being provisioned.\n* PROVISIONING_ERROR: An error occurred during provisioning.\n* CUSTOMIZING: The RDS Server is being customized.\n* DELETING: The RDS Server is marked for deletion. It will be deleted soon.\n* MAINTENANCE: The RDS Server is in maintenance mode.\n* ERROR: An unknown error occurred in the RDS Server.\n* PROVISIONED: The RDS Server has been provisioned.\n* CONNECTED: The RDS Server is in an active session.\n* DISCONNECTED: The RDS Server is in an active session but is disconnected.\n* AGENT_ERR_STARTUP_IN_PROGRESS: The Horizon Agent has started on the virtual machine, but other required services such as the display protocol are still starting.\n* AGENT_ERR_DISABLED: The Horizon Agent is disabled.\n* AGENT_ERR_INVALID_IP: The Horizon Agent has an invalid IP.\n* AGENT_ERR_NEED_REBOOT: The Horizon Agent needs reboot.\n* AGENT_ERR_PROTOCOL_FAILURE: Protocol such as RDP or PCoIP is not enabled.\n* AGENT_ERR_DOMAIN_FAILURE: The RDS Server has an invalid domain.\n* AGENT_DRAIN_MODE: The RDS Server is configured for drain mode.\n* AGENT_DRAIN_UNTIL_RESTART: The RDS Server is configured a mode to drain until restart.\n* ALREADY_USED: The RDS Server cannot accept new sessions.\n* IN_PROGRESS: There is a RDS Server operation in progress.\n* VALIDATING: The connection server is synchronizing state information with the agent.\n* UNKNOWN: Could not determine the state of the RDS Server.",
          "enum" : [ "WAIT_FOR_AGENT", "AGENT_UNREACHABLE", "AGENT_CONFIG_ERROR", "AVAILABLE", "DISABLED", "DISABLE_IN_PROGRESS", "PROVISIONING", "PROVISIONING_ERROR", "CUSTOMIZING", "DELETING", "MAINTENANCE", "ERROR", "PROVISIONED", "CONNECTED", "DISCONNECTED", "AGENT_ERR_STARTUP_IN_PROGRESS", "AGENT_ERR_DISABLED", "AGENT_ERR_INVALID_IP", "AGENT_ERR_NEED_REBOOT", "AGENT_ERR_PROTOCOL_FAILURE", "AGENT_ERR_DOMAIN_FAILURE", "AGENT_DRAIN_MODE", "AGENT_DRAIN_UNTIL_RESTART", "ALREADY_USED", "IN_PROGRESS", "VALIDATING", "UNKNOWN" ]
        }
      },
      "title" : "RDSServerMonitorDetails",
      "description" : "Details of RDS Server."
    },
    "RDSServerMonitorInfo" : {
      "type" : "object",
      "required" : [ "details", "enabled", "farm_id", "id", "name", "status" ],
      "properties" : {
        "details" : {
          "description" : "Server details of RDS Server.",
          "$ref" : "#/definitions/RDSServerMonitorDetails"
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if RDS server is enabled."
        },
        "farm_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Indicates the Farm ID to which the RDS Server belongs to."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the RDS server."
        },
        "load_index" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 60,
          "description" : "This value is similar to load_preference and represents the load on RDS Server in the range of 0 to 100.",
          "minimum" : 0,
          "maximum" : 100,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        },
        "load_preference" : {
          "type" : "string",
          "example" : "NORMAL",
          "description" : "Based on the current load of this RDS Server, gives a measure of how preferential this server is to be chosen for new application sessions.\n* BLOCK: RDS Server is blocked and new sessions will not be accepted.\n* HEAVY: RDS Server is experiencing heavy load and should likely not be chosen for new sessions.\n* NORMAL: RDS Server is experiencing normal load and is okay to be chosen for new sessions.\n* LIGHT: RDS Server is experiencing light load and is okay to be chosen for new sessions.\n* UNKNOWN: RDS Server did not report a load preference. This is potentially a configuration issue if other RDS Servers in the same Farm do report load preferences.",
          "enum" : [ "BLOCK", "HEAVY", "NORMAL", "LIGHT", "UNKNOWN" ]
        },
        "name" : {
          "type" : "string",
          "example" : "rds-server.example.com",
          "description" : "RDS Server name."
        },
        "session_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 35,
          "description" : "RDS server session count."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "RDS server status.\n* OK: RDS Server is reachable. All applications (defined on its farm) are verified installed on the RDS Server.\n* WARNING: RDS Server is reachable. Some applications are detected as not installed on the RDS Server.\n* ERROR: RDS Server is unreachable, or, none of the applications are installed.\n* DISABLED: RDS Server is disabled.",
          "enum" : [ "OK", "WARNING", "ERROR", "DISABLED" ]
        }
      },
      "title" : "RDSServerMonitorInfo",
      "description" : "RDS Server Monitor Information."
    },
    "RefreshToken" : {
      "type" : "object",
      "required" : [ "refresh_token" ],
      "properties" : {
        "refresh_token" : {
          "type" : "string",
          "example" : "<jwt.refresh.token>",
          "description" : "Refresh Token to be used to get a new Access token."
        }
      },
      "title" : "RefreshToken",
      "description" : "Refresh Token"
    },
    "ResourcePoolInfo" : {
      "type" : "object",
      "properties" : {
        "children" : {
          "type" : "array",
          "description" : "Child nodes of the resource pool.",
          "items" : {
            "$ref" : "#/definitions/ResourcePoolInfo"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "resgroup-1",
          "description" : "Unique ID representing the resource pool."
        },
        "name" : {
          "type" : "string",
          "example" : "RP1",
          "description" : "Resource pool name."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/host/Cluster/Resources/RP1",
          "description" : "Resource pool path."
        },
        "type" : {
          "type" : "string",
          "example" : "RESOURCE_POOL",
          "description" : "Resource pool type.\n* HOST: Host used as a resource pool suitable for use in desktop pool/farm.\n* CLUSTER: Cluster used as a resource pool suitable for use in desktop pool/farm.\n* RESOURCE_POOL: Regular resource pool suitable for use in desktop pool/farm.\n* OTHER: Other resource type which cannot be used in desktop pool/farm.",
          "enum" : [ "HOST", "CLUSTER", "RESOURCE_POOL", "OTHER" ]
        }
      },
      "title" : "ResourcePoolInfo",
      "description" : "Information related to resource pool."
    },
    "RestrictedClientData" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "WINDOWS",
          "description" : "The type of Horizon Client.\n* WINDOWS: The client is the Horizon Client for Windows.\n* MAC: The client is the Horizon Client for MacOS.\n* HTMLACCESS: The client is a Web client.\n* LINUX: The client is the Horizon Client for Linux.\n* IOS: The client is the Horizon Client for IOS devices.\n* ANDROID: The client is the Horizon Client for Android.\n* WINSTORE: The client is the Horizon Client for Windows 10 UWP.\n* CHROME: The client is the Horizon Client for Chrome Native OS.",
          "enum" : [ "WINDOWS", "MAC", "HTMLACCESS", "LINUX", "IOS", "ANDROID", "WINSTORE", "CHROME" ]
        },
        "version" : {
          "type" : "string",
          "example" : "7.5",
          "description" : "The version of Horizon Client."
        }
      },
      "title" : "RestrictedClientData",
      "description" : "Information related to Restricted Horizon Clients."
    },
    "SAMLAuthMonitorDetails" : {
      "type" : "object",
      "required" : [ "label", "metadata_url" ],
      "properties" : {
        "administrator_url" : {
          "type" : "string",
          "example" : "https://vidm.example.com/saas/api/1.0/GET/admindata",
          "description" : "The administrator URL for the SAML authenticator."
        },
        "label" : {
          "type" : "string",
          "example" : "vidm.example.com",
          "description" : "The label of the SAML Authenticator."
        },
        "metadata_url" : {
          "type" : "string",
          "example" : "https://vidm.example.com/saas/api/1.0/GET/metadata/idp.xml",
          "description" : "The metadata URL of the SAML Authenticator."
        }
      },
      "title" : "SAMLAuthMonitorDetails",
      "description" : "Details of the SAML authenticator."
    },
    "SAMLAuthenticatorMonitorConnectionServer" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the SAML authenticator with respect to this Connection Server.\n* OK: The connection to SAML authenticator is working properly.\n* ERROR: Error occurred when connecting to SAML authenticator.\n* WARN: The connection to SAML authenticator has minor issues.\n* UNKNOWN: State of SAML authenticator is unknown.",
          "enum" : [ "OK", "ERROR", "WARN", "UNKNOWN" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the thumbprint of the SAML authenticator was accepted."
        }
      },
      "title" : "SAMLAuthenticatorMonitorConnectionServer",
      "description" : "Information about the SAML authenticator connection from a connection server."
    },
    "SAMLAuthenticatorMonitorConnectionServerV2" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the SAML authenticator with respect to this Connection Server.\n* OK: The connection to SAML authenticator is working properly.\n* ERROR: Error occurred when connecting to SAML authenticator.\n* WARN: The connection to SAML authenticator has minor issues.\n* UNKNOWN: State of SAML authenticator is unknown.",
          "enum" : [ "OK", "ERROR", "WARN", "UNKNOWN" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the thumbprint of the SAML authenticator was accepted."
        }
      },
      "title" : "SAMLAuthenticatorMonitorConnectionServerV2",
      "description" : "Information about the SAML authenticator connection from a connection server."
    },
    "SAMLAuthenticatorMonitorInfo" : {
      "type" : "object",
      "required" : [ "connection_servers", "details", "id" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the SAML authenticator connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/SAMLAuthenticatorMonitorConnectionServer"
          }
        },
        "details" : {
          "description" : "Details about the SAML authenticator.",
          "$ref" : "#/definitions/SAMLAuthMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the SAML Authenticator."
        }
      },
      "title" : "SAMLAuthenticatorMonitorInfo",
      "description" : "Monitoring information related to SAML Authenticator."
    },
    "SAMLAuthenticatorMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "connection_servers", "details", "id" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the SAML authenticator connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/SAMLAuthenticatorMonitorConnectionServerV2"
          }
        },
        "details" : {
          "description" : "Details about the SAML authenticator.",
          "$ref" : "#/definitions/SAMLAuthMonitorDetails"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the SAML Authenticator."
        }
      },
      "title" : "SAMLAuthenticatorMonitorInfoV2",
      "description" : "Monitoring information related to SAML Authenticator."
    },
    "SecurityGatewayData" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "example" : "127.0.0.1",
          "description" : "IP address of the security gateway. \nThis property need not be set."
        },
        "domain_name" : {
          "type" : "string",
          "example" : "SECURE-GW.example.com",
          "description" : "Computer machine name or DNS name of the security gateway. \nThis property need not be set."
        },
        "location" : {
          "type" : "string",
          "example" : "EXTERNAL",
          "description" : "Location of the security gateway. \nThis property need not be set.\n* EXTERNAL: Gateway location is external.\n* INTERNAL: Gateway location is internal.\n* UNKNOWN: Gateway location is unknown.",
          "enum" : [ "EXTERNAL", "INTERNAL", "UNKNOWN" ]
        }
      },
      "title" : "SecurityGatewayData",
      "description" : "Security gateway data associated with the session."
    },
    "SecuritySettings" : {
      "type" : "object",
      "required" : [ "cluster_public_key", "data_recovery_password_configured", "message_security_mode", "message_security_status", "re_auth_secure_tunnel_after_interruption" ],
      "properties" : {
        "cluster_public_key" : {
          "type" : "string",
          "example" : "3d43f005bfd5ade4c6853bd337f4d205e189c28793063087d1c0aeb58931e02c",
          "description" : "The Base 64 encoded public key of the cluster in PEM format."
        },
        "cluster_public_key_id" : {
          "type" : "string",
          "example" : "cluster key",
          "description" : "Key Id to identify the cluster's active key pair."
        },
        "data_recovery_password_configured" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether the backup recovery password has been configured."
        },
        "message_security_mode" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Determines if signing and verification of the JMS messages passed between Horizon components takes place.\n* DISABLED: Message security mode is disabled.\n* MIXED: Message security mode is enabled but not enforced.\n* ENABLED: Message security mode is enabled. Unsigned messages are rejected by Horizon components.\n* ENHANCED: Message Security mode is Enhanced. Message signing and validation is performed based on the current Security Level and desktop Message Security mode.",
          "enum" : [ "DISABLED", "MIXED", "ENABLED", "ENHANCED" ]
        },
        "message_security_status" : {
          "type" : "string",
          "example" : "READY",
          "description" : "The status of the JMS message security. This tracks the application of changes to messageSecurityMode.\n* READY: The cluster is performing at the specified message security mode.\n* INITIALIZING_ENHANCED: The cluster is initializing a transition to the ENHANCED message security mode.\n* PENDING_ENHANCED: The cluster is propagating the change to ENHANCED message security mode to all nodes.\n* LEAVING_ENHANCED: The cluster is leaving the ENHANCED message security mode.",
          "enum" : [ "READY", "INITIALIZING_ENHANCED", "PENDING_ENHANCED", "LEAVING_ENHANCED" ]
        },
        "re_auth_secure_tunnel_after_interruption" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines if user credentials must be re-authenticated after a network interruption when Horizon clients use secure tunnel connections to Horizon resources. When you select this setting, if a secure tunnel connection ends during a session, Horizon Client requires the user to re-authenticate before reconnecting."
        }
      },
      "title" : "SecuritySettings",
      "description" : "Information related to Security Settings."
    },
    "SecuritySettingsUpdateSpec" : {
      "type" : "object",
      "required" : [ "message_security_mode" ],
      "properties" : {
        "data_recovery_password_hash" : {
          "type" : "array",
          "example" : "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
          "description" : "The SHA-256 hash of the (UTF-8) data recovery password.",
          "items" : {
            "type" : "string"
          }
        },
        "data_recovery_password_hint" : {
          "type" : "string",
          "example" : "password hint",
          "description" : "The data recovery password hint. This property has a maximum length of 128 characters."
        },
        "message_security_mode" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Determines if signing and verification of the JMS messages passed between Horizon components takes place.\n* DISABLED: Message security mode is disabled.\n* MIXED: Message security mode is enabled but not enforced.\n* ENABLED: Message security mode is enabled. Unsigned messages are rejected by Horizon components.\n* ENHANCED: Message Security mode is Enhanced. Message signing and validation is performed based on the current Security Level and desktop Message Security mode.",
          "enum" : [ "DISABLED", "MIXED", "ENABLED", "ENHANCED" ]
        },
        "re_auth_secure_tunnel_after_interruption" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Determines if user credentials must be re-authenticated after a network interruption when Horizon clients use secure tunnel connections to Horizon resources. When you select this setting, if a secure tunnel connection ends during a session, Horizon Client requires the user to re-authenticate before reconnecting."
        }
      },
      "title" : "SecuritySettingsUpdateSpec",
      "description" : "Information related to Security Settings."
    },
    "SessionInfo" : {
      "type" : "object",
      "properties" : {
        "access_group_id" : {
          "type" : "string",
          "example" : "6fd4638a-381f-4518-aed6-042aa3d9f14c",
          "description" : "Access group id associated with the session. \nFor a non-RDS desktop session, this is the desktop pool's access group id. \nFor an RDS desktop session, this is the RDS desktop pool's farm's access group id. \nFor an application session, this is the application's farm's access group id."
        },
        "agent_version" : {
          "type" : "string",
          "example" : "7.12.0",
          "description" : "Version of agent\nThis property need not be set."
        },
        "application_names" : {
          "type" : "array",
          "example" : [ "Calculator" ],
          "description" : "Names of the applications launched in the session. \nIt will be only set when session_type is APPLICATION.",
          "items" : {
            "type" : "string"
          }
        },
        "broker_user_id" : {
          "type" : "string",
          "example" : "S-1-5-21-1111111111-2222222222-3333333333-500",
          "description" : "User SID for the broker user associated with the session. \nIt will be unset for non-broker sessions."
        },
        "brokered_remotely" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the session is brokered from a remote pod. \nIt is set only if the Horizon View agent where the session resides is version 6.0 or later."
        },
        "client_data" : {
          "description" : "Client data associated with the session.",
          "$ref" : "#/definitions/ClientData"
        },
        "desktop_pool_id" : {
          "type" : "string",
          "example" : "0103796c-102b-4ed3-953f-3dfe3d23e0fe",
          "description" : "Unique desktop pool id for the session. \nThis is unset if the session is not brokered through a desktop, such as for direct console access."
        },
        "disconnected_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582181947320,
          "description" : "Epoch time in milli seconds, when the session was last disconnected. \nThis will be unset if the session's machine has an error state, or if the session has never been disconnected."
        },
        "farm_id" : {
          "type" : "string",
          "example" : "0dbd14ba-5795-4141-9cec-128ff6d494b0",
          "description" : "Unique farm id for this RDS desktop or application session.\nThis is unset if the session is not brokered through a farm, such as for application sessions or direct console access."
        },
        "id" : {
          "type" : "string",
          "example" : "7cdd624f-37d1-46c1-ab96-695a5d13956f",
          "description" : "Unique id representing a session."
        },
        "idle_duration" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 60,
          "description" : "Idle time duration in minutes, indicating how long the end user of the session has been idle for.\nThis property need not be set."
        },
        "last_session_duration_ms" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 116320,
          "description" : "Duration of the last connection period of the session in milli seconds. If the session is currently connected, this is the duration that the session has been in connected state. If the session is currently disconnected, this is the duration of its previous connection period. This will be unset on error."
        },
        "machine_id" : {
          "type" : "string",
          "example" : "a00eda55-708a-4f7d-8cbc-1d1b3a2b5f73",
          "description" : "Unique machine id for the session. \nThis is unset for RDS Desktop or application sessions. If desktop pool id is unset, it is the id of registered un-managed physical machine."
        },
        "rds_server_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique RDS server id for the RDS desktop or application session.\nThis property need not be set."
        },
        "resourced_remotely" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the session is running on remote pod resource."
        },
        "security_gateway_data" : {
          "description" : "Security gateway data associated with the session.",
          "$ref" : "#/definitions/SecurityGatewayData"
        },
        "session_protocol" : {
          "type" : "string",
          "example" : "PCOIP",
          "description" : "Protocol for the session. \nIt will be unset for disconnected sessions.\n* PCOIP: Display protocol is PCoIP.\n* RDP: Display protocol is RDP.\n* BLAST: Display protocol is BLAST.\n* CONSOLE: Display protocol is console.\n* UNKNOWN: Display protocol is unknown.",
          "enum" : [ "PCOIP", "RDP", "BLAST", "CONSOLE", "UNKNOWN" ]
        },
        "session_state" : {
          "type" : "string",
          "example" : "CONNECTED",
          "description" : "State of session.\n* CONNECTED: Session is connected\n* DISCONNECTED: Session is disconnected\n* PENDING: Session is pending",
          "enum" : [ "CONNECTED", "DISCONNECTED", "PENDING" ]
        },
        "session_type" : {
          "type" : "string",
          "example" : "APPLICATION",
          "description" : "Type of session.\n* DESKTOP: Desktop or RDS desktop session.\n* APPLICATION: Application session.",
          "enum" : [ "DESKTOP", "APPLICATION" ]
        },
        "start_time" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582181831000,
          "description" : "Epoch time in milli seconds, when the session was originally logged in. \nThe lifecycle of a session begins at login and ends at logout, with any number of connect and disconnect occurrences in between. The first connection time will be shortly after this time. \nThis property need not be set."
        },
        "unauthenticated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether the session is of unauthenticated access user. \nThis property need not be set."
        },
        "user_id" : {
          "type" : "string",
          "example" : "S-1-5-21-1111111111-2222222222-3333333333-500",
          "description" : "Unique SID of the user logged into the session. \nIt may not match the broker user id for non-SSO scenarios."
        }
      },
      "title" : "SessionInfo",
      "description" : "Information related to Session."
    },
    "SessionSendMessageSpec" : {
      "type" : "object",
      "required" : [ "message", "message_type", "session_ids" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "example" : "Sample Info Message",
          "description" : "Message to be sent to session(s)."
        },
        "message_type" : {
          "type" : "string",
          "example" : "INFO",
          "description" : "Type of message to be sent to session(s).\n* ERROR: Message is of error type.\n* WARNING: Message is of warning type.\n* INFO: Message is of information type.",
          "enum" : [ "ERROR", "WARNING", "INFO" ]
        },
        "session_ids" : {
          "type" : "array",
          "example" : [ "7cdd624f-37d1-46c1-ab96-695a5d13956f" ],
          "description" : "List of session ids to which message is to be sent",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "SessionSendMessageSpec",
      "description" : "Information required to send message to sessions."
    },
    "SettingsInfo" : {
      "type" : "object",
      "required" : [ "feature_settings", "general_settings", "security_settings" ],
      "properties" : {
        "feature_settings" : {
          "description" : "Settings related to specific features.",
          "$ref" : "#/definitions/FeatureSettings"
        },
        "general_settings" : {
          "description" : "General settings determine session time-out lengths, status updates in Horizon Console, and whether prelogin and warning messages are displayed.",
          "$ref" : "#/definitions/GeneralSettings"
        },
        "security_settings" : {
          "description" : "Security settings determine whether Horizon clients are reauthenticated after interruptions, message security mode is enabled and SSO is used for local resource operations.",
          "$ref" : "#/definitions/SecuritySettings"
        }
      },
      "title" : "SettingsInfo",
      "description" : "Information related to Settings."
    },
    "SettingsUpdateSpec" : {
      "type" : "object",
      "properties" : {
        "feature_settings" : {
          "description" : "Settings related to specific features.",
          "$ref" : "#/definitions/FeatureSettingsUpdateSpec"
        },
        "general_settings" : {
          "description" : "General settings determine session time-out lengths, status updates in Horizon Console, and whether prelogin and warning messages are displayed.",
          "$ref" : "#/definitions/GeneralSettingsUpdateSpec"
        },
        "security_settings" : {
          "description" : "Security settings determine whether Horizon clients are reauthenticated after interruptions, message security mode is enabled, IPSec is used for security server connections, and SSO is used for local resource operations.",
          "$ref" : "#/definitions/SecuritySettingsUpdateSpec"
        }
      },
      "title" : "SettingsUpdateSpec",
      "description" : "Update specification for the configuration settings."
    },
    "StorageAcceleratorData" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "default_cache_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1024,
          "description" : "Default size of the cache in megabytes. This property has a default value of 1024. This property has a minimum value of 100. This property has a maximum value of 2048. "
        },
        "enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Is View Storage Accelerator enabled? This property has a default value of false."
        },
        "host_overrides" : {
          "type" : "array",
          "description" : "Cache size overrides for hosts which support View Storage Accelerator.",
          "items" : {
            "$ref" : "#/definitions/HostOverrideData"
          }
        }
      },
      "title" : "StorageAcceleratorData",
      "description" : "Information about the Storage Accelerator Data"
    },
    "TrueSSOMonitorInfo" : {
      "type" : "object",
      "required" : [ "ad_domain_dns_name", "ad_domain_id", "ad_domain_status", "certificate_server_details", "enabled", "id", "name", "primary_enrollment_server", "status", "template_name", "template_status" ],
      "properties" : {
        "ad_domain_dns_name" : {
          "type" : "string",
          "example" : "ad-domain.example.com",
          "description" : "The DNS name of the domain."
        },
        "ad_domain_id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the AD Domain."
        },
        "ad_domain_status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "The state of the domain health, taken as the most severe reported by one of the enrollment servers.\n* OK: The state of the domain is OK as reported by the enrollment servers.\n* WARN: At least one of the enrollment servers has a warning.\n* ERROR: At least one of the enrollment servers is in an error state.",
          "enum" : [ "OK", "WARN", "ERROR" ]
        },
        "certificate_server_details" : {
          "type" : "array",
          "description" : "Details of each certificate server.",
          "items" : {
            "$ref" : "#/definitions/CertificateServerDetails"
          }
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the True SSO connector is enabled."
        },
        "id" : {
          "type" : "string",
          "example" : "6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed50",
          "description" : "Unique ID of the True SSO Connector."
        },
        "name" : {
          "type" : "string",
          "example" : "true-sso.example.com",
          "description" : "True SSO connector name."
        },
        "primary_enrollment_server" : {
          "description" : "The primary enrollment server details.",
          "$ref" : "#/definitions/EnrollmentServerDetails"
        },
        "secondary_enrollment_server" : {
          "description" : "The secondary enrollment server details.",
          "$ref" : "#/definitions/EnrollmentServerDetails"
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Overall status of the True SSO connector.\n* OK: All the components of the True SSO connector are fine.\n* WARN: At least one component of the True SSO connector has a warning.\n* ERROR: At least one component of the True SSO connector has an error.",
          "enum" : [ "OK", "WARN", "ERROR" ]
        },
        "template_name" : {
          "type" : "string",
          "example" : "TrueSSO Template",
          "description" : "Unique name for the True SSO template."
        },
        "template_status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "The state of the template health, taken as the most severe reported by one of the enrollment servers.\n* OK: The state of the template is OK as reported by the enrollment servers.\n* WARN: At least one enrollment server reports a warning on this template.\n* ERROR: At least one enrollment server reports an error on this template.",
          "enum" : [ "OK", "WARN", "ERROR" ]
        }
      },
      "title" : "TrueSSOMonitorInfo",
      "description" : "Monitoring information related to the True SSO Connector."
    },
    "VCLimits" : {
      "type" : "object",
      "required" : [ "instant_clone_engine_provisioning_limit", "power_operations_limit", "provisioning_limit" ],
      "properties" : {
        "instant_clone_engine_provisioning_limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 20,
          "description" : "Maximum concurrent instant clone engine provisioning operations. This property has a default value of 20. This property has a minimum value of 1."
        },
        "power_operations_limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 50,
          "description" : "Maximum concurrent virtual center power operations. This property has a default value of 50. This property has a minimum value of 1."
        },
        "provisioning_limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 20,
          "description" : "Maximum concurrent virtual center provisioning operations. This property has a default value of 20. This property has a minimum value of 1."
        }
      },
      "title" : "VCLimits",
      "description" : "Information about the limits configured for Virtual Center"
    },
    "VCMonitorConnectionServer" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "certificate" : {
          "description" : "The certificate data.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Virtual Center Connection with respect to this Connection Server.\n* OK: The connection to Virtual Center server is working properly.\n* DOWN: The connection to Virtual Center server is down.\n* RECONNECTING: The connection to Virtual Center server was lost and is being reconnected to.\n* UNKNOWN: Connection state to Virtual Center server is unknown.\n* INVALID_CREDENTIALS: The supplied credentials cannot be used to authenticate to the Virtual Center server.\n* CANNOT_LOGIN: The connection server cannot login to the Virtual Center server.\n* NOT_YET_CONNECTED: Connection server has not yet connected to Virtual Center server.",
          "enum" : [ "OK", "DOWN", "RECONNECTING", "UNKNOWN", "INVALID_CREDENTIALS", "CANNOT_LOGIN", "NOT_YET_CONNECTED" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the thumbprints of the Virtual Center was accepted."
        }
      },
      "title" : "VCMonitorConnectionServer",
      "description" : "Information about connection to Virtual Center from Connection Server."
    },
    "VCMonitorConnectionServerV2" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "certificate" : {
          "description" : "The certificate data.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the Virtual Center Connection with respect to this Connection Server.\n* OK: The connection to Virtual Center server is working properly.\n* DOWN: The connection to Virtual Center server is down.\n* RECONNECTING: The connection to Virtual Center server was lost and is being reconnected to.\n* UNKNOWN: Connection state to Virtual Center server is unknown.\n* INVALID_CREDENTIALS: The supplied credentials cannot be used to authenticate to the Virtual Center server.\n* CANNOT_LOGIN: The connection server cannot login to the Virtual Center server.\n* NOT_YET_CONNECTED: Connection server has not yet connected to Virtual Center server.",
          "enum" : [ "OK", "DOWN", "RECONNECTING", "UNKNOWN", "INVALID_CREDENTIALS", "CANNOT_LOGIN", "NOT_YET_CONNECTED" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the thumbprints of the Virtual Center was accepted."
        }
      },
      "title" : "VCMonitorConnectionServerV2",
      "description" : "Information about connection to Virtual Center from Connection Server."
    },
    "VCMonitorDatastore" : {
      "type" : "object",
      "required" : [ "capacity_mb", "details", "free_space_mb", "status", "type" ],
      "properties" : {
        "capacity_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12345,
          "description" : "The capacity of the datastore in megabytes."
        },
        "details" : {
          "description" : "Details about the datastore.",
          "$ref" : "#/definitions/VCMonitorDatastoreDetails"
        },
        "free_space_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12345,
          "description" : "The free space on the datastore in megabytes."
        },
        "status" : {
          "type" : "string",
          "example" : "ACCESSIBLE",
          "description" : "Status of the datastore.\n* ACCESSIBLE: The datastore is accessible.\n* NOT_ACCESSIBLE: The datastore is not accessible.",
          "enum" : [ "ACCESSIBLE", "NOT_ACCESSIBLE" ]
        },
        "type" : {
          "type" : "string",
          "example" : "VSAN",
          "description" : "Type of the datastore.\n* VMFS: VMFS datastore.\n* VSAN: VSAN datastore.",
          "enum" : [ "VMFS", "VSAN" ]
        }
      },
      "title" : "VCMonitorDatastore",
      "description" : "Information about the datastore of the host(s) connected to the given Virtual Center."
    },
    "VCMonitorDatastoreDetails" : {
      "type" : "object",
      "required" : [ "name", "path", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "vsandatastore",
          "description" : "Datastore name."
        },
        "path" : {
          "type" : "string",
          "example" : "/datacenter1/vsandatastore",
          "description" : "Path to the datastore."
        },
        "url" : {
          "type" : "string",
          "example" : "ds:///vmfs/volumes/vsan:52654c2aa8e79416-8ea7a3309e82c7b7/",
          "description" : "Unique locator for datastore."
        }
      },
      "title" : "VCMonitorDatastoreDetails",
      "description" : "Details about the datastore."
    },
    "VCMonitorDetails" : {
      "type" : "object",
      "required" : [ "api_version", "build", "version" ],
      "properties" : {
        "api_version" : {
          "type" : "string",
          "example" : "6.5",
          "description" : "API Version of the Virtual Center."
        },
        "build" : {
          "type" : "string",
          "example" : "12345678.0.1",
          "description" : "Build number of the Virtual Center."
        },
        "version" : {
          "type" : "string",
          "example" : "6.5.0",
          "description" : "Version of the Virtual Center."
        }
      },
      "title" : "VCMonitorDetails",
      "description" : "Details about the Virtual Center."
    },
    "VCMonitorHost" : {
      "type" : "object",
      "required" : [ "details", "status" ],
      "properties" : {
        "cpu_core_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 16,
          "description" : "Number of physical CPU cores on the host."
        },
        "cpu_mhz" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2194,
          "description" : "CPU speed per core in Mhz. This might be an averaged value if the speed is not uniform across all cores."
        },
        "details" : {
          "description" : "Details of the ESX Host.",
          "$ref" : "#/definitions/VCMonitorHostDetails"
        },
        "memory_size_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12345,
          "description" : "The physical memory size in mega bytes."
        },
        "status" : {
          "type" : "string",
          "example" : "CONNECTED",
          "description" : "Status of the host connection.\n* CONNECTED: The host is successfully connected to Virtual Center server.\n* DISCONNECTED: The host is disconnected from Virtual Center server.\n* NOT_RESPONDING: The host is not responding.",
          "enum" : [ "CONNECTED", "DISCONNECTED", "NOT_RESPONDING" ]
        }
      },
      "title" : "VCMonitorHost",
      "description" : "Information about the host connected to a Virtual Center."
    },
    "VCMonitorHostDetails" : {
      "type" : "object",
      "required" : [ "api_version", "cluster_name", "name", "version" ],
      "properties" : {
        "api_version" : {
          "type" : "string",
          "example" : "6.5",
          "description" : "API Version of the ESX Host."
        },
        "cluster_name" : {
          "type" : "string",
          "example" : "cluster-1",
          "description" : "Name of the cluster of the ESX Host in the Virtual Center."
        },
        "name" : {
          "type" : "string",
          "example" : "host1.example.com",
          "description" : "ESX Host name or IP address."
        },
        "version" : {
          "type" : "string",
          "example" : "6.5.0",
          "description" : "ESX Host version."
        },
        "vgpu_types" : {
          "type" : "array",
          "description" : "Types of vGPUs supported by this host.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "VCMonitorHostDetails",
      "description" : "Details of the ESX host of the Virtual Center."
    },
    "VMFolderInfo" : {
      "type" : "object",
      "properties" : {
        "children" : {
          "type" : "array",
          "example" : [ ],
          "description" : "Child nodes of the VM folder.",
          "items" : {
            "$ref" : "#/definitions/VMFolderInfo"
          }
        },
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter id for this VM folder."
        },
        "id" : {
          "type" : "string",
          "example" : "group-v1",
          "description" : "Unique ID representing the VM folder."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this VM folder from being used in desktop pool or farm.",
          "items" : {
            "type" : "string",
            "enum" : [ "IN_USE", "REPLICA_FOLDER" ]
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Discovered virtual machine",
          "description" : "VM folder name."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/vm/Discovered virtual machine",
          "description" : "VM folder path."
        },
        "type" : {
          "type" : "string",
          "example" : "FOLDER",
          "description" : "VM folder type.\n* DATACENTER: A datacenter that serves as a folder suitable for use in desktop pool/farm.\n* FOLDER: A regular folder suitable for use in desktop pool/farm.\n* OTHER: Other folder type that cannot be used in desktop pool/farm.",
          "enum" : [ "DATACENTER", "FOLDER", "OTHER" ]
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Virtual Center id for this VM folder."
        }
      },
      "title" : "VMFolderInfo",
      "description" : "Information related to VM folder."
    },
    "VMTemplateInfo" : {
      "type" : "object",
      "required" : [ "datacenter_id", "disk_size_in_bytes", "id", "incompatible_reasons", "memory_mb", "name", "operating_system", "operating_system_display_name", "path", "vcenter_id" ],
      "properties" : {
        "datacenter_id" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Datacenter id for this VM template."
        },
        "disk_size_in_bytes" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 42949672960,
          "description" : "Sum of capacities of all the virtual disks in the template, in bytes."
        },
        "id" : {
          "type" : "string",
          "example" : "vm-1",
          "description" : "Unique ID representing a VM template."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this VM template from being used in full clone desktop pool creation.",
          "items" : {
            "type" : "string",
            "enum" : [ "UNSUPPORTED_OS" ]
          }
        },
        "memory_mb" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 4096,
          "description" : "Memory size of the VM template, in MB"
        },
        "name" : {
          "type" : "string",
          "example" : "Win10Template",
          "description" : "VM template name."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "operating_system_display_name" : {
          "type" : "string",
          "example" : "Microsoft Windows 10 (64-bit)",
          "description" : "Operating system display name from Virtual Center."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/vm/Templates/Win10Template",
          "description" : "VM template path."
        },
        "vcenter_id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "ID of the vCenter to which this VM template belongs to."
        },
        "vgpu_type" : {
          "type" : "string",
          "description" : "NVIDIA GRID vGPU type configured on this VM template."
        }
      },
      "title" : "VMTemplateInfo",
      "description" : "Information related to VM template."
    },
    "ViewComposerMonitorConnectionServer" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "certificate" : {
          "description" : "Information related to certificate.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the View Composer with respect to this Connection Server.\n* OK: The connection to View Composer server is working properly.\n* MALFORMED_URL: The connection to View Composer server was not possible due to a malformed URL.\n* ERROR: Error occurred when connecting to View Composer server.\n* CERT_ERROR: Certificate validation error when connecting to the View Composer server.",
          "enum" : [ "OK", "MALFORMED_URL", "ERROR", "CERT_ERROR" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the thumbprint of the View Composer was accepted."
        }
      },
      "title" : "ViewComposerMonitorConnectionServer",
      "description" : "Information about the View Composer connection from connection server."
    },
    "ViewComposerMonitorConnectionServerV2" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "thumbprint_accepted" ],
      "properties" : {
        "certificate" : {
          "description" : "Information related to certificate.",
          "$ref" : "#/definitions/CertificateMonitorInfo"
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Connection Server."
        },
        "last_updated_timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1582029025748,
          "description" : "The timestamp in milliseconds when the last update was obtained. Measured as epoch time."
        },
        "name" : {
          "type" : "string",
          "example" : "cs1.example.com",
          "description" : "Connection server host name or IP address."
        },
        "status" : {
          "type" : "string",
          "example" : "OK",
          "description" : "Status of the View Composer with respect to this Connection Server.\n* OK: The connection to View Composer server is working properly.\n* MALFORMED_URL: The connection to View Composer server was not possible due to a malformed URL.\n* ERROR: Error occurred when connecting to View Composer server.\n* CERT_ERROR: Certificate validation error when connecting to the View Composer server.",
          "enum" : [ "OK", "MALFORMED_URL", "ERROR", "CERT_ERROR" ]
        },
        "thumbprint_accepted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the thumbprint of the View Composer was accepted."
        }
      },
      "title" : "ViewComposerMonitorConnectionServerV2",
      "description" : "Information about the View Composer connection from connection server."
    },
    "ViewComposerMonitorDetails" : {
      "type" : "object",
      "required" : [ "api_verion", "build", "min_esx_version", "min_vc_version", "referenced_vcs", "version" ],
      "properties" : {
        "api_verion" : {
          "type" : "string",
          "example" : "3.5",
          "description" : "The version of the View Composer API used to communicate with the View Composer server."
        },
        "build" : {
          "type" : "string",
          "example" : "1234567",
          "description" : "The build of the View Composer server."
        },
        "min_esx_version" : {
          "type" : "string",
          "example" : "5.5",
          "description" : "The minimum ESX version required for compatibility with this View Composer server."
        },
        "min_vc_version" : {
          "type" : "string",
          "example" : "5.5",
          "description" : "The minimum Virtual Center version required for compatibility with this View Composer server."
        },
        "referenced_vcs" : {
          "type" : "array",
          "description" : "The Virtual Center servers referencing to this View Composer.",
          "items" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "string",
          "example" : "7.9.0.12345",
          "description" : "The version of the View Composer server."
        }
      },
      "title" : "ViewComposerMonitorDetails",
      "description" : "Details of the View Composer."
    },
    "ViewComposerMonitorInfo" : {
      "type" : "object",
      "required" : [ "connection_servers", "details", "name", "port" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the View Composer connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/ViewComposerMonitorConnectionServer"
          }
        },
        "details" : {
          "description" : "Details about the View Composer.",
          "$ref" : "#/definitions/ViewComposerMonitorDetails"
        },
        "name" : {
          "type" : "string",
          "example" : "composer1.example.com",
          "description" : "View Composer server host name or IP address."
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 18443,
          "description" : "View Composer server port number.",
          "minimum" : 0,
          "maximum" : 65535,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        }
      },
      "title" : "ViewComposerMonitorInfo",
      "description" : "Monitoring information related to View Composer."
    },
    "ViewComposerMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "connection_servers", "details", "name", "port" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the View Composer connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/ViewComposerMonitorConnectionServerV2"
          }
        },
        "details" : {
          "description" : "Details about the View Composer.",
          "$ref" : "#/definitions/ViewComposerMonitorDetails"
        },
        "name" : {
          "type" : "string",
          "example" : "composer1.example.com",
          "description" : "View Composer server host name or IP address."
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 18443,
          "description" : "View Composer server port number.",
          "minimum" : 0,
          "maximum" : 65535,
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false
        }
      },
      "title" : "ViewComposerMonitorInfoV2",
      "description" : "Monitoring information related to View Composer."
    },
    "ViewStorageAcceleratorBlackoutTimeSettings" : {
      "type" : "object",
      "properties" : {
        "days" : {
          "type" : "array",
          "description" : "List of days for a given range of time.",
          "items" : {
            "type" : "string",
            "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY", "ALL" ]
          }
        },
        "end_time" : {
          "type" : "string",
          "example" : "22:00",
          "description" : "Ending time for the blackout in 24-hour format."
        },
        "start_time" : {
          "type" : "string",
          "example" : "10:00",
          "description" : "Starting time for the blackout in 24-hour format."
        }
      },
      "title" : "ViewStorageAcceleratorBlackoutTimeSettings",
      "description" : "Fields for specifying blackout time for View Storage Accelerator. Storage accelerator regeneration and VM disk space reclamation do not occur during blackout times. The same blackout policy applies to both operations."
    },
    "VirtualCenterInfo" : {
      "type" : "object",
      "required" : [ "enabled", "id", "limits", "port", "se_sparse_reclamation_enabled", "server_name", "storage_accelerator_data", "use_ssl", "user_name", "version" ],
      "properties" : {
        "certificate_override" : {
          "description" : "Virtual center certificate thumbprint should the client choose to override an invalid certificate.",
          "$ref" : "#/definitions/CertificateOverrideData"
        },
        "description" : {
          "type" : "string",
          "example" : "Virtual Center Server",
          "description" : "Human readable description of the Virtual Center instance."
        },
        "display_name" : {
          "type" : "string",
          "example" : "vc1.example.com",
          "description" : "Human readable name of the Virtual Center instance."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the virtual center is enabled."
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Virtual Center."
        },
        "instance_uuid" : {
          "type" : "string",
          "example" : "6605d116-d1b5-4810-8e3a-b710b30993da",
          "description" : "Virtual center's instanceUuid."
        },
        "limits" : {
          "description" : "Virtual center's limits for the number of concurrent operations.",
          "$ref" : "#/definitions/VCLimits"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 443,
          "description" : "Port of the virtual center to connect to."
        },
        "se_sparse_reclamation_enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if Storage Efficiency Sparse (seSparse) reclamation is enabled."
        },
        "server_name" : {
          "type" : "string",
          "example" : "vc1.example.com",
          "description" : "Virtual Center's server name or IP address."
        },
        "storage_accelerator_data" : {
          "description" : "Storage Accelerator configuration details.",
          "$ref" : "#/definitions/StorageAcceleratorData"
        },
        "use_ssl" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if SSL should be used when connecting to the server."
        },
        "user_name" : {
          "type" : "string",
          "example" : "administrator@vsphere.local",
          "description" : "User name to use for the connection."
        },
        "version" : {
          "type" : "string",
          "example" : "6.5.0",
          "description" : "Version of the Virtual Center."
        },
        "vmc_deployment" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if virtual center is deployed in VMC."
        }
      },
      "title" : "VirtualCenterInfo",
      "description" : "Information related to Virtual Center."
    },
    "VirtualCenterMonitorInfo" : {
      "type" : "object",
      "required" : [ "connection_servers", "datastores", "desktops_count", "details", "hosts", "id", "name" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the Virtual Center connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorConnectionServer"
          }
        },
        "datastores" : {
          "type" : "array",
          "description" : "Information about the datastores of the Virtual Center.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorDatastore"
          }
        },
        "desktops_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of Desktop Pools And Farms managed by the virtual center."
        },
        "details" : {
          "description" : "Details about the Virtual Center.",
          "$ref" : "#/definitions/VCMonitorDetails"
        },
        "hosts" : {
          "type" : "array",
          "description" : "Information about the ESX hosts added in the Virtual Center.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorHost"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Virtual Center."
        },
        "name" : {
          "type" : "string",
          "example" : "vc1.example.com",
          "description" : "Virtual Center server name or IP address."
        }
      },
      "title" : "VirtualCenterMonitorInfo",
      "description" : "Monitoring information related to a Virtual Center"
    },
    "VirtualCenterMonitorInfoV2" : {
      "type" : "object",
      "required" : [ "connection_servers", "datastores", "desktop_pools_and_farms_count", "details", "hosts", "id", "name" ],
      "properties" : {
        "connection_servers" : {
          "type" : "array",
          "description" : "Information about the Virtual Center connections from each of the connection servers.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorConnectionServerV2"
          }
        },
        "datastores" : {
          "type" : "array",
          "description" : "Information about the datastores of the Virtual Center.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorDatastore"
          }
        },
        "desktop_pools_and_farms_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of Desktop Pools And Farms managed by the virtual center"
        },
        "details" : {
          "description" : "Details about the Virtual Center.",
          "$ref" : "#/definitions/VCMonitorDetails"
        },
        "hosts" : {
          "type" : "array",
          "description" : "Information about the ESX hosts added in the Virtual Center.",
          "items" : {
            "$ref" : "#/definitions/VCMonitorHost"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Unique ID of the Virtual Center."
        },
        "name" : {
          "type" : "string",
          "example" : "vc1.example.com",
          "description" : "Virtual Center server name or IP address."
        }
      },
      "title" : "VirtualCenterMonitorInfoV2",
      "description" : "Monitoring information related to a Virtual Center"
    },
    "VirtualDiskData" : {
      "type" : "object",
      "required" : [ "capacity_mb", "datastore_path", "path" ],
      "properties" : {
        "capacity_mb" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 102400,
          "description" : "The disk capacity in MB."
        },
        "datastore_path" : {
          "type" : "string",
          "example" : "datastore1",
          "description" : "The virtual disk's datastore."
        },
        "path" : {
          "type" : "string",
          "example" : "/path/host",
          "description" : "The virtual disk path."
        }
      },
      "title" : "VirtualDiskData",
      "description" : "Information related to a virtual disk."
    },
    "VirtualMachineInfo" : {
      "type" : "object",
      "required" : [ "hardware_version", "id", "name", "operating_system", "operating_system_display_name", "path", "v_gputype" ],
      "properties" : {
        "hardware_version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
          "description" : "Hardware version for this VM."
        },
        "id" : {
          "type" : "string",
          "example" : "vm-416",
          "description" : "Unique ID representing a VM."
        },
        "incompatible_reasons" : {
          "type" : "array",
          "description" : "Reasons that may preclude this Virtual Machine from having its snapshots used in linked or instant clone desktop or farm.",
          "items" : {
            "type" : "string",
            "enum" : [ "IN_USE_BY_LOCAL_DESKTOP_POOL", "IN_USE_BY_NON_LOCAL_DESKTOP_POOL", "VIEW_COMPOSER_REPLICA", "VIEW_COMPOSER_BASE_IMAGE", "UNSUPPORTED_OS", "INCOMPATIBLE_GRID_VGPUS", "INSTANT_INTERNAL", "INSTANT_CLONE_BASE_IMAGE" ]
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Win10",
          "description" : "VM name."
        },
        "operating_system" : {
          "type" : "string",
          "example" : "WINDOWS_10",
          "description" : "Operating system.\n* UNKNOWN: Unknown\n* WINDOWS_XP: Windows XP\n* WINDOWS_VISTA: Windows Vista\n* WINDOWS_7: Windows 7\n* WINDOWS_8: Windows 8\n* WINDOWS_10: Windows 10\n* WINDOWS_SERVER_2003: Windows Server 2003\n* WINDOWS_SERVER_2008: Windows Server 2008\n* WINDOWS_SERVER_2008_R2: Windows Server 2008 R2\n* WINDOWS_SERVER_2012: Windows Server 2012\n* WINDOWS_SERVER_2012_R2: Windows Server 2012 R2\n* WINDOWS_SERVER_2016_OR_ABOVE: Windows Server 2016 or above\n* LINUX_OTHER: Linux (other)\n* LINUX_SERVER_OTHER: Linux server (other)\n* LINUX_UBUNTU: Linux (Ubuntu)\n* LINUX_RHEL: Linux (Red Hat Enterprise)\n* LINUX_SUSE: Linux (Suse)\n* LINUX_CENTOS: Linux (CentOS)",
          "enum" : [ "UNKNOWN", "WINDOWS_XP", "WINDOWS_VISTA", "WINDOWS_7", "WINDOWS_8", "WINDOWS_10", "WINDOWS_SERVER_2003", "WINDOWS_SERVER_2008", "WINDOWS_SERVER_2008_R2", "WINDOWS_SERVER_2012", "WINDOWS_SERVER_2012_R2", "WINDOWS_SERVER_2016_OR_ABOVE", "LINUX_OTHER", "LINUX_SERVER_OTHER", "LINUX_UBUNTU", "LINUX_RHEL", "LINUX_SUSE", "LINUX_CENTOS" ]
        },
        "operating_system_display_name" : {
          "type" : "string",
          "example" : "Microsoft Windows 10 (64-bit)",
          "description" : "Operating system display name from Virtual Center."
        },
        "path" : {
          "type" : "string",
          "example" : "/Datacenter/vm/VMs/Win10",
          "description" : "VM path."
        },
        "v_gputype" : {
          "type" : "string",
          "example" : "datacenter-1",
          "description" : "Virtual GPU type."
        }
      },
      "title" : "VirtualMachineInfo",
      "description" : "Information related to a Virtual Machine."
    }
  }
}